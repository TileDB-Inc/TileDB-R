on:
  push:
  pull_request:

name: windows

jobs:
  windows:
    runs-on: ${{ matrix.windows }}
    strategy:
      fail-fast: false
      matrix:
        include: [
          { windows: windows-latest, r: release    },
          { windows: windows-latest, r: devel      }
        ]
    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r }}
      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
        env:
          R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
        shell: Rscript {0}
      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--no-vignettes", "--as-cran"), build_args = c("--no-build-vignettes"), error_on = "error", check_dir = "check")
        shell: Rscript {0}
      - name: Show install log
        if: failure()
        run: |
          installfile <- "check/tiledb.Rcheck/00install.out"
          if (file.exists(installfile)) writeLines(readLines(installfile))
        shell: Rscript {0}
      - name: Show check log
        if: failure()
        run: |
          checkfile <- "check/tiledb.Rcheck/00check.log"
          if (file.exists(checkfile)) writeLines(readLines(checkfile))
        shell: Rscript {0}
