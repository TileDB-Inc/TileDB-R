[{"path":"https://tiledb-inc.github.io/TileDB-R/articles/data-ingestion-from-sql.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Date Ingestion from SQL: A Commented Example","text":"TileDB provides Universal Data Engine can accessed variety ways. Users sometimes wonder transfer data existing databases. short vignettes shows example relying DBI package R. offers powerful convenient abstraction layer top number database backends connection packages adhere , utilise, DBI framework. examples packages (listed alphabetical order) duckdb, RClickhouse, RGreenplum, RJDBC, RMariaDB, RMySQL, ROracle, RPostgres, RPostgreSQL, RPresto, RRedshiftSQL, RSQLite, many seen via CRAN page. provide simple example using RPostgreSQL existing database historical stockmarket price data.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/data-ingestion-from-sql.html","id":"load-required-packages","dir":"Articles","previous_headings":"","what":"Load Required Packages","title":"Date Ingestion from SQL: A Commented Example","text":"basic setup straightforward. load required package RPostgreSQL turn imports DBI well tiledb. use data.table print method, tibble package offers alternative):","code":"library(RPostgreSQL) library(data.table) library(tiledb)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/data-ingestion-from-sql.html","id":"connect-to-database","dir":"Articles","previous_headings":"","what":"Connect to Database","title":"Date Ingestion from SQL: A Commented Example","text":"step uses DBI abstraction. compliant backend driver can loaded via dbDriver, connection can established via dbConnect using appropriate arguments dbname, user, password, host, port, needed, proper dispatching implementation provided driver. details depend chosen backend, can simple con <- dbConnect(RSQLite::SQLite(), \":memory:\") case RSQLite -memory (likely transient) database.","code":"## a local SQL db we have here -- about 617k rows dbSetup <- function() {     drv <- dbDriver(\"PostgreSQL\")     con <- dbConnect(drv,                      user=\"...omitted...\",                      password=\"...omitted...\", # Could use e.g. Sys.getenv(\"DB_PASSWD\")                      dbname=\"...omitted...\")     con }"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/data-ingestion-from-sql.html","id":"fetch-data","dir":"Articles","previous_headings":"","what":"Fetch Data","title":"Date Ingestion from SQL: A Commented Example","text":"next step fetch data—simplicity issue just one select statement returning single data.frame (data.table variant). larger--memory settings SQL query easily bucket symbols, date range, …","code":"getDataFromSQL <- function() {     con <- dbSetup()     sql <- \"select * from stockprices order by symbol, date;\"     res <- dbGetQuery(con, sql)     dbDisconnect(con)     setDT(res)                          # create data.table     res }"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/data-ingestion-from-sql.html","id":"writing-data-to-tiledb","dir":"Articles","previous_headings":"","what":"Writing Data to TileDB","title":"Date Ingestion from SQL: A Commented Example","text":"read data memory can use TileDB R function fromDataFrame. numerous option configure, well sensible defaults (example enable ZSTD compression). select first two columns symbol data dimensions. Symbols, text, set domain set. date set two ‘safe’ outer values range. mode=\"append\" argument fromDataFrame can used append existing array support chunked operation.","code":"storeDataTDB <- function(dat, uri) {     fromDataFrame(dat, uri,                   col_index=1:2,                   tile_domain=list(date=c(as.numeric(as.Date(\"1985-01-01\")),                                           as.numeric(as.Date(\"2030-12-31\"))))) }"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/data-ingestion-from-sql.html","id":"reading-data-back-in","dir":"Articles","previous_headings":"Writing Data to TileDB","what":"Reading Data Back In","title":"Date Ingestion from SQL: A Commented Example","text":"Reading data TileDB standard operation opening URI, possibly specifying return type possibly subsetting dimension values, attributes. , simplicity, just read everything.","code":"getDataTDB <- function(uri) {     set_allocation_size_preference(1e7) # larger than local default value     arr <- tiledb_array(uri, return_as=\"data.frame\")     res <- arr[]     res }  uri <- \"/tmp/tiledb/beancounter\"  res <- getDataFromSQL(con) storeData(dat, uri) chk <- getDataTDB(uri) print(dim(chk)) cat(\"Done!\\n\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/data-ingestion-from-sql.html","id":"see-also","dir":"Articles","previous_headings":"","what":"See Also","title":"Date Ingestion from SQL: A Commented Example","text":"vignette TileDB MariaDB Examples shows use MariaDB via MyTile integration TileDB direct backend. TileDB R Tutorial useR! 2021 contained worked example writing much larger data set chunks. process similar simple example showed – addition requires suffient domain range dimension along (sequential parallel) loop reading chunks writing TileDB.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/data-ingestion-from-sql.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Date Ingestion from SQL: A Commented Example","text":"vignette provides commented walk-worked example SQL--TileDB data ingestion.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"prelimaries","dir":"Articles","previous_headings":"","what":"Prelimaries","title":"TileDB API Documentation","text":"show two initial basic examples dense sparse array simply create array data disk refer later examples follow.","code":"library(tiledb)  tdir <- tempdir() uridense <- file.path(tdir, \"dense\") uridensefix <- file.path(tdir, \"densefix\") uridensevar <- file.path(tdir, \"densevar\") uridensewkey <- file.path(tdir, \"denseenc\")  create_array <- function(array_name) {     # Check if the array already exists.     if (tiledb_object_type(array_name) == \"ARRAY\") {         message(\"Array already exists.\")         return(invisible(NULL))     }      # The array will be 4x4 with dimensions \"rows\" and \"cols\", with domain [1,4].     dom <- tiledb_domain(dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                                   tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\")))      # The array will be dense with a single attribute \"a\" so each (i,j) cell can store an integer.     schema <- tiledb_array_schema(dom, attrs = tiledb_attr(\"a\", type = \"INT32\"))      # Create the (empty) array on disk, and return the path invisibly     invisible(tiledb_array_create(array_name, schema)) }  write_array <- function(array_name) {     data <- array(c(c(1L, 5L, 9L, 13L),                     c(2L, 6L, 10L, 14L),                     c(3L, 7L, 11L, 15L),                     c(4L, 8L, 12L, 16L)), dim = c(4,4))     # Open the array and write to it.     A <- tiledb_array(uri = array_name)     A[] <- data }  create_array(uridense) write_array(uridense)   urisparse <- file.path(tdir, \"sparse\")  create_array <- function(array_name) {     # Check if the array already exists.     if (tiledb_object_type(array_name) == \"ARRAY\") {         message(\"Array already exists.\")         return(invisible(NULL))     }      # The array will be 4x4 with dimensions \"rows\" and \"cols\", with domain [1,4].     dom <- tiledb_domain(dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                                   tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\")))      # The array will be dense with a single attribute \"a\" so each (i,j) cell can store an integer.     schema = tiledb_array_schema(dom, attrs=tiledb_attr(\"a\", type = \"INT32\"), sparse = TRUE)      # Create the (empty) array on disk, and return the path invisibly.     invisible(tiledb_array_create(array_name, schema)) }  write_array <- function(array_name) {     I <- c(1, 2, 2)     J <- c(1, 4, 3)     data <- c(1L, 2L, 3L)     # Open the array and write to it.     A <- tiledb_array(uri = array_name)     A[I, J] <- data }  create_array(urisparse) write_array(urisparse)  close_and_reopen <- function(arr, txt) {   res <- tiledb:::libtiledb_array_close(arr@ptr)   res <- tiledb:::libtiledb_array_open_with_ptr(arr@ptr, txt) }"},{"path":[]},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"creating-dimensions","dir":"Articles","previous_headings":"API Usage > Creating Arrays","what":"Creating Dimensions","title":"TileDB API Documentation","text":"","code":"library(tiledb)  # Create dimension dim <- tiledb_dim(\"dim1\", c(1L, 4L), 2L, \"INT32\")  # String dimenions: no values for domain and extent strdim <- tiledb_dim(\"dim2\", NULL, NULL, \"ASCII\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"creating-the-array-domain","dir":"Articles","previous_headings":"API Usage > Creating Arrays","what":"Creating the Array Domain","title":"TileDB API Documentation","text":"","code":"library(tiledb)  #  .. create dimensions `dim1`, `dim2` dim1 <- tiledb_dim(\"dim1\", c(1L, 4L), 2L, \"INT32\") dim2 <- tiledb_dim(\"dim2\", c(1L, 2L), 2L, \"INT32\")  # Create domain with two dimensions # In C++: domain.add_dimensions(dim1).add_dimension(dim2) dom <- tiledb_domain(dims = c(dim1, dim2))"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"creating-attributes","dir":"Articles","previous_headings":"API Usage > Creating Arrays","what":"Creating Attributes","title":"TileDB API Documentation","text":"","code":"# Create attribute attr <- tiledb_attr(\"attr\", type = \"INT32\")  # Create attribute attr <- tiledb_attr(\"a1\", type = \"INT32\")  # Access cell value via generic or functions cell_val_num(attr) tiledb_attribute_get_cell_val_num(attr)  ## Attribute value counts can be set via a generic method and a direct method cell_val_num(attr) <- 3 tiledb_attribute_set_cell_val_num(attr, 3)  ## set char attribute to variable length which is encoded as a NA cell_val_num(attr) <- NA tiledb_attribute_set_cell_val_num(attr, NA)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-fill-values","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Creating Attributes","what":"Setting Fill Values","title":"TileDB API Documentation","text":"","code":"# ... create int attribute attr attr <- tiledb_attr(\"a1\", type = \"INT32\") # set fill value to 42L tiledb_attribute_set_fill_value(attr, 42L)  # ... create variable-sized attributte attr attr <- tiledb_attr(\"attr\", type = \"CHAR\") tiledb_attribute_set_cell_val_num(attr, 3) # set fill value to \"...\" tiledb_attribute_set_fill_value(attr, \"...\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-a-compressor","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Creating Attributes","what":"Setting a Compressor","title":"TileDB API Documentation","text":"","code":"comp <- tiledb_filter(\"GZIP\") tiledb_filter_set_option(comp,\"COMPRESSION_LEVEL\", 10)  # Create a filter list with the compressor filter_list <- tiledb_filter_list(comp)  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-other-filters","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Creating Attributes","what":"Setting Other Filters","title":"TileDB API Documentation","text":"","code":"# Create filters f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\")  # Create a filter list with the two filters filter_list <- tiledb_filter_list(c(f1,f2))  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"creating-the-array-schema","dir":"Articles","previous_headings":"API Usage > Creating Arrays","what":"Creating the Array Schema","title":"TileDB API Documentation","text":"","code":"# ... create domain dom attr1 <- tiledb_attr(\"attr1\", \"INT32\", filter_list = filter_list) attr2 <- tiledb_attr(\"attr2\", \"FLOAT64\", filter_list = filter_list)  # Create a dense array schema <- tiledb_array_schema(dom, c(attr1, attr2), sparse = FALSE) # Or, create a sparse array # schema <- tiledb_array_schema(dom, c(attr1, attr2), sparse = TRUE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-the-tile-and-cell-order","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Creating the Array Schema","what":"Setting the Tile and Cell Order","title":"TileDB API Documentation","text":"","code":"# ... create domain dom # ... create attributes attr1, attr2  # The tile and order can be \"COL_MAJOR\" or \"ROW_MAJOR\" schema <- tiledb_array_schema(dom, c(attr1, attr2),                               cell_order = \"COL_MAJOR\",                               tile_order = \"COL_MAJOR\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-the-data-tile-capacity","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Creating the Array Schema","what":"Setting the Data Tile Capacity","title":"TileDB API Documentation","text":"","code":"# set capacity capacity(schema) <- 100000 tiledb_array_schema_set_capacity(schema, 10000)  # get capacity capacity(schema) tiledb_array_schema_get_capacity(schema)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"allowing-duplicates","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Creating the Array Schema","what":"Allowing Duplicates","title":"TileDB API Documentation","text":"","code":"sch <- schema(urisparse)  # get 'duplicates allowed?' status allows_dups(sch) tiledb_array_schema_get_allows_dups(sch)  # set 'duplicates allowed?' status allows_dups(sch) <- TRUE tiledb_array_schema_set_allows_dups(sch, TRUE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"checking-correctness","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Creating the Array Schema","what":"Checking Correctness","title":"TileDB API Documentation","text":"","code":"check(sch) tiledb_array_schema_check(sch)"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"creating-a-filter-list","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Setting Filters","what":"Creating a Filter List","title":"TileDB API Documentation","text":"","code":"# create a \"GZIP\" compression filter flt <- tiledb_filter(\"GZIP\") # set the option 'COMPRESSION_LEVEL' to 10 tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 10)  # create a filter list with this filter fltlst <- tiledb_filter_list(flt)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"other-filters","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Setting Filters","what":"Other Filters","title":"TileDB API Documentation","text":"","code":"# create a filter list object with both fltlst <- tiledb_filter_list(c(flt1, flt2))"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-the-tile-chunk-size","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Setting Filters","what":"Setting the Tile Chunk Size","title":"TileDB API Documentation","text":"","code":"# ... create filter list set_max_chunk_size(filter_list, 10000) tiledb_filter_list_set_max_chunk_size(filter_list, 10000)  max_chunk_size(filter_list) tiledb_filter_list_get_max_chunk_size(filter_list)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-a-filter-list-for-an-attribute","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Setting Filters","what":"Setting a Filter List for an Attribute","title":"TileDB API Documentation","text":"","code":"# create (or access) an attribute attr <- tiledb_attr(\"a\", \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # set the filter list filter_list(attr) <- fltlst"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-a-filter-list-for-a-dimension","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Setting Filters","what":"Setting a Filter List for a Dimension","title":"TileDB API Documentation","text":"","code":"d <- tiledb_dim(\"d\", c(1L, 10L), 1L, \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # assign the filter list filter_list(d) <- fltlst"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-a-filter-list-for-all-dimensions","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Setting Filters","what":"Setting a Filter List for All Dimensions","title":"TileDB API Documentation","text":"","code":"# ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_coords_filter_list(sch, fl)  # Alternatively create the schema and set the coordinates filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), coords_filter_list = fl)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-a-filter-list-for-variable-sized-value-offsets","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Setting Filters","what":"Setting a Filter List for Variable-Sized Value Offsets","title":"TileDB API Documentation","text":"","code":"# ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_offsets_filter_list(sch, fl)  # Create the schema setting the offsets filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), offsets_filter_list = fl)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"setting-coordinate-and-offset-filters","dir":"Articles","previous_headings":"API Usage > Creating Arrays > Setting Filters","what":"Setting Coordinate and Offset Filters","title":"TileDB API Documentation","text":"","code":"# ... create domain dom # ... create attributes attr1, attr2 # ... create filter lists fl1, fl2, similar to attributes f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\") fl1 <- tiledb_filter_list(c(f1)) fl2 <- tiledb_filter_list(c(f2))  # Create the schema setting the coordinates and offsets filter lists schema <- tiledb_array_schema(dom, c(attr1, attr2),                               coords_filter_list = fl1,                               offsets_filter_list = fl2)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"creating-the-array","dir":"Articles","previous_headings":"API Usage > Creating Arrays","what":"Creating the Array","title":"TileDB API Documentation","text":"","code":"# ... create array schema  # Create the array tiledb_array_create(uridense, schema)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"creating-encrypted-arrays","dir":"Articles","previous_headings":"API Usage > Creating Arrays","what":"Creating Encrypted Arrays","title":"TileDB API Documentation","text":"","code":"# assume previously created schema 'sch' # use encryption key encryption_key <- \"0123456789abcdeF0123456789abcdeF\"  # create encrypted array at 'uri' with schema 'sch' tiledb_array_create(uridensewkey, sch, encryption_key)"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"writing-in-dense-subarrays","dir":"Articles","previous_headings":"API Usage > Writing Arrays","what":"Writing in Dense Subarrays","title":"TileDB API Documentation","text":"","code":"## prepare a larger 5 x 5 to embed into tmp <- tempfile() d1  <- tiledb_dim(\"d1\", domain = c(1L, 5L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 5L)) dom <- tiledb_domain(c(d1, d2)) val <- tiledb_attr(name=\"val\", type = \"INT32\") sch <- tiledb_array_schema(dom, c(val)) tiledb_array_create(tmp, sch)  dat <- matrix(as.integer(rnorm(25)*100), 5, 5) arr <- tiledb_array(tmp, return_as = \"data.frame\") arr[] <- dat   # Prepare a 2x3 dense array # Contrary to Python, R by default stores arrays in col-major order data <-  array(c(1L, 4L, 2L, 5L, 3L, 6L), dim=c(2,3))  # Prepare the [1,2] x [2,4] subarray to write to I <- c(1:2) J <- c(2:4)  # Open the array and write the data to it A <- tiledb_dense(uri = tmp) A[I, J] <- data  unlink(tmp, recursive=TRUE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"basic-writing-using-low-level-code","dir":"Articles","previous_headings":"API Usage > Writing Arrays > Writing in Dense Subarrays","what":"Basic Writing using Low-Level Code","title":"TileDB API Documentation","text":"","code":"ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"WRITE\")  ## data: simple (integer sequence) of 1:16 times 10 vec <- 1:16 * 10L subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"COL_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"writing-sparse-cells","dir":"Articles","previous_headings":"API Usage > Writing Arrays","what":"Writing Sparse Cells","title":"TileDB API Documentation","text":"","code":"tmp <- urisparse unlink(tmp, recursive=TRUE)  d1  <- tiledb_dim(\"d1\", domain = c(1L, 5L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 5L)) dom <- tiledb_domain(c(d1, d2)) val <- tiledb_attr(\"val\", type = \"INT32\") sch <- tiledb_array_schema(dom, val, sparse=TRUE) tiledb_array_create(tmp, sch)   # Prepare some data data <- c(3L, 4L, 1L, 2L)  I <- c(3, 4, 1, 2) J <- c(3, 4, 2, 1)  # Open the array and write the data to it A <- tiledb_array(uri = tmp) A[I, J] <- data"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"writing-encrypted-arrays","dir":"Articles","previous_headings":"API Usage > Writing Arrays","what":"Writing Encrypted Arrays","title":"TileDB API Documentation","text":"","code":"# open for writing with corresponding encryption key A <- tiledb_array(uridensewkey, encryption_key = encryption_key) # access array as usual"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"fixed-length-attributes","dir":"Articles","previous_headings":"API Usage > Writing Arrays","what":"Fixed-length Attributes","title":"TileDB API Documentation","text":"","code":"if (dir.exists(uridensefix)) unlink(uridensefix, recursive=TRUE) d1  <- tiledb_dim(\"d1\", domain = c(1L, 4L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 4L)) dom <- tiledb_domain(c(d1, d2))  vec <- 1:32 * 10L attr <- tiledb_attr(\"a\", type = r_to_tiledb_type(vec))  ## set to two values per cell tiledb:::libtiledb_attribute_set_cell_val_num(attr@ptr, 2) sch <- tiledb_array_schema(dom, attr) tiledb_array_create(uridensefix, sch)  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensefix, \"WRITE\") subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"COL_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr)  #TODO Higher-level R support"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"var-length-attributes","dir":"Articles","previous_headings":"API Usage > Writing Arrays","what":"Var-length Attributes","title":"TileDB API Documentation","text":"","code":"if (dir.exists(uridensevar)) unlink(uridensevar, recursive=TRUE) ## Define array ## The array will be 4x4 with dimensions \"rows\" and \"cols\", with domain [1,4]. dom <- tiledb_domain(dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\")))   attr <- tiledb_attr(\"a1\", type = \"CHAR\") ## set to variable length tiledb:::libtiledb_attribute_set_cell_val_num(attr@ptr, NA)  ## now set the schema ctx <- tiledb_ctx() schptr <- tiledb:::libtiledb_array_schema_create(ctx@ptr, \"DENSE\") tiledb:::libtiledb_array_schema_set_domain(schptr, dom@ptr) tiledb:::libtiledb_array_schema_set_cell_order(schptr, \"COL_MAJOR\") tiledb:::libtiledb_array_schema_set_tile_order(schptr, \"COL_MAJOR\") tiledb:::libtiledb_array_schema_add_attribute(schptr, attr@ptr)    ## Create the (empty) array on disk. tiledb:::libtiledb_array_create(uridensevar, schptr)  data <- \"abbcccddeeefghhhijjjkklmnoop\"; offsets <- c(0L, 1L, 3L, 6L, 8L, 11L, 12L, 13L, 16L, 17L, 20L, 22L, 23L, 24L, 25L, 27L)  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"WRITE\") qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"COL_MAJOR\")  bufptr <- tiledb:::libtiledb_query_buffer_var_char_create(offsets, data) qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr)  #TODO Higher-level R support"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"writing-at-a-timestamp","dir":"Articles","previous_headings":"API Usage > Writing Arrays","what":"Writing at a Timestamp","title":"TileDB API Documentation","text":"","code":"# 'at' uses Sys.time() from R in seconds, and shifts back 10 minutes at <- Sys.time() - 10*60  # 'arr' is an already created array, could also be encrypted and carry key arr <- tiledb_array_open_at(arr, \"WRITE\", Sys.time() - 600)  # arr is now open for writing, any suitable content can be written the usual way"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"getting-the-fragment-info","dir":"Articles","previous_headings":"API Usage > Writing Arrays","what":"Getting the Fragment Info","title":"TileDB API Documentation","text":"","code":"# continuing from previous example on dense variable length array # (but this works of course with any array after a write is needed  # Number of fragments numfrag <- tiledb_query_get_fragment_num(qry)  # URI of given fragment, with 0 <= idx < numfrag uri <- tiledb_query_get_fragment_uri(qry, idx)  # Timestamp range of given fragment, with 0 <= idx < numfrag tsrange <- tiledb_query_get_fragment_timestamp_range(qry, idx)"},{"path":[]},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"inspecting-the-array-schema","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Reading the Array Schema","what":"Inspecting the array schema","title":"TileDB API Documentation","text":"","code":"# get a schema directly from storage, uri holds a valid array URI uri <- \"<array_uri>\" sch <- schema(uri)  # get an encrypted scheme directory from storage, enc_key is the AES-256 key sch <- schema(uri, enc_key)  # get a schema from an already openened array # using a sparse array example, works the same for dense arrays array_name <- urisparse A <- tiledb_array(uri = array_name, is.sparse = TRUE) sch <- schema(A)  # one can also open encrypted arrays with key for AES-256 encryption # and all other options (for sparse arrays, data.frame objects...) key <- \"0123456789abcdeF0123456789abcdeF\" A <- tiledb_array(uri = array_name, encryption_key = key) sch <- schema(A) # Get array schema, this shows the sparse accessor # and it is similar for tiledb_dense() A <- tiledb_array(uri = urisparse, is.sparse = TRUE) schema <- schema(A)  # Get array type sparse <- is.sparse(schema)  # Get tile capacity t_capacity <- capacity(schema)  # Get tile order t_order <- tile_order(schema)  # Get cell order c_order <- cell_order(schema)  # Get coordinates and offset filter list reslist <- filter_list(schema)  # Get the array domain dom <- domain(schema)  # Get all attributes as list attrs <- attrs(schema)  # Check if given attribute exists has_attr <- has_attribute(schema, \"attr\")  # Get attribute from name attr <- attrs(schema, \"attr\")  # Dump the array schema in ASCII format in the selected output show(schema)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"inspecting-domain","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Reading the Array Schema","what":"Inspecting Domain","title":"TileDB API Documentation","text":"","code":"# ... get array schema # ... get domain from schema  # Get the domain datatype (i.e., the datatype of all dimensions) type <- datatype(dom)  # Get number of dimensions dim_num <- dim(dom)  # Get all dimension dims <- dimensions(dom)  # Get dimension by index (0 <= i < dim_num) dim <- tiledb_domain_get_dimension_from_index(dom, 1)  # Get dimension by name dim <- tiledb_domain_get_dimension_from_name(dom, \"dimname\")  # Check dimension for name tiledb_domain_has_dimension(dom, \"dimname\")  # Dump the domain in ASCII format in the selected output show(dom)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"inspecting-dimensions","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Reading the Array Schema","what":"Inspecting Dimensions","title":"TileDB API Documentation","text":"","code":"# ... get array schema # ... get domain # ... get dimension by index or name  # Get dimension name dim_name <- name(dim)  # Get dimension datatype dim_type <- datatype(dim)  # Get dimension domain domain <- domain(dim)  # Get tile extent tile_extent <- tile(dim)  # Dump the dimension in ASCII format in the selected output show(dim)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"inspecting-attributes","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Reading the Array Schema","what":"Inspecting Attributes","title":"TileDB API Documentation","text":"","code":"# ... get array schema # ... get attribute by index or name  # Get attribute name attr_name <- name(attr)  # Get attribute datatype attr_type <- datatype(attr)  # Get filter list filter_list <- filter_list(attr)  # Check if attribute is variable-length is_var <- tiledb_attribute_is_variable_sized(attr)  # Get number of values per cell num <- ncells(attr)  # Get cell size for this attribute sz <- tiledb_attribute_get_cell_size(attr)  # Get the fill value (for both fixed and variable sized attributes) tiledb_attribute_get_fill_value(attr)  # Dump the attribute in ASCII format in the selected output show(attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"inspecting-filters","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Reading the Array Schema","what":"Inspecting Filters","title":"TileDB API Documentation","text":"","code":"# dim hold a previously created or load Dimension object fltrlst <- filter_list(dim) # or fltrlst <- filter_list(attr) for some attribute `attr`  # get number of filter nb <- nfilters(fltrlst)  # get max chunk size mxsz <- max_chunk_size(fltrlst)  # get filter by index from filter list (0 <= idx < num_filters) idx <- i fltr <- fltrlst[idx]  # get option (that is filter-dependent) from filter tiledb_filter_get_option(fltr, \"COMPRESSION_LEVEL\")  # set option (that is filter-dependent) for filter tiledb_filter_set_option(fltr, \"COMPRESSION_LEVEL\", 9)  # get filter type tiledb_filter_type(fltr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"basic-reading","dir":"Articles","previous_headings":"API Usage > Reading Arrays","what":"Basic Reading","title":"TileDB API Documentation","text":"","code":"# Open a dense array A <- tiledb_array(uri = uridense)  # Or, open a sparse array # A <- tiledb_sparse(uri = \"<array-uri>\", ctx=ctx)  # Slice only rows 1, 2 and cols 2, 3, 4 data <- A[1:2, 2:4] show(data)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"basic-reading-using-low-level-code","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Basic Reading","what":"Basic Reading using Low-Level Code","title":"TileDB API Documentation","text":"","code":"ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") ## subarray of rows 1,2 and cols 2,3,4 subarr <- c(1L,2L, 2L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"COL_MAJOR\") v <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", v) qryptr <- tiledb:::libtiledb_query_submit(qryptr) print(v)         # unformed array, no coordinates res <- tiledb:::libtiledb_array_close(arrptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"variable-length-attributes","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Basic Reading","what":"Variable-length Attributes","title":"TileDB API Documentation","text":"","code":"ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"READ\")  subarr <- c(1L,4L, 1L,4L) bufptr <- tiledb:::libtiledb_query_buffer_var_char_alloc(arrptr, subarr, \"a1\", 16, 100)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"COL_MAJOR\")  qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr)  mat <- tiledb:::libtiledb_query_get_buffer_var_char(bufptr) print(mat, quote=FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"getting-the-non-empty-domain","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Basic Reading","what":"Getting the Non-empty Domain","title":"TileDB API Documentation","text":"","code":"# example with one fixed- and one variable-sized domain dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"d2\", NULL, NULL, \"ASCII\")))  # ... add attribute(s), write content, ... # ... arr is the array opened  # retrieve non-empty domain for fixed-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 1) tiledb_array_get_non_empty_domain_from_name(arr, \"d1\") # retrieve non-empty domain for variable-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 2) tiledb_array_get_non_empty_domain_from_name(arr, \"d2\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"reopening-arrays","dir":"Articles","previous_headings":"API Usage > Reading Arrays > Basic Reading","what":"Reopening Arrays","title":"TileDB API Documentation","text":"","code":"# Arrays are reopened automatically for you based on # read or write being performed. For direct pointer-based # access you can also explicitly reopen arr@ptr <- tiledb:::libtiledb_array_reopen(arr@ptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"reading-encrypted-arrays","dir":"Articles","previous_headings":"API Usage > Reading Arrays","what":"Reading Encrypted Arrays","title":"TileDB API Documentation","text":"","code":"# Open the array and read as a data.frame from it. A <- tiledb_array(uri = array_name, return_as = \"data.frame\",                   encryption_key = encryption_key)  # Slice rows 1 and 2, and cols 2, 3 and 4 A[1:2, 2:4]  # timestamps for TileDB are milliseconds since epoch, we use # R Datime object to pass the value tstamp <- as.POSIXct(1577955845.678, origin=\"1970-01-01\")  # open the array for reading at the timestamp A <- tiledb_array_open_at(A, \"READ\", tstamp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"multi-range-subarrays","dir":"Articles","previous_headings":"API Usage > Reading Arrays","what":"Multi-range Subarrays","title":"TileDB API Documentation","text":"","code":"# create query, allocate result buffer, ...  # add two query range on the first dimension qry <- tiledb_query_add_range(qry, schema, \"d1\", 2L, 4L) qry <- tiledb_query_add_range(qry, schema, \"d1\", 6L, 8L)  # add a query range on the second dimension, using variable size qry <- tiledb_query_add_range(qry, schema, \"d2\", \"caaa\", \"gzzz\")   # number of ranges given index num <- tiledb_query_get_range_num(qry, idx)  # range start, end and stride for range i (1 <= i <= num) rng <- tiledb_query_get_range(qry, idx, i)  # range start and end for variable-sized dimension for range i (1 <= i <= num) strrng <- tiledb_query_get_range_var(qry, idx, i)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"incomplete-queries","dir":"Articles","previous_headings":"API Usage > Reading Arrays","what":"Incomplete Queries","title":"TileDB API Documentation","text":"","code":"ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") subarr <- c(1L,4L, 1L,4L) qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) vec <- integer(4)  # reserve (insufficient) space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) finished <- FALSE while (!finished) {   qryptr <- tiledb:::libtiledb_query_submit(qryptr)   print(vec)   finished <- tiledb:::libtiledb_query_status(qryptr) == \"COMPLETE\" } res <- tiledb:::libtiledb_array_close(arrptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"result-estimation","dir":"Articles","previous_headings":"API Usage > Reading Arrays","what":"Result Estimation","title":"TileDB API Documentation","text":"","code":"# ...create query object  # estimated size of a fixed-length attribute in sparse array sz <- tiledb_query_get_est_result_size(qry, \"a\")  # estimated size of a variable-length attribute in dense or sparse array sz <- tiledb_query_get_est_result_size_var(qry, \"b\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"time-traveling","dir":"Articles","previous_headings":"API Usage > Reading Arrays","what":"Time Traveling","title":"TileDB API Documentation","text":"","code":"# time traveling is currently only accessible via the lower-level API # we use the R Datetime type; internally TileDB uses milliseconds since epoch tstamp <- Sys.time() - 60*60 # one hour ago  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open_at(ctx@ptr, uridense, \"READ\", tstamp) subarr <- c(1L,2L, 2L,4L) qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"COL_MAJOR\") a <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", a) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr) a  # we can do the same with encrypted arrays encryption_key <- \"0123456789abcdeF0123456789abcdeF\" arrptr <- tiledb:::libtiledb_array_open_at_with_key(ctx@ptr, uridensewkey, \"READ\",                                                     encryption_key, tstamp)"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"asynchronous-queries","dir":"Articles","previous_headings":"API Usage","what":"Asynchronous Queries","title":"TileDB API Documentation","text":"","code":"#  ... create read or write query  # Instead of using tiledb_query_submit(), use tiledb_query_submit_async() # There is an alternate form with a callback function which is not yet supported tiledb_query_submit_async(qry)"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"basic-usage","dir":"Articles","previous_headings":"API Usage > Configuration","what":"Basic Usage","title":"TileDB API Documentation","text":"","code":"# Create a configuration object config <- tiledb_config()  # Set a configuration parameter config[\"sm.tile_cache_size\"] <- \"5000\"  # Get a configuration parameter tile_cache_size <- config[\"sm.tile_cache_size\"]  # Unset a configuration parameter tiledb_config_unset(config, \"sm.tile_cache_size\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"save-and-load-to-file","dir":"Articles","previous_headings":"API Usage > Configuration","what":"Save and Load to File","title":"TileDB API Documentation","text":"","code":"# Save to file config <- tiledb_config() config[\"sm.tile_cache_size\"] <- 0; file <- tempfile(pattern = \"tiledb_config\", fileext = \".txt\") tiledb_config_save(config, file)  # Load from file config_loaded <- tiledb_config_load(file) tile_cache_size = config_loaded[\"sm.tile_cache_size\"]"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"configuration-iterator","dir":"Articles","previous_headings":"API Usage > Configuration","what":"Configuration Iterator","title":"TileDB API Documentation","text":"","code":"# R has no native iterator but one loop over the config elements # by retrieving the configuration as a vector  cfg <- as.vector(tiledb_config())  # print all non-empty config elements for (n in names(cfg))    if (cfg[n] != \"\")       cat(n, \":\", cfg[n], \"\\n\")"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"writing-array-metadata","dir":"Articles","previous_headings":"API Usage > Array Metadata","what":"Writing Array Metadata","title":"TileDB API Documentation","text":"","code":"# 'array' can be a URI, or an array opened for writing tiledb_put_metadata(array, \"aaa\", 100L) tiledb_put_metadata(array, \"bb\", c(1.1, 2.2))"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"reading-array-metadata","dir":"Articles","previous_headings":"API Usage > Array Metadata","what":"Reading Array Metadata","title":"TileDB API Documentation","text":"One can read key: one can retrieve metadata :","code":"# 'array' can be a URI, or an array opened for reading tiledb_get_metadata(array, \"aaa\") # 'array' can be a URI, or an array opened for reading md <- tiledb_get_all_metadata(array)  # prints all keys and (formatted) values print(md)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"deleting-array-metadata","dir":"Articles","previous_headings":"API Usage > Array Metadata","what":"Deleting Array Metadata","title":"TileDB API Documentation","text":"","code":"# 'array' can be a URI, or an array opened for writing tiledb_delete_metadata(array, \"aaa\")"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"fragments","dir":"Articles","previous_headings":"API Usage > Consolidating And Vacuuming","what":"Fragments","title":"TileDB API Documentation","text":"","code":"# An array URI uri <- \"<array_uri>\"  # Consolidate with default configuration array_consolidate(uri)  # Alteratively, create and pass a configuration object cfg <- tiledb_config() cfg[\"sm.consolidation.steps\"] <- \"3\" cfg[\"sm.consolidation.mode\"] <- \"fragments\" array_consolidate(uri, cfg)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"vacuuming","dir":"Articles","previous_headings":"API Usage > Consolidating And Vacuuming","what":"Vacuuming","title":"TileDB API Documentation","text":"","code":"# An array URI uri <- \"<array_uri>\"  # Vacuum with default configuration array_vacuum(uri)  # Alteratively, create and pass a configuration object cfg <- tiledb_config() cfg[\"sm.vacuum.mode\"] <- \"fragments\" array_vacuum(uri, cfg)"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"creating-tiledb-groups","dir":"Articles","previous_headings":"API Usage > Object Management","what":"Creating TileDB Groups","title":"TileDB API Documentation","text":"","code":"tiledb_group_create(\"/tmp/my_group\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"getting-the-object-type","dir":"Articles","previous_headings":"API Usage > Object Management","what":"Getting the Object Type","title":"TileDB API Documentation","text":"","code":"type <- tiledb_object_type(\"<path>\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"list-the-object-hierarchy","dir":"Articles","previous_headings":"API Usage > Object Management","what":"List the Object Hierarchy","title":"TileDB API Documentation","text":"","code":"# List arrays (defaults to default \"PREORDER\" traversal) tiledb_object_ls(uri)  # Walk arrays (with \"POSTORDER\" traversal) returning a data.frame res <- tiledb_object_walk(\"<uri>\", \"POSTORDER\")  # Show the content print(res)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"move-remove-object","dir":"Articles","previous_headings":"API Usage > Object Management","what":"Move / Remove Object","title":"TileDB API Documentation","text":"","code":"tiledb_object_mv(\"/tmp/my_group\", \"/tmp/my_group_2\")  tiledb_object_remove(ctx, \"/tmp/my_group_2/dense_array\")"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"writing","dir":"Articles","previous_headings":"API Usage > Virtual Filesystem","what":"Writing","title":"TileDB API Documentation","text":"","code":"# binary file to be written uri <- tempfile(pattern = \"tiledb_vfs\", fileext = \".bin\") # open file fhbuf <- tiledb_vfs_open(uri, \"WRITE\")  # create a binary payload from a serialized R object payload <- as.integer(serialize(list(dbl=153, string=\"abcde\"), NULL)) # write it and close file tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)  # write again overwriting previous write fhbuf <- tiledb_vfs_open(uri, \"WRITE\") payload <- as.integer(serialize(list(dbl=153.1, string=\"abcdef\"), NULL)) tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)  # append to existing file fhbuf <- tiledb_vfs_open(uri, \"APPEND\") payload <- as.integer(serialize(c(string=\"ghijkl\"), NULL)) tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"reading","dir":"Articles","previous_headings":"API Usage > Virtual Filesystem","what":"Reading","title":"TileDB API Documentation","text":"","code":"# open a binary file for reading fhbuf <- tiledb_vfs_open(uri, \"READ\") vec <- tiledb_vfs_read(fhbuf, as.integer64(0), as.integer64(488)) tiledb_vfs_close(fhbuf)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"managing","dir":"Articles","previous_headings":"API Usage > Virtual Filesystem","what":"Managing","title":"TileDB API Documentation","text":"","code":"# Creating a directory if (!tiledb_vfs_is_dir(\"dir_A\")) {     tiledb_vfs_create_dir(\"dir_A\")     cat(\"Created 'dir_A'\\n\") } else {     cat(\"'dir_A' already exists\\n\") }  # Creating an (empty) file if (!tiledb_vfs_is_file(\"dir_A/file_A\")) {     tiledb_vfs_touch(\"dir_A/file_A\")     cat(\"Created empty file 'dir_A/file_A'\\n\") } else {     cat(\"File 'dir_A/file_A' already existed\\n\") }  # Getting the file size cat(\"Size of file 'dir_A/file_A': \",     tiledb_vfs_file_size(\"dir_A/file_A\"), \"\\n\")  # Moving files (moving directories is similar) tiledb_vfs_move_file(\"dir_A/file_A\", \"dir_A/file_B\")  # Cleaning up tiledb_vfs_remove_file(\"dir_A/file_B\") tiledb_vfs_remove_dir(\"dir_A\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"s3","dir":"Articles","previous_headings":"API Usage > Virtual Filesystem","what":"S3","title":"TileDB API Documentation","text":"","code":"tiledb_vfs_create_bucket(\"s3://my_bucket\")  tiledb_vfs_remove_bucket(\"s3://my_bucket\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"configuring-vfs","dir":"Articles","previous_headings":"API Usage > Virtual Filesystem","what":"Configuring VFS","title":"TileDB API Documentation","text":"","code":"ctx <- tiledb_get_context()  config <- tiledb_config() config[\"vfs.file.max_parallel_ops\"] <- 16  vfs <- tiledb_vfs(config, ctx)  # Or create the Config first and pass to the Ctx constructor"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"using-performance-statistics","dir":"Articles","previous_headings":"API Usage","what":"Using Performance Statistics","title":"TileDB API Documentation","text":"","code":"# Start collecting statistics tiledb_stats_enable()  # ... create some query here  res <- A[1:4]  # Stop collecting statistics tiledb_stats_disable()  # Show the statistics on the console tiledb_stats_print()  # Save the statistics to a file tiledb_stats_dump(\"my_file_name\")  # You can also reset the stats as follows tiledb_stats_reset()"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/documentation.html","id":"catching-errors","dir":"Articles","previous_headings":"API Usage","what":"Catching Errors","title":"TileDB API Documentation","text":"","code":"result <- tryCatch({     # Create a group. The code below creates a group `my_group` and prints a     # message because (normally) it will succeed.     tiledb_group_create(\"/tmp/my_group\")      # Create the same group again. If we attempt to create the same group     # `my_group` as shown below, TileDB will return an error.     tiledb_group_create(\"/tmp.my_group\") }, warning = function(w) {    cat(w) }, error = function(e) {     cat(e) }, finally = {} )"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/installation-options.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Installation Options for the TileDB R Package","text":"vignette discusses different options installing TileDB R package.","code":""},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/installation-options.html","id":"binaries","dir":"Articles","previous_headings":"Overview > CRAN","what":"Binaries","title":"Installation Options for the TileDB R Package","text":"TileDB R package released via Comprehensive R Archive Network, CRAN. CRAN generally provides binaries two widely operating systems, Windows macOS. issueing command , two operating system, default type=\"binary\" install ready--run binary package.","code":"install.packages(\"tiledb\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/installation-options.html","id":"source","dir":"Articles","previous_headings":"Overview > CRAN","what":"Source","title":"Installation Options for the TileDB R Package","text":"operating systems Linux, explicitly selecting type=\"source\" Windows macOS, installation source attempted usinginstall.packages(“tiledb”)`. Linux macOS, invokes standard R build process rely configure. pkg-config found, used query system possible TileDB installation. one found, used. Otherwise, three main operating systems prebuilt archive TileDB Embedded library downloaded GitHub unpacked. build R package one matching build TileDB Embedded associated via file tools/tiledbVersion.txt specifying version release commit sha1. two values used find corresponding binary artifacts release GitHub. location existing installed version TileDB Embedded can also provided configure script supplies argument ---tiledb=PATH. command-line, one say pass configure argument . within R, equivalent command Lastly, one can also override default download location (otherwise inferred via tools/tiledbVersion.txt. configure script supports option ---download=URL two calls become, respectively ","code":"R CMD INSTALL --configure-args='--with-tiledb=/some/path' tiledb_*.tar.gz install.packages(\"tiledb\", repos=NULL, configure.args=\"--with-tiledb=/some/path\") R CMD INSTALL --configure-args='--with-download=https://some.where.net/file.tgz' tiledb_*.tar.gz install.packages(\"tiledb_0.11.0.tar.gz\", repos=NULL,                  configure.args=\"--with-download=https://some.where.net/file.tgz\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/installation-options.html","id":"conda","dir":"Articles","previous_headings":"","what":"Conda","title":"Installation Options for the TileDB R Package","text":"Using example current condaforge/mambaforge container conda-forge project, can installs R, tiledb package respective dependencies.","code":"mamba install -y r-tiledb                # installs R, tiledb and deps without extra prompt # ...several lines of installation detail omitted R # ... several lines of R startup output omitted > library(tiledb)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/installation-options.html","id":"docker","dir":"Articles","previous_headings":"","what":"Docker","title":"Installation Options for the TileDB R Package","text":"Builds TileDB package also provided via Docker containers. present, official TileDB R containers provided TileDB. However, discussion installation source describes create containers.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/installation-options.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Installation Options for the TileDB R Package","text":"note described several installation options TileDB R package.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/introduction.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"First Steps with TileDB","text":"TileDB R package installed, can loaded via library(tiledb). Installation supported Windows, Linux macOS via official CRAN package, Linux macOS via conda package well source. Documentation TileDB R package available via help() function within R well via package documentation introductory notebook. Documentation TileDB also available. Several “quickstart” examples discussed website available examples directory. vignette discusses similar examples. following examples, URIs describing arrays point local file system object. TileDB built S3 support, proper AWS credentials usual environment variables, URIs s3:///data/bucket can used local file used. See script ex_S3.R example.","code":""},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/introduction.html","id":"preliminaries","dir":"Articles","previous_headings":"Dense Arrays","what":"Preliminaries","title":"First Steps with TileDB","text":"illustrations use array created file ex_1.R one can run within R, command-line. follow along discussion follows, helps run example create array possibly adjusting array location path default value (using current directory , set option, override).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/introduction.html","id":"basic-reading-of-dense-arrays","dir":"Articles","previous_headings":"Dense Arrays","what":"Basic Reading of Dense Arrays","title":"First Steps with TileDB","text":"file ex_1.R examples directory simple yet complete example extending quickstart_dense.R adding second third attribute. well following examples use tiledb_array() access array; older variants tiledb_dense() tiledb_sparse() remain supported deprecated may removed point future. Read 1-D first example extracts rows 1 2 column 2 array. also limits selection just one attribute (via attrs), asks return data.frame (instead simpler list) (row column, present ) indices printed (via extended=FALSE). Note examples create three two-dimensional attributes. attributes can selected via attrs argument, attrs() method array object. square-bracket indexing selects 2-d attribute object. multiple objects returned (list data.frame), subsetting returned object works via [[var]] $var. numeric index also works (needs account rows cols). Read 2-D works analogously. Note results generally returned vectors, columns data.frame object case option set.","code":"> A <- tiledb_array(uri = uri, attrs = \"b\", +                   return_as = \"data.frame\", extended=FALSE)) > A[1:2,2] [1] 101.5 104.0 > > A <- tiledb_array(uri = uri, attrs = c(\"a\",\"b\"), +                   return_as = \"data.frame\") > A[1:2,2][[\"a\"]] [1] 2 7 > A[1:2,2]$a [1] 2 7 > > A[6:9,3:4] $a [1] 28 29 33 34 38 39 43 44  $b [1] 114.5 115.0 117.0 117.5 119.5 120.0 122.0 122.5  $c [1] \"fox\" \"A\"   \"E\"   \"F\"   \"J\"   \"K\"   \"O\"   \"P\" >"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/introduction.html","id":"read-2-d-with-attribute-selection","dir":"Articles","previous_headings":"Dense Arrays","what":"Read 2-D with attribute selection","title":"First Steps with TileDB","text":"can restrict selection subset attributes opening array. also illustrated effect setting .data.frame=TRUE opening array. scheme can generalized variable cells, cells N>1, can expand (atomistic) value corresponding row column indices. column types correspond attribute typed array schema, subject constraint mentioned R types. (char comes factor variable still R 3.6.* default change. can also override, users can .) Consistent data.frame semantics, now requesting named column reduces vector happens R side:","code":"> A <- tiledb_dense(uri = uri, attrs = c(\"b\",\"c\"), +                   return_as = \"data.frame\", extended=FALSE) > A[6:9,2:4]        b     c 1  114.0 brown 2  114.5   fox 3  115.0     A 4  116.5     D 5  117.0     E 6  117.5     F 7  119.0     I 8  119.5     J 9  120.0     K 10 121.5     N 11 122.0     O 12 122.5     P > > A <- tiledb_array(\"/tmp/tiledb/ex_1/\", attrs=c(\"b\",\"c\"), +                   return_as = \"data.frame\", extended=TRUE) > sapply(A[6:9, 3:4], \"class\")        rows        cols           b           c   \"integer\"   \"integer\"   \"numeric\" \"character\" > > A[6:9, 3:4]$b [1] 114.5 115.0 117.0 117.5 119.5 120.0 122.0 122.5 >"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/introduction.html","id":"basic-reading-and-writing-of-sparse-arrays","dir":"Articles","previous_headings":"Sparse Arrays","what":"Basic Reading and Writing of Sparse Arrays","title":"First Steps with TileDB","text":"Simple Examples Basic reading returns coordinates attributes. following examples use array created quickstart_sparse example. can also request data.frame object, either opening changing object characteristic fly: sparse arrays, return type default ‘extended’ showing rows column can overridden. Assignment works similarly: Reads can select rows columns: Attributes can selected similarly.","code":"> A <- tiledb_array(uri = uri, is.sparse = TRUE) > A[] $rows [1] 1 2 2  $cols [1] 1 3 4  $a [1] 1 3 2  > > return.data.frame(A) <- TRUE > A[]   a rows cols 1 1    1    1 2 3    2    3 3 2    2    4 > A[4,2] <- 42L > A[] > A[]   rows cols  a 1    1    1  1 2    2    3  3 3    2    4  2 4    4    2 42 > > A[2,]   rows cols a 1    2    3 3 2    2    4 2 > A[,2]   rows cols  a 1    4    2 42 >"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/introduction.html","id":"datetime-attributes","dir":"Articles","previous_headings":"Sparse Arrays","what":"Date(time) Attributes","title":"First Steps with TileDB","text":"Similar dense array case described earlier, file ex_2.R illustrates basic operations sparse arrays. also shows date datetime types instead just integer double precision floats. row coordinate currently floating point representation underlying time type. can select attributes (excluded “” column) select rows time (time stamps get converted required floating point value). extended examples available showing indexing date(time) well character dimension.","code":"> A <- tiledb_array(uri = uri, return_as = \"data.frame\") > A[1577858403:1577858408]         rows cols a   b          d                       e 1 1577858403    1 3 103 2020-01-11 2020-01-02 18:24:33.844 2 1577858404    1 4 104 2020-01-15 2020-01-05 02:28:36.214 3 1577858405    1 5 105 2020-01-19 2020-01-05 00:44:04.805 4 1577858406    1 6 106 2020-01-21 2020-01-06 12:58:51.770 5 1577858407    1 7 107 2020-01-25 2020-01-09 04:29:56.309 6 1577858408    1 8 108 2020-01-26 2020-01-07 13:55:10.240 > > attrs(A) <- c(\"b\", \"d\", \"e\") > A[as.POSIXct(\"2020-01-01\"):as.POSIXct(\"2020-01-01 00:00:03\")]         rows cols   b          d                       e 1 1577858401    1 101 2020-01-05 2020-01-01 03:03:07.548 2 1577858402    1 102 2020-01-10 2020-01-02 21:02:19.747 3 1577858403    1 103 2020-01-11 2020-01-02 18:24:33.844 >"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/introduction.html","id":"additional-information","dir":"Articles","previous_headings":"","what":"Additional Information","title":"First Steps with TileDB","text":"TileDB R package documented via R help functions (e.g. help(\"tiledb_array\") shows information tiledb_array() function) well via website regrouping documentation. Extended API documentation available, examples/ directory. TileDB extensive installation, overall documentation well support forum.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"TileDB and (R)MariaDB Examples","text":"TileDB provides Universal Data Engine can accessed variety ways. C/C++ library offered TileDB Embedded one approach, R package, well Python package language bindings use . Another interface provided MariaDB Integration via MyTile storage plugin. provides TileDB integration frontend interfaces MariaDB—RMariaDB package R. vignette illustrates use TileDB via MariaDB using R RMariaDB packages.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"installation-or-using-docker","dir":"Articles","previous_headings":"","what":"Installation or Using Docker","title":"TileDB and (R)MariaDB Examples","text":"order use MyTile storage plugin, one compile storage plugin MariaDB server consistent compiler flags. build also requires TileDB Embedded library headers, using Docker container may easiest. Dockerfile also provides concrete example build setup. use tiledb/tiledb-mariadb-r container.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"launch-container-in-background","dir":"Articles","previous_headings":"Installation or Using Docker","what":"Launch Container in Background","title":"TileDB and (R)MariaDB Examples","text":"launch container ‘tiledb/tiledb-mariadb-r’ daemon, allowing MariaDB accept empty password (using older MySQL variable setting), name running image ‘tiledb-mariadb-r’:","code":"docker run --name tiledb-mariadb-r -it -d --rm \\        -e MYSQL_ALLOW_EMPTY_PASSWORD=1 tiledb/tiledb-mariadb-r"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"access-container-once-to-write-via-tiledb","dir":"Articles","previous_headings":"Installation or Using Docker","what":"Access Container Once to Write via TileDB","title":"TileDB and (R)MariaDB Examples","text":"Using name given running instance, start R session write data TileDB:","code":"docker exec -it -u root tiledb-mariadb-r R"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"palmer-penguins","dir":"Articles","previous_headings":"Examples","what":"Palmer Penguins","title":"TileDB and (R)MariaDB Examples","text":"sessions started previous section, start R session.","code":"> library(tiledb) > library(palmerpenguins) > praw <- penguins_raw > fromDataFrame(praw, \"/tmp/penguinsraw\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"access-container-again-to-read-via-rmariadb","dir":"Articles","previous_headings":"Examples > Palmer Penguins","what":"Access Container Again to Read via RMariaDB","title":"TileDB and (R)MariaDB Examples","text":"another shell, can access container launch another R process: use RMariaDB access data via tibble object magrittr pipe Note R session uses TileDB via MyTile plugin activated implicitly via ‘table location’ (/tmp/penguinsraw) test database enabling plugins. Also note query still ‘lazy’: column names first ten observations retrieved, total size still unknown indicated lazy query [?? x 2]. Adding collect() verb materialized full subset. now see 344 rows particular result set accessed. Similarly, can also run summaries selected column:","code":"docker exec -it -u root tiledb-mariadb-r R > library(RMariaDB) > library(dplyr, warn.conflicts=FALSE) > con <- DBI::dbConnect(RMariaDB::MariaDB(), dbname=\"test\") > tbl(con, \"/tmp/penguinsraw\") %>% +        dplyr::select(contains(\"Length\")) # Source:   lazy query [?? x 2] # Database: mysql [@localhost:NA/test]    `Culmen Length (mm)` `Flipper Length (mm)`                   <dbl>                 <dbl>  1                 39.1                   181  2                 39.5                   186  3                 40.3                   195  4                 NA                      NA  5                 36.7                   193  6                 39.3                   190  7                 38.9                   181  8                 39.2                   195  9                 34.1                   193 10                 42                     190 # ... with more rows > tbl(con, \"/tmp/penguinsraw\")  %>% +     dplyr::select(contains(\"Length\")) %>% +     collect() # A tibble: 344 x 2    `Culmen Length (mm)` `Flipper Length (mm)`                   <dbl>                 <dbl>  1                 39.1                   181  2                 39.5                   186  3                 40.3                   195  4                 NA                      NA  5                 36.7                   193  6                 39.3                   190  7                 38.9                   181  8                 39.2                   195  9                 34.1                   193 10                 42                     190 # ... with 334 more rows > > tbl(con, \"/tmp/penguinsraw\") %>% +     group_by(Species) %>% +     summarise(across(starts_with(\"Flipper\"), +                      list(~mean(.x, na.rm=TRUE), ~sd(.x, na.rm=TRUE)))) # Source:   lazy query [?? x 3] # Database: mysql [@localhost:NA/test]   Species              `\\`Flipper Length (mm)\\`_~me~ `\\`Flipper Length (mm)\\`_~~   <chr>                                        <dbl>                       <dbl> 1 Adelie Penguin (Pyg~                          190.                        6.54 2 Chinstrap penguin (~                          196.                        7.13 3 Gentoo penguin (Pyg~                          217.                        6.48 >"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"dbi","dir":"Articles","previous_headings":"Examples","what":"DBI","title":"TileDB and (R)MariaDB Examples","text":"can connect directly using DBI package along RMariaDB package MyTile bindings:","code":"library(DBI) con <- dbConnect(RMariaDB::MariaDB(), dbname=\"test\") res <- dbSendQuery(con, \"select * from `/work/penguins` as `q91` limit 10\") df <- dbFetch(res, n = 10) dbClearResult(res) print(df) dbDisconnect(con)"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"s3","dir":"Articles","previous_headings":"Examples","what":"S3","title":"TileDB and (R)MariaDB Examples","text":"using Docker, container setup needs modified include required AWS access environment variables: exports current working directory (accessed $PWD shell) /work inside container (via -v switch), instructs container start directory /work (via -w switch). following example also set TileDB configuration option switch AWS regions.","code":"docker run --name tiledb-mariadb-r \\        -it -d --rm \\        -v $PWD:/work -w /work \\        -e MYSQL_ALLOW_EMPTY_PASSWORD=1 \\        -e AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} \\        -e AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} \\        tiledb/tiledb-mariadb-r > library(dplyr, warn.conflicts=FALSE) > # connect as usual > con <- DBI::dbConnect(RMariaDB::MariaDB(), dbname=\"test\") > # use connection to update config in order to switch s3 regions > res1 <- DBI::dbSendQuery(con, \"set mytile_tiledb_config=\\\"vfs.s3.region=us-west-1\\\";\") > DBI::dbClearResult(res1) > # run simple query > tbl(con, \"s3://tiledb-public-us-west-1/test-array-4x4\") %>% collect() # A tibble: 16 x 3    `__dim_0` `__dim_1` `__attr`      <int64>   <int64>    <dbl>  1         0         0   0.397  2         0         1   0.432  3         0         2   0.617  4         0         3   0.403  5         1         0   0.837  6         1         1   0.670  7         1         2   0.235  8         1         3   0.841  9         2         0   0.222 10         2         1   0.468 11         2         2   0.970 12         2         3   0.551 13         3         0   0.628 14         3         1   0.0149 15         3         2   0.0540 16         3         3   0.445 > > DBI::dbDisconnect(con)  # close connection"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"nyc-taxis","dir":"Articles","previous_headings":"Examples","what":"NYC Taxis","title":"TileDB and (R)MariaDB Examples","text":"can write New York taxi data TileDB (current directory) reading csv: can access via path /work/trip_data_1 via RMariaDB.","code":"> nyc <- data.table::fread(\"trip_data_1.csv\") > tiledb::fromDataFrame(nyc, \"trip_data_1\") > library(dplyr, warn.conflicts=FALSE) > con <- DBI::dbConnect(RMariaDB::MariaDB(), dbname=\"test\") > # list column names > tbl(con, \"/work/trip_data_1\") %>% colnames() > tbl(con, \"/work/trip_data_1\") %>% colnames()  [1] \"__tiledb_rows\"      \"dropoff_latitude\"   \"medallion\"  [4] \"hack_license\"       \"dropoff_longitude\"  \"vendor_id\"  [7] \"rate_code\"          \"store_and_fwd_flag\" \"pickup_datetime\" [10] \"dropoff_datetime\"   \"trip_time_in_secs\"  \"pickup_latitude\" [13] \"passenger_count\"    \"trip_distance\"      \"pickup_longitude\" > # extract one column (here passenger_count) completely and tabulate in R > tbl(con, \"/work/trip_data_1\") %>% select(passenger_count) %>% collect() %>% table() .        0        1        2        3        4        5        6        9      166 10471701  1986196   597485   280992   920006   520066        1      208      255        1        1 > # alternatively, run a lazy query > tbl(con, \"/work/trip_data_1\") %>% group_by(passenger_count) %>% summarize(nobs = n()) # Source:   lazy query [?? x 2] # Database: mysql [@localhost:NA/test]    passenger_count     nobs              <int>  <int64>  1               0      166  2               1 10471701  3               2  1986196  4               3   597485  5               4   280992  6               5   920006  7               6   520066  8               9        1  9             208        1 10             255        1 > # here the request is actually sent as SQL and the computation is done in the SQL layer > tbl(con, \"/work/trip_data_1\")  %>% +      group_by(passenger_count) %>% +      summarize(nobs = n())     %>% +      show_query() <SQL> SELECT `passenger_count`, COUNT(*) AS `nobs` FROM `/work/trip_data_1` GROUP BY `passenger_count` > # naturally we can also send the query directly to the SQL backend > sql <- \"SELECT passenger_count, count(*) AS n FROM `/work/trip_data_1` GROUP BY passenger_count;\" > DBI::dbGetQuery(con, sql)    passenger_count        n 1                0      166 2                1 10471701 3                2  1986196 4                3   597485 5                4   280992 6                5   920006 7                6   520066 8                9        1 9              208        1 10             255        1 > > DBI::dbDisconnect(con)  # close connection"},{"path":"https://tiledb-inc.github.io/TileDB-R/articles/tiledb-mariadb-examples.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"TileDB and (R)MariaDB Examples","text":"short vignette demonstrates use TileDB-stored data R using RMariaDB via MyTile storage extension MariaBD.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":". Author, copyright holder. Dirk Eddelbuettel. Author. Isaiah Norton. Maintainer.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"TileDB, Inc., Eddelbuettel D (2024). tiledb: Modern Database Engine Complex Data Based Multi-Dimensional Arrays. R package version 0.30.2, https://tiledb-inc.github.io/TileDB-R/, https://github.com/TileDB-Inc/TileDB-R.","code":"@Manual{,   title = {tiledb: Modern Database Engine for Complex Data Based on Multi-Dimensional Arrays},   author = {{TileDB, Inc.} and Dirk Eddelbuettel},   year = {2024},   note = {R package version 0.30.2, https://tiledb-inc.github.io/TileDB-R/},   url = {https://github.com/TileDB-Inc/TileDB-R}, }"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Prelimaries","title":null,"text":"show two initial basic examples dense sparse array simply create array data disk refer later examples follow.","code":"library(tiledb)  tdir <- tempdir() uridense <- file.path(tdir, \"dense\") uridensefix <- file.path(tdir, \"densefix\") uridensevar <- file.path(tdir, \"densevar\") uridensewkey <- file.path(tdir, \"denseenc\")  create_array <- function(array_name) {     # Check if the array already exists.     if (tiledb_object_type(array_name) == \"ARRAY\") {         message(\"Array already exists.\")         return(invisible(NULL))     }      # The array will be 4x4 with dimensions \"rows\" and \"cols\", with domain [1,4].     dom <- tiledb_domain(dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                                   tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\")))      # The array will be dense with a single attribute \"a\" so each (i,j) cell can store an integer.     schema <- tiledb_array_schema(dom, attrs = tiledb_attr(\"a\", type = \"INT32\"))      # Create the (empty) array on disk, and return the path invisibly     invisible(tiledb_array_create(array_name, schema)) }  write_array <- function(array_name) {     data <- array(c(c(1L, 5L, 9L, 13L),                     c(2L, 6L, 10L, 14L),                     c(3L, 7L, 11L, 15L),                     c(4L, 8L, 12L, 16L)), dim = c(4,4))     # Open the array and write to it.     A <- tiledb_array(uri = array_name)     A[] <- data }  create_array(uridense) write_array(uridense)   urisparse <- file.path(tdir, \"sparse\")  create_array <- function(array_name) {     # Check if the array already exists.     if (tiledb_object_type(array_name) == \"ARRAY\") {         message(\"Array already exists.\")         return(invisible(NULL))     }      # The array will be 4x4 with dimensions \"rows\" and \"cols\", with domain [1,4].     dom <- tiledb_domain(dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                                   tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\")))      # The array will be dense with a single attribute \"a\" so each (i,j) cell can store an integer.     schema = tiledb_array_schema(dom, attrs=tiledb_attr(\"a\", type = \"INT32\"), sparse = TRUE)      # Create the (empty) array on disk, and return the path invisibly.     invisible(tiledb_array_create(array_name, schema)) }  write_array <- function(array_name) {     I <- c(1, 2, 2)     J <- c(1, 4, 3)     data <- c(1L, 2L, 3L)     # Open the array and write to it.     A <- tiledb_array(uri = array_name)     A[I, J] <- data }  create_array(urisparse) write_array(urisparse)  close_and_reopen <- function(arr, txt) {   res <- tiledb:::libtiledb_array_close(arr@ptr)   res <- tiledb:::libtiledb_array_open_with_ptr(arr@ptr, txt) }"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"API Usage","title":null,"text":"One can read key: one can retrieve metadata :","code":"library(tiledb)  # Create dimension dim <- tiledb_dim(\"dim1\", c(1L, 4L), 2L, \"INT32\")  # String dimenions: no values for domain and extent strdim <- tiledb_dim(\"dim2\", NULL, NULL, \"ASCII\") library(tiledb)  #  .. create dimensions `dim1`, `dim2` dim1 <- tiledb_dim(\"dim1\", c(1L, 4L), 2L, \"INT32\") dim2 <- tiledb_dim(\"dim2\", c(1L, 2L), 2L, \"INT32\")  # Create domain with two dimensions # In C++: domain.add_dimensions(dim1).add_dimension(dim2) dom <- tiledb_domain(dims = c(dim1, dim2)) # Create attribute attr <- tiledb_attr(\"attr\", type = \"INT32\")  # Create attribute attr <- tiledb_attr(\"a1\", type = \"INT32\")  # Access cell value via generic or functions cell_val_num(attr) ## [1] 1 tiledb_attribute_get_cell_val_num(attr) ## [1] 1 ## Attribute value counts can be set via a generic method and a direct method cell_val_num(attr) <- 3 tiledb_attribute_set_cell_val_num(attr, 3)  ## set char attribute to variable length which is encoded as a NA cell_val_num(attr) <- NA tiledb_attribute_set_cell_val_num(attr, NA) # ... create int attribute attr attr <- tiledb_attr(\"a1\", type = \"INT32\") # set fill value to 42L tiledb_attribute_set_fill_value(attr, 42L)  # ... create variable-sized attributte attr attr <- tiledb_attr(\"attr\", type = \"CHAR\") tiledb_attribute_set_cell_val_num(attr, 3) # set fill value to \"...\" tiledb_attribute_set_fill_value(attr, \"...\") comp <- tiledb_filter(\"GZIP\") tiledb_filter_set_option(comp,\"COMPRESSION_LEVEL\", 10)  # Create a filter list with the compressor filter_list <- tiledb_filter_list(comp)  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list) # Create filters f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\")  # Create a filter list with the two filters filter_list <- tiledb_filter_list(c(f1,f2))  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list) # ... create domain dom attr1 <- tiledb_attr(\"attr1\", \"INT32\", filter_list = filter_list) attr2 <- tiledb_attr(\"attr2\", \"FLOAT64\", filter_list = filter_list)  # Create a dense array schema <- tiledb_array_schema(dom, c(attr1, attr2), sparse = FALSE) # Or, create a sparse array # schema <- tiledb_array_schema(dom, c(attr1, attr2), sparse = TRUE) # ... create domain dom # ... create attributes attr1, attr2  # The tile and order can be \"ROW_MAJOR\" or \"COL_MAJOR\" schema <- tiledb_array_schema(dom, c(attr1, attr2),                               cell_order = \"COL_MAJOR\",                               tile_order = \"ROW_MAJOR\") # set capacity capacity(schema) <- 100000 tiledb_array_schema_set_capacity(schema, 10000)  # get capacity capacity(schema) ## [1] 10000 tiledb_array_schema_get_capacity(schema) ## [1] 10000 sch <- schema(urisparse)  # get 'duplicates allowed?' status allows_dups(sch) ## [1] FALSE tiledb_array_schema_get_allows_dups(sch) ## [1] FALSE # set 'duplicates allowed?' status allows_dups(sch) <- TRUE tiledb_array_schema_set_allows_dups(sch, TRUE) ## <pointer: 0x55efe283dc10> check(sch) ## [1] TRUE tiledb_array_schema_check(sch) ## [1] TRUE # create a \"GZIP\" compression filter flt <- tiledb_filter(\"GZIP\") # set the option 'COMPRESSION_LEVEL' to 10 tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 10)  # create a filter list with this filter fltlst <- tiledb_filter_list(flt) # create a filter list object with both fltlst <- tiledb_filter_list(c(flt1, flt2)) # ... create filter list set_max_chunk_size(filter_list, 10000) tiledb_filter_list_set_max_chunk_size(filter_list, 10000)  max_chunk_size(filter_list) ## [1] 10000 tiledb_filter_list_get_max_chunk_size(filter_list) ## [1] 10000 # create (or access) an attribute attr <- tiledb_attr(\"a\", \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # set the filter list filter_list(attr) <- fltlst d <- tiledb_dim(\"d\", c(1L, 10L), 1L, \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # assign the filter list filter_list(d) <- fltlst # ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_coords_filter_list(sch, fl)  # Alternatively create the schema and set the coordinates filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), coords_filter_list = fl) # ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_offsets_filter_list(sch, fl)  # Create the schema setting the offsets filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), offsets_filter_list = fl) # ... create domain dom # ... create attributes attr1, attr2 # ... create filter lists fl1, fl2, similar to attributes f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\") fl1 <- tiledb_filter_list(c(f1)) fl2 <- tiledb_filter_list(c(f2))  # Create the schema setting the coordinates and offsets filter lists schema <- tiledb_array_schema(dom, c(attr1, attr2),                               coords_filter_list = fl1,                               offsets_filter_list = fl2) # ... create array schema  # Create the array tiledb_array_create(uridense, schema) # assume previously created schema 'sch' # use encryption key encryption_key <- \"0123456789abcdeF0123456789abcdeF\"  # create encrypted array at 'uri' with schema 'sch' tiledb_array_create(uridensewkey, sch, encryption_key) ## [1] \"/tmp/Rtmp4X6VQi/denseenc\" ## prepare a larger 5 x 5 to embed into tmp <- tempfile() d1  <- tiledb_dim(\"d1\", domain = c(1L, 5L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 5L)) dom <- tiledb_domain(c(d1, d2)) val <- tiledb_attr(name=\"val\", type = \"INT32\") sch <- tiledb_array_schema(dom, c(val)) tiledb_array_create(tmp, sch)  dat <- matrix(as.integer(rnorm(25)*100), 5, 5) arr <- tiledb_dense(tmp, as.data.frame=FALSE) arr[] <- dat   # Prepare a 2x3 dense array # Contrary to Python, R by default stores arrays in col-major order data <-  array(c(1L, 4L, 2L, 5L, 3L, 6L), dim=c(2,3))  # Prepare the [1,2] x [2,4] subarray to write to I <- c(1:2) J <- c(2:4)  # Open the array and write the data to it A <- tiledb_dense(uri = tmp) A[I, J] <- data  unlink(tmp, recursive=TRUE) ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"WRITE\")  ## data: simple (integer sequence) of 1:16 times 10 vec <- 1:16 * 10L subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr) tmp <- urisparse unlink(tmp, recursive=TRUE)  d1  <- tiledb_dim(\"d1\", domain = c(1L, 5L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 5L)) dom <- tiledb_domain(c(d1, d2)) val <- tiledb_attr(\"val\", type = \"INT32\") sch <- tiledb_array_schema(dom, val, sparse=TRUE) tiledb_array_create(tmp, sch) ## [1] \"/tmp/Rtmp4X6VQi/sparse\" # Prepare some data data <- c(3L, 4L, 1L, 2L)  I <- c(3, 4, 1, 2) J <- c(3, 4, 2, 1)  # Open the array and write the data to it A <- tiledb_array(uri = tmp) A[I, J] <- data # open for writing with corresponding encryption key A <- tiledb_array(uridensewkey, encryption_key = encryption_key) # access array as usual if (dir.exists(uridensefix)) unlink(uridensefix, recursive=TRUE) d1  <- tiledb_dim(\"d1\", domain = c(1L, 4L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 4L)) dom <- tiledb_domain(c(d1, d2))  vec <- 1:32 * 10L attr <- tiledb_attr(\"a\", type = r_to_tiledb_type(vec))  ## set to two values per cell tiledb:::libtiledb_attribute_set_cell_val_num(attr@ptr, 2) sch <- tiledb_array_schema(dom, attr) tiledb_array_create(uridensefix, sch) ## [1] \"/tmp/Rtmp4X6VQi/densefix\" ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensefix, \"WRITE\") subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr)  #TODO Higher-level R support if (dir.exists(uridensevar)) unlink(uridensevar, recursive=TRUE) ## Define array ## The array will be 4x4 with dimensions \"rows\" and \"cols\", with domain [1,4]. dom <- tiledb_domain(dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\")))   attr <- tiledb_attr(\"a1\", type = \"CHAR\") ## set to variable length tiledb:::libtiledb_attribute_set_cell_val_num(attr@ptr, NA)  ## now set the schema ctx <- tiledb_ctx() schptr <- tiledb:::libtiledb_array_schema_create(ctx@ptr, \"DENSE\") tiledb:::libtiledb_array_schema_set_domain(schptr, dom@ptr) tiledb:::libtiledb_array_schema_set_cell_order(schptr, \"ROW_MAJOR\") tiledb:::libtiledb_array_schema_set_tile_order(schptr, \"ROW_MAJOR\") tiledb:::libtiledb_array_schema_add_attribute(schptr, attr@ptr)    ## Create the (empty) array on disk. tiledb:::libtiledb_array_create(uridensevar, schptr) ## [1] \"/tmp/Rtmp4X6VQi/densevar\" data <- \"abbcccddeeefghhhijjjkklmnoop\"; offsets <- c(0L, 1L, 3L, 6L, 8L, 11L, 12L, 13L, 16L, 17L, 20L, 22L, 23L, 24L, 25L, 27L)  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"WRITE\") qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\")  bufptr <- tiledb:::libtiledb_query_buffer_var_char_create(offsets, data) qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr) ## <pointer: 0x55efdca594d0> #TODO Higher-level R support # 'at' uses Sys.time() from R in seconds, and shifts back 10 minutes at <- Sys.time() - 10*60  # 'arr' is an already created array, could also be encrypted and carry key arr <- tiledb_array_open_at(arr, \"WRITE\", Sys.time() - 600)  # arr is now open for writing, any suitable content can be written the usual way # continuing from previous example on dense variable length array # (but this works of course with any array after a write is needed  # Number of fragments numfrag <- tiledb_query_get_fragment_num(qry)  # URI of given fragment, with 0 <= idx < numfrag uri <- tiledb_query_get_fragment_uri(qry, idx)  # Timestamp range of given fragment, with 0 <= idx < numfrag tsrange <- tiledb_query_get_fragment_timestamp_range(qry, idx) # get a schema directly from storage, uri holds a valid array URI uri <- \"<array_uri>\" sch <- schema(uri)  # get an encrypted scheme directory from storage, enc_key is the AES-256 key sch <- schema(uri, enc_key)  # get a schema from an already openened array # using a sparse array example, works the same for dense arrays array_name <- urisparse A <- tiledb_array(uri = array_name, is.sparse = TRUE) sch <- schema(A)  # one can also open encrypted arrays with key for AES-256 encryption # and all other options (for sparse arrays, data.frame objects...) key <- \"0123456789abcdeF0123456789abcdeF\" A <- tiledb_array(uri = array_name, encryption_key = key) sch <- schema(A) # Get array schema, this shows the sparse accessor # and it is similar for tiledb_dense() A <- tiledb_array(uri = urisparse, is.sparse = TRUE) schema <- schema(A)  # Get array type sparse <- is.sparse(schema)  # Get tile capacity t_capacity <- capacity(schema)  # Get tile order t_order <- tile_order(schema)  # Get cell order c_order <- cell_order(schema)  # Get coordinates and offset filter list reslist <- filter_list(schema)  # Get the array domain dom <- domain(schema)  # Get all attributes as list attrs <- attrs(schema)  # Check if given attribute exists has_attr <- has_attribute(schema, \"attr\")  # Get attribute from name attr <- attrs(schema, \"attr\")  # Dump the array schema in ASCII format in the selected output show(schema) # ... get array schema # ... get domain from schema  # Get the domain datatype (i.e., the datatype of all dimensions) type <- datatype(dom)  # Get number of dimensions dim_num <- dim(dom)  # Get all dimension dims <- dimensions(dom)  # Get dimension by index (0 <= i < dim_num) dim <- tiledb_domain_get_dimension_from_index(dom, 1)  # Get dimension by name dim <- tiledb_domain_get_dimension_from_name(dom, \"dimname\")  # Check dimension for name tiledb_domain_has_dimension(dom, \"dimname\")  # Dump the domain in ASCII format in the selected output show(dom) # ... get array schema # ... get domain # ... get dimension by index or name  # Get dimension name dim_name <- name(dim)  # Get dimension datatype dim_type <- datatype(dim)  # Get dimension domain domain <- domain(dim)  # Get tile extent tile_extent <- tile(dim)  # Dump the dimension in ASCII format in the selected output show(dim) # ... get array schema # ... get attribute by index or name  # Get attribute name attr_name <- name(attr)  # Get attribute datatype attr_type <- datatype(attr)  # Get filter list filter_list <- filter_list(attr)  # Check if attribute is variable-length is_var <- tiledb_attribute_is_variable_sized(attr)  # Get number of values per cell num <- ncells(attr)  # Get cell size for this attribute sz <- tiledb_attribute_get_cell_size(attr)  # Get the fill value (for both fixed and variable sized attributes) tiledb_attribute_get_fill_value(attr)  # Dump the attribute in ASCII format in the selected output show(attr) # dim hold a previously created or load Dimension object fltrlst <- filter_list(dim) # or fltrlst <- filter_list(attr) for some attribute `attr`  # get number of filter nb <- nfilters(fltrlst)  # get max chunk size mxsz <- max_chunk_size(fltrlst)  # get filter by index from filter list (0 <= idx < num_filters) idx <- i fltr <- fltrlst[idx]  # get option (that is filter-dependent) from filter tiledb_filter_get_option(fltr, \"COMPRESSION_LEVEL\")  # set option (that is filter-dependent) for filter tiledb_filter_set_option(fltr, \"COMPRESSION_LEVEL\", 9)  # get filter type tiledb_filter_type(fltr) # Open a dense array A <- tiledb_array(uri = uridense)  # Or, open a sparse array # A <- tiledb_sparse(uri = \"<array-uri>\", ctx=ctx)  # Slice only rows 1, 2 and cols 2, 3, 4 data <- A[1:2, 2:4] show(data) ## $rows ## [1] 1 1 1 2 2 2 ##  ## $cols ## [1] 2 3 4 2 3 4 ##  ## $a ## [1] 20 30 40 60 70 80 ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") ## subarray of rows 1,2 and cols 2,3,4 subarr <- c(1L,2L, 2L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") v <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", v) qryptr <- tiledb:::libtiledb_query_submit(qryptr) print(v)         # unformed array, no coordinates ## [1] 20 30 40 60 70 80 res <- tiledb:::libtiledb_array_close(arrptr) ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"READ\")  subarr <- c(1L,4L, 1L,4L) bufptr <- tiledb:::libtiledb_query_buffer_var_char_alloc(arrptr, subarr, \"a1\", 16, 100)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\")  qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr) ## <pointer: 0x55efdd8e1630> mat <- tiledb:::libtiledb_query_get_buffer_var_char(bufptr) print(mat, quote=FALSE) ##      [,1] [,2] [,3] [,4] ## [1,] a    eee  i    m    ## [2,] bb   f    jjj  n    ## [3,] ccc  g    kk   oo   ## [4,] dd   hhh  l    p # example with one fixed- and one variable-sized domain dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"d2\", NULL, NULL, \"ASCII\")))  # ... add attribute(s), write content, ... # ... arr is the array opened  # retrieve non-empty domain for fixed-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 1) tiledb_array_get_non_empty_domain_from_name(arr, \"d1\") # retrieve non-empty domain for variable-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 2) tiledb_array_get_non_empty_domain_from_name(arr, \"d2\") # Arrays are reopened automatically for you based on # read or write being performed. For direct pointer-based # access you can also explicitly reopen arr@ptr <- tiledb:::libtiledb_array_reopen(arr@ptr) # Open the array and read as a data.frame from it. A <- tiledb_array(uri = array_name, as.data.frame=TRUE,                   encryption_key = encryption_key)  # Slice rows 1 and 2, and cols 2, 3 and 4 A[1:2, 2:4]  # timestamps for TileDB are milliseconds since epoch, we use # R Datime object to pass the value tstamp <- as.POSIXct(1577955845.678, origin=\"1970-01-01\")  # open the array for reading at the timestamp A <- tiledb_array_open_at(A, \"READ\", tstamp) # create query, allocate result buffer, ...  # add two query range on the first dimension qry <- tiledb_query_add_range(qry, schema, \"d1\", 2L, 4L) qry <- tiledb_query_add_range(qry, schema, \"d1\", 6L, 8L)  # add a query range on the second dimension, using variable size qry <- tiledb_query_add_range(qry, schema, \"d2\", \"caaa\", \"gzzz\")   # number of ranges given index num <- tiledb_query_get_range_num(qry, idx)  # range start, end and stride for range i (1 <= i <= num) rng <- tiledb_query_get_range(qry, idx, i)  # range start and end for variable-sized dimension for range i (1 <= i <= num) strrng <- tiledb_query_get_range_var(qry, idx, i) ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") subarr <- c(1L,4L, 1L,4L) qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) vec <- integer(4)  # reserve (insufficient) space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) finished <- FALSE while (!finished) {   qryptr <- tiledb:::libtiledb_query_submit(qryptr)   print(vec)   finished <- tiledb:::libtiledb_query_status(qryptr) == \"COMPLETE\" } ## [1] 10 20 30 40 ## [1] 50 60 70 80 ## [1]  90 100 110 120 ## [1] 130 140 150 160 res <- tiledb:::libtiledb_array_close(arrptr) # ...create query object  # estimated size of a fixed-length attribute in sparse array sz <- tiledb_query_get_est_result_size(qry, \"a\")  # estimated size of a variable-length attribute in dense or sparse array sz <- tiledb_query_get_est_result_size_var(qry, \"b\") # time traveling is currently only accessible via the lower-level API # we use the R Datetime type; internally TileDB uses milliseconds since epoch tstamp <- Sys.time() - 60*60 # one hour ago  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open_at(ctx@ptr, uridense, \"READ\", tstamp) subarr <- c(1L,2L, 2L,4L) qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") a <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", a) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr) a ## [1] NA NA NA NA NA NA # we can do the same with encrypted arrays encryption_key <- \"0123456789abcdeF0123456789abcdeF\" arrptr <- tiledb:::libtiledb_array_open_at_with_key(ctx@ptr, uridensewkey, \"READ\",                                                     encryption_key, tstamp) #  ... create read or write query  # Instead of using tiledb_query_submit(), use tiledb_query_submit_async() # There is an alternate form with a callback function which is not yet supported tiledb_query_submit_async(qry) # Create a configuration object config <- tiledb_config()  # Set a configuration parameter config[\"sm.tile_cache_size\"] <- \"5000\"  # Get a configuration parameter tile_cache_size <- config[\"sm.tile_cache_size\"]  # Unset a configuration parameter tiledb_config_unset(config, \"sm.tile_cache_size\") ## <pointer: 0x55efe2880100> # Save to file config <- tiledb_config() config[\"sm.tile_cache_size\"] <- 0; file <- tempfile(pattern = \"tiledb_config\", fileext = \".txt\") tiledb_config_save(config, file) ## [1] \"/tmp/Rtmp4X6VQi/tiledb_config13562d561394b7.txt\" # Load from file config_loaded <- tiledb_config_load(file) tile_cache_size = config_loaded[\"sm.tile_cache_size\"] # R has no native iterator but one loop over the config elements # by retrieving the configuration as a vector  cfg <- as.vector(tiledb_config())  # print all non-empty config elements for (n in names(cfg))    if (cfg[n] != \"\")       cat(n, \":\", cfg[n], \"\\n\") ## config.env_var_prefix : TILEDB_  ## rest.http_compressor : any  ## rest.server_address : https://api.tiledb.com  ## rest.server_serialization_format : CAPNP  ## sm.check_coord_dups : true  ## sm.check_coord_oob : true  ## sm.check_global_order : true  ## sm.compute_concurrency_level : 12  ## sm.consolidation.amplification : 1.0  ## sm.consolidation.buffer_size : 50000000  ## sm.consolidation.mode : fragments  ## sm.consolidation.step_max_frags : 4294967295  ## sm.consolidation.step_min_frags : 4294967295  ## sm.consolidation.step_size_ratio : 0.0  ## sm.consolidation.steps : 4294967295  ## sm.dedup_coords : false  ## sm.enable_signal_handlers : true  ## sm.io_concurrency_level : 12  ## sm.memory_budget : 5368709120  ## sm.memory_budget_var : 10737418240  ## sm.num_tbb_threads : -1  ## sm.skip_checksum_validation : false  ## sm.sub_partitioner_memory_budget : 0  ## sm.tile_cache_size : 10000000  ## sm.vacuum.mode : fragments  ## sm.var_offsets.bitsize : 64  ## sm.var_offsets.extra_element : false  ## sm.var_offsets.mode : bytes  ## vfs.azure.block_list_block_size : 5242880  ## vfs.azure.max_parallel_ops : 12  ## vfs.azure.use_block_list_upload : true  ## vfs.azure.use_https : true  ## vfs.file.enable_filelocks : true  ## vfs.file.max_parallel_ops : 12  ## vfs.file.posix_directory_permissions : 755  ## vfs.file.posix_file_permissions : 644  ## vfs.gcs.max_parallel_ops : 12  ## vfs.gcs.multi_part_size : 5242880  ## vfs.gcs.use_multi_part_upload : true  ## vfs.min_batch_gap : 512000  ## vfs.min_batch_size : 20971520  ## vfs.min_parallel_size : 10485760  ## vfs.read_ahead_cache_size : 10485760  ## vfs.read_ahead_size : 102400  ## vfs.s3.connect_max_tries : 5  ## vfs.s3.connect_scale_factor : 25  ## vfs.s3.connect_timeout_ms : 3000  ## vfs.s3.logging_level : Off  ## vfs.s3.max_parallel_ops : 12  ## vfs.s3.multipart_part_size : 5242880  ## vfs.s3.proxy_port : 0  ## vfs.s3.proxy_scheme : http  ## vfs.s3.region : us-east-1  ## vfs.s3.request_timeout_ms : 3000  ## vfs.s3.requester_pays : false  ## vfs.s3.scheme : https  ## vfs.s3.use_multipart_upload : true  ## vfs.s3.use_virtual_addressing : true  ## vfs.s3.verify_ssl : true # 'array' can be a URI, or an array opened for writing tiledb_put_metadata(array, \"aaa\", 100L) tiledb_put_metadata(array, \"bb\", c(1.1, 2.2)) # 'array' can be a URI, or an array opened for reading tiledb_get_metadata(array, \"aaa\") # 'array' can be a URI, or an array opened for reading md <- tiledb_get_all_metadata(array)  # prints all keys and (formatted) values print(md) # 'array' can be a URI, or an array opened for writing tiledb_delete_metadata(array, \"aaa\") # An array URI uri <- \"<array_uri>\"  # Consolidate with default configuration array_consolidate(uri)  # Alteratively, create and pass a configuration object cfg <- tiledb_config() cfg[\"sm.consolidation.steps\"] <- \"3\" cfg[\"sm.consolidation.mode\"] <- \"fragments\" array_consolidate(uri, cfg) # An array URI uri <- \"<array_uri>\"  # Vacuum with default configuration array_vacuum(uri)  # Alteratively, create and pass a configuration object cfg <- tiledb_config() cfg[\"sm.vacuum.mode\"] <- \"fragments\" array_vacuum(uri, cfg) tiledb_group_create(\"/tmp/my_group\") type <- tiledb_object_type(\"<path>\") # List arrays (defaults to default \"PREORDER\" traversal) tiledb_object_ls(uri)  # Walk arrays (with \"POSTORDER\" traversal) returning a data.frame res <- tiledb_object_walk(\"<uri>\", \"POSTORDER\")  # Show the content print(res) tiledb_object_mv(\"/tmp/my_group\", \"/tmp/my_group_2\")  tiledb_object_remove(ctx, \"/tmp/my_group_2/dense_array\") # binary file to be written uri <- tempfile(pattern = \"tiledb_vfs\", fileext = \".bin\") # open file fhbuf <- tiledb_vfs_open(uri, \"WRITE\")  # create a binary payload from a serialized R object payload <- as.integer(serialize(list(dbl=153, string=\"abcde\"), NULL)) # write it and close file tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)  # write again overwriting previous write fhbuf <- tiledb_vfs_open(uri, \"WRITE\") payload <- as.integer(serialize(list(dbl=153.1, string=\"abcdef\"), NULL)) tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)  # append to existing file fhbuf <- tiledb_vfs_open(uri, \"APPEND\") payload <- as.integer(serialize(c(string=\"ghijkl\"), NULL)) tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf) # open a binary file for reading fhbuf <- tiledb_vfs_open(uri, \"READ\") vec <- tiledb_vfs_read(fhbuf, as.integer64(0), as.integer64(488)) tiledb_vfs_close(fhbuf) # Creating a directory if (!tiledb_vfs_is_dir(\"dir_A\")) {     tiledb_vfs_create_dir(\"dir_A\")     cat(\"Created 'dir_A'\\n\") } else {     cat(\"'dir_A' already exists\\n\") }  # Creating an (empty) file if (!tiledb_vfs_is_file(\"dir_A/file_A\")) {     tiledb_vfs_touch(\"dir_A/file_A\")     cat(\"Created empty file 'dir_A/file_A'\\n\") } else {     cat(\"File 'dir_A/file_A' already existed\\n\") }  # Getting the file size cat(\"Size of file 'dir_A/file_A': \",     tiledb_vfs_file_size(\"dir_A/file_A\"), \"\\n\")  # Moving files (moving directories is similar) tiledb_vfs_move_file(\"dir_A/file_A\", \"dir_A/file_B\")  # Cleaning up tiledb_vfs_remove_file(\"dir_A/file_B\") tiledb_vfs_remove_dir(\"dir_A\") tiledb_vfs_create_bucket(\"s3://my_bucket\")  tiledb_vfs_remove_bucket(\"s3://my_bucket\") ctx <- tiledb_get_context()  config <- tiledb_config() config[\"vfs.file.max_parallel_ops\"] <- 16  vfs <- tiledb_vfs(config, ctx)  # Or create the Config first and pass to the Ctx constructor # Start collecting statistics tiledb_stats_enable()  # ... create some query here  res <- A[1:4]  # Stop collecting statistics tiledb_stats_disable()  # Show the statistics on the console tiledb_stats_print()  # Save the statistics to a file tiledb_stats_dump(\"my_file_name\")  # You can also reset the stats as follows tiledb_stats_reset() result <- tryCatch({     # Create a group. The code below creates a group `my_group` and prints a     # message because (normally) it will succeed.     tiledb_group_create(\"/tmp/my_group\")      # Create the same group again. If we attempt to create the same group     # `my_group` as shown below, TileDB will return an error.     tiledb_group_create(\"/tmp.my_group\") }, warning = function(w) {    cat(w) }, error = function(e) {     cat(e) }, finally = {} )"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating Arrays","title":null,"text":"","code":"library(tiledb)  # Create dimension dim <- tiledb_dim(\"dim1\", c(1L, 4L), 2L, \"INT32\")  # String dimenions: no values for domain and extent strdim <- tiledb_dim(\"dim2\", NULL, NULL, \"ASCII\") library(tiledb)  #  .. create dimensions `dim1`, `dim2` dim1 <- tiledb_dim(\"dim1\", c(1L, 4L), 2L, \"INT32\") dim2 <- tiledb_dim(\"dim2\", c(1L, 2L), 2L, \"INT32\")  # Create domain with two dimensions # In C++: domain.add_dimensions(dim1).add_dimension(dim2) dom <- tiledb_domain(dims = c(dim1, dim2)) # Create attribute attr <- tiledb_attr(\"attr\", type = \"INT32\")  # Create attribute attr <- tiledb_attr(\"a1\", type = \"INT32\")  # Access cell value via generic or functions cell_val_num(attr) ## [1] 1 tiledb_attribute_get_cell_val_num(attr) ## [1] 1 ## Attribute value counts can be set via a generic method and a direct method cell_val_num(attr) <- 3 tiledb_attribute_set_cell_val_num(attr, 3)  ## set char attribute to variable length which is encoded as a NA cell_val_num(attr) <- NA tiledb_attribute_set_cell_val_num(attr, NA) # ... create int attribute attr attr <- tiledb_attr(\"a1\", type = \"INT32\") # set fill value to 42L tiledb_attribute_set_fill_value(attr, 42L)  # ... create variable-sized attributte attr attr <- tiledb_attr(\"attr\", type = \"CHAR\") tiledb_attribute_set_cell_val_num(attr, 3) # set fill value to \"...\" tiledb_attribute_set_fill_value(attr, \"...\") comp <- tiledb_filter(\"GZIP\") tiledb_filter_set_option(comp,\"COMPRESSION_LEVEL\", 10)  # Create a filter list with the compressor filter_list <- tiledb_filter_list(comp)  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list) # Create filters f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\")  # Create a filter list with the two filters filter_list <- tiledb_filter_list(c(f1,f2))  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list) # ... create domain dom attr1 <- tiledb_attr(\"attr1\", \"INT32\", filter_list = filter_list) attr2 <- tiledb_attr(\"attr2\", \"FLOAT64\", filter_list = filter_list)  # Create a dense array schema <- tiledb_array_schema(dom, c(attr1, attr2), sparse = FALSE) # Or, create a sparse array # schema <- tiledb_array_schema(dom, c(attr1, attr2), sparse = TRUE) # ... create domain dom # ... create attributes attr1, attr2  # The tile and order can be \"ROW_MAJOR\" or \"COL_MAJOR\" schema <- tiledb_array_schema(dom, c(attr1, attr2),                               cell_order = \"COL_MAJOR\",                               tile_order = \"ROW_MAJOR\") # set capacity capacity(schema) <- 100000 tiledb_array_schema_set_capacity(schema, 10000)  # get capacity capacity(schema) ## [1] 10000 tiledb_array_schema_get_capacity(schema) ## [1] 10000 sch <- schema(urisparse)  # get 'duplicates allowed?' status allows_dups(sch) ## [1] FALSE tiledb_array_schema_get_allows_dups(sch) ## [1] FALSE # set 'duplicates allowed?' status allows_dups(sch) <- TRUE tiledb_array_schema_set_allows_dups(sch, TRUE) ## <pointer: 0x55efe283dc10> check(sch) ## [1] TRUE tiledb_array_schema_check(sch) ## [1] TRUE # create a \"GZIP\" compression filter flt <- tiledb_filter(\"GZIP\") # set the option 'COMPRESSION_LEVEL' to 10 tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 10)  # create a filter list with this filter fltlst <- tiledb_filter_list(flt) # create a filter list object with both fltlst <- tiledb_filter_list(c(flt1, flt2)) # ... create filter list set_max_chunk_size(filter_list, 10000) tiledb_filter_list_set_max_chunk_size(filter_list, 10000)  max_chunk_size(filter_list) ## [1] 10000 tiledb_filter_list_get_max_chunk_size(filter_list) ## [1] 10000 # create (or access) an attribute attr <- tiledb_attr(\"a\", \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # set the filter list filter_list(attr) <- fltlst d <- tiledb_dim(\"d\", c(1L, 10L), 1L, \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # assign the filter list filter_list(d) <- fltlst # ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_coords_filter_list(sch, fl)  # Alternatively create the schema and set the coordinates filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), coords_filter_list = fl) # ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_offsets_filter_list(sch, fl)  # Create the schema setting the offsets filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), offsets_filter_list = fl) # ... create domain dom # ... create attributes attr1, attr2 # ... create filter lists fl1, fl2, similar to attributes f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\") fl1 <- tiledb_filter_list(c(f1)) fl2 <- tiledb_filter_list(c(f2))  # Create the schema setting the coordinates and offsets filter lists schema <- tiledb_array_schema(dom, c(attr1, attr2),                               coords_filter_list = fl1,                               offsets_filter_list = fl2) # ... create array schema  # Create the array tiledb_array_create(uridense, schema) # assume previously created schema 'sch' # use encryption key encryption_key <- \"0123456789abcdeF0123456789abcdeF\"  # create encrypted array at 'uri' with schema 'sch' tiledb_array_create(uridensewkey, sch, encryption_key) ## [1] \"/tmp/Rtmp4X6VQi/denseenc\""},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating Dimensions","title":null,"text":"","code":"library(tiledb)  # Create dimension dim <- tiledb_dim(\"dim1\", c(1L, 4L), 2L, \"INT32\")  # String dimenions: no values for domain and extent strdim <- tiledb_dim(\"dim2\", NULL, NULL, \"ASCII\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating the Array Domain","title":null,"text":"","code":"library(tiledb)  #  .. create dimensions `dim1`, `dim2` dim1 <- tiledb_dim(\"dim1\", c(1L, 4L), 2L, \"INT32\") dim2 <- tiledb_dim(\"dim2\", c(1L, 2L), 2L, \"INT32\")  # Create domain with two dimensions # In C++: domain.add_dimensions(dim1).add_dimension(dim2) dom <- tiledb_domain(dims = c(dim1, dim2))"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating Attributes","title":null,"text":"","code":"# Create attribute attr <- tiledb_attr(\"attr\", type = \"INT32\")  # Create attribute attr <- tiledb_attr(\"a1\", type = \"INT32\")  # Access cell value via generic or functions cell_val_num(attr) ## [1] 1 tiledb_attribute_get_cell_val_num(attr) ## [1] 1 ## Attribute value counts can be set via a generic method and a direct method cell_val_num(attr) <- 3 tiledb_attribute_set_cell_val_num(attr, 3)  ## set char attribute to variable length which is encoded as a NA cell_val_num(attr) <- NA tiledb_attribute_set_cell_val_num(attr, NA) # ... create int attribute attr attr <- tiledb_attr(\"a1\", type = \"INT32\") # set fill value to 42L tiledb_attribute_set_fill_value(attr, 42L)  # ... create variable-sized attributte attr attr <- tiledb_attr(\"attr\", type = \"CHAR\") tiledb_attribute_set_cell_val_num(attr, 3) # set fill value to \"...\" tiledb_attribute_set_fill_value(attr, \"...\") comp <- tiledb_filter(\"GZIP\") tiledb_filter_set_option(comp,\"COMPRESSION_LEVEL\", 10)  # Create a filter list with the compressor filter_list <- tiledb_filter_list(comp)  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list) # Create filters f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\")  # Create a filter list with the two filters filter_list <- tiledb_filter_list(c(f1,f2))  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting Fill Values","title":null,"text":"","code":"# ... create int attribute attr attr <- tiledb_attr(\"a1\", type = \"INT32\") # set fill value to 42L tiledb_attribute_set_fill_value(attr, 42L)  # ... create variable-sized attributte attr attr <- tiledb_attr(\"attr\", type = \"CHAR\") tiledb_attribute_set_cell_val_num(attr, 3) # set fill value to \"...\" tiledb_attribute_set_fill_value(attr, \"...\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting a Compressor","title":null,"text":"","code":"comp <- tiledb_filter(\"GZIP\") tiledb_filter_set_option(comp,\"COMPRESSION_LEVEL\", 10)  # Create a filter list with the compressor filter_list <- tiledb_filter_list(comp)  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting Other Filters","title":null,"text":"","code":"# Create filters f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\")  # Create a filter list with the two filters filter_list <- tiledb_filter_list(c(f1,f2))  # Create attribute with the filter list attr <- tiledb_attr(\"attr\", \"INT32\", filter_list = filter_list)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating the Array Schema","title":null,"text":"","code":"# ... create domain dom attr1 <- tiledb_attr(\"attr1\", \"INT32\", filter_list = filter_list) attr2 <- tiledb_attr(\"attr2\", \"FLOAT64\", filter_list = filter_list)  # Create a dense array schema <- tiledb_array_schema(dom, c(attr1, attr2), sparse = FALSE) # Or, create a sparse array # schema <- tiledb_array_schema(dom, c(attr1, attr2), sparse = TRUE) # ... create domain dom # ... create attributes attr1, attr2  # The tile and order can be \"ROW_MAJOR\" or \"COL_MAJOR\" schema <- tiledb_array_schema(dom, c(attr1, attr2),                               cell_order = \"COL_MAJOR\",                               tile_order = \"ROW_MAJOR\") # set capacity capacity(schema) <- 100000 tiledb_array_schema_set_capacity(schema, 10000)  # get capacity capacity(schema) ## [1] 10000 tiledb_array_schema_get_capacity(schema) ## [1] 10000 sch <- schema(urisparse)  # get 'duplicates allowed?' status allows_dups(sch) ## [1] FALSE tiledb_array_schema_get_allows_dups(sch) ## [1] FALSE # set 'duplicates allowed?' status allows_dups(sch) <- TRUE tiledb_array_schema_set_allows_dups(sch, TRUE) ## <pointer: 0x55efe283dc10> check(sch) ## [1] TRUE tiledb_array_schema_check(sch) ## [1] TRUE"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting the Tile and Cell Order","title":null,"text":"","code":"# ... create domain dom # ... create attributes attr1, attr2  # The tile and order can be \"ROW_MAJOR\" or \"COL_MAJOR\" schema <- tiledb_array_schema(dom, c(attr1, attr2),                               cell_order = \"COL_MAJOR\",                               tile_order = \"ROW_MAJOR\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting the Data Tile Capacity","title":null,"text":"","code":"# set capacity capacity(schema) <- 100000 tiledb_array_schema_set_capacity(schema, 10000)  # get capacity capacity(schema) ## [1] 10000 tiledb_array_schema_get_capacity(schema) ## [1] 10000"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Allowing Duplicates","title":null,"text":"","code":"sch <- schema(urisparse)  # get 'duplicates allowed?' status allows_dups(sch) ## [1] FALSE tiledb_array_schema_get_allows_dups(sch) ## [1] FALSE # set 'duplicates allowed?' status allows_dups(sch) <- TRUE tiledb_array_schema_set_allows_dups(sch, TRUE) ## <pointer: 0x55efe283dc10>"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Checking Correctness","title":null,"text":"","code":"check(sch) ## [1] TRUE tiledb_array_schema_check(sch) ## [1] TRUE"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting Filters","title":null,"text":"","code":"# create a \"GZIP\" compression filter flt <- tiledb_filter(\"GZIP\") # set the option 'COMPRESSION_LEVEL' to 10 tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 10)  # create a filter list with this filter fltlst <- tiledb_filter_list(flt) # create a filter list object with both fltlst <- tiledb_filter_list(c(flt1, flt2)) # ... create filter list set_max_chunk_size(filter_list, 10000) tiledb_filter_list_set_max_chunk_size(filter_list, 10000)  max_chunk_size(filter_list) ## [1] 10000 tiledb_filter_list_get_max_chunk_size(filter_list) ## [1] 10000 # create (or access) an attribute attr <- tiledb_attr(\"a\", \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # set the filter list filter_list(attr) <- fltlst d <- tiledb_dim(\"d\", c(1L, 10L), 1L, \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # assign the filter list filter_list(d) <- fltlst # ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_coords_filter_list(sch, fl)  # Alternatively create the schema and set the coordinates filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), coords_filter_list = fl) # ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_offsets_filter_list(sch, fl)  # Create the schema setting the offsets filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), offsets_filter_list = fl) # ... create domain dom # ... create attributes attr1, attr2 # ... create filter lists fl1, fl2, similar to attributes f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\") fl1 <- tiledb_filter_list(c(f1)) fl2 <- tiledb_filter_list(c(f2))  # Create the schema setting the coordinates and offsets filter lists schema <- tiledb_array_schema(dom, c(attr1, attr2),                               coords_filter_list = fl1,                               offsets_filter_list = fl2)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating a Filter List","title":null,"text":"","code":"# create a \"GZIP\" compression filter flt <- tiledb_filter(\"GZIP\") # set the option 'COMPRESSION_LEVEL' to 10 tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 10)  # create a filter list with this filter fltlst <- tiledb_filter_list(flt)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Other Filters","title":null,"text":"","code":"# create a filter list object with both fltlst <- tiledb_filter_list(c(flt1, flt2))"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting the Tile Chunk Size","title":null,"text":"","code":"# ... create filter list set_max_chunk_size(filter_list, 10000) tiledb_filter_list_set_max_chunk_size(filter_list, 10000)  max_chunk_size(filter_list) ## [1] 10000 tiledb_filter_list_get_max_chunk_size(filter_list) ## [1] 10000"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting a Filter List for an Attribute","title":null,"text":"","code":"# create (or access) an attribute attr <- tiledb_attr(\"a\", \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # set the filter list filter_list(attr) <- fltlst"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting a Filter List for a Dimension","title":null,"text":"","code":"d <- tiledb_dim(\"d\", c(1L, 10L), 1L, \"INT32\")  # create a filter list flt1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") flt2 <- tiledb_filter(\"ZSTD\") fltlst <- tiledb_filter_list(c(flt1, flt2))  # assign the filter list filter_list(d) <- fltlst"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting a Filter List for All Dimensions","title":null,"text":"","code":"# ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_coords_filter_list(sch, fl)  # Alternatively create the schema and set the coordinates filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), coords_filter_list = fl)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting a Filter List for Variable-Sized Value Offsets","title":null,"text":"","code":"# ... create (or retrieve) array schema sch # ... create filter list fl  # assign filter list to schema tiledb_array_schema_set_offsets_filter_list(sch, fl)  # Create the schema setting the offsets filter list sch <- tiledb_array_schema(dom, c(attr1, attr2), offsets_filter_list = fl)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Setting Coordinate and Offset Filters","title":null,"text":"","code":"# ... create domain dom # ... create attributes attr1, attr2 # ... create filter lists fl1, fl2, similar to attributes f1 <- tiledb_filter(\"BIT_WIDTH_REDUCTION\") f2 <- tiledb_filter(\"ZSTD\") fl1 <- tiledb_filter_list(c(f1)) fl2 <- tiledb_filter_list(c(f2))  # Create the schema setting the coordinates and offsets filter lists schema <- tiledb_array_schema(dom, c(attr1, attr2),                               coords_filter_list = fl1,                               offsets_filter_list = fl2)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating the Array","title":null,"text":"","code":"# ... create array schema  # Create the array tiledb_array_create(uridense, schema)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating Encrypted Arrays","title":null,"text":"","code":"# assume previously created schema 'sch' # use encryption key encryption_key <- \"0123456789abcdeF0123456789abcdeF\"  # create encrypted array at 'uri' with schema 'sch' tiledb_array_create(uridensewkey, sch, encryption_key) ## [1] \"/tmp/Rtmp4X6VQi/denseenc\""},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Writing Arrays","title":null,"text":"","code":"## prepare a larger 5 x 5 to embed into tmp <- tempfile() d1  <- tiledb_dim(\"d1\", domain = c(1L, 5L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 5L)) dom <- tiledb_domain(c(d1, d2)) val <- tiledb_attr(name=\"val\", type = \"INT32\") sch <- tiledb_array_schema(dom, c(val)) tiledb_array_create(tmp, sch)  dat <- matrix(as.integer(rnorm(25)*100), 5, 5) arr <- tiledb_dense(tmp, as.data.frame=FALSE) arr[] <- dat   # Prepare a 2x3 dense array # Contrary to Python, R by default stores arrays in col-major order data <-  array(c(1L, 4L, 2L, 5L, 3L, 6L), dim=c(2,3))  # Prepare the [1,2] x [2,4] subarray to write to I <- c(1:2) J <- c(2:4)  # Open the array and write the data to it A <- tiledb_dense(uri = tmp) A[I, J] <- data  unlink(tmp, recursive=TRUE) ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"WRITE\")  ## data: simple (integer sequence) of 1:16 times 10 vec <- 1:16 * 10L subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr) tmp <- urisparse unlink(tmp, recursive=TRUE)  d1  <- tiledb_dim(\"d1\", domain = c(1L, 5L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 5L)) dom <- tiledb_domain(c(d1, d2)) val <- tiledb_attr(\"val\", type = \"INT32\") sch <- tiledb_array_schema(dom, val, sparse=TRUE) tiledb_array_create(tmp, sch) ## [1] \"/tmp/Rtmp4X6VQi/sparse\" # Prepare some data data <- c(3L, 4L, 1L, 2L)  I <- c(3, 4, 1, 2) J <- c(3, 4, 2, 1)  # Open the array and write the data to it A <- tiledb_array(uri = tmp) A[I, J] <- data # open for writing with corresponding encryption key A <- tiledb_array(uridensewkey, encryption_key = encryption_key) # access array as usual if (dir.exists(uridensefix)) unlink(uridensefix, recursive=TRUE) d1  <- tiledb_dim(\"d1\", domain = c(1L, 4L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 4L)) dom <- tiledb_domain(c(d1, d2))  vec <- 1:32 * 10L attr <- tiledb_attr(\"a\", type = r_to_tiledb_type(vec))  ## set to two values per cell tiledb:::libtiledb_attribute_set_cell_val_num(attr@ptr, 2) sch <- tiledb_array_schema(dom, attr) tiledb_array_create(uridensefix, sch) ## [1] \"/tmp/Rtmp4X6VQi/densefix\" ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensefix, \"WRITE\") subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr)  #TODO Higher-level R support if (dir.exists(uridensevar)) unlink(uridensevar, recursive=TRUE) ## Define array ## The array will be 4x4 with dimensions \"rows\" and \"cols\", with domain [1,4]. dom <- tiledb_domain(dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\")))   attr <- tiledb_attr(\"a1\", type = \"CHAR\") ## set to variable length tiledb:::libtiledb_attribute_set_cell_val_num(attr@ptr, NA)  ## now set the schema ctx <- tiledb_ctx() schptr <- tiledb:::libtiledb_array_schema_create(ctx@ptr, \"DENSE\") tiledb:::libtiledb_array_schema_set_domain(schptr, dom@ptr) tiledb:::libtiledb_array_schema_set_cell_order(schptr, \"ROW_MAJOR\") tiledb:::libtiledb_array_schema_set_tile_order(schptr, \"ROW_MAJOR\") tiledb:::libtiledb_array_schema_add_attribute(schptr, attr@ptr)    ## Create the (empty) array on disk. tiledb:::libtiledb_array_create(uridensevar, schptr) ## [1] \"/tmp/Rtmp4X6VQi/densevar\" data <- \"abbcccddeeefghhhijjjkklmnoop\"; offsets <- c(0L, 1L, 3L, 6L, 8L, 11L, 12L, 13L, 16L, 17L, 20L, 22L, 23L, 24L, 25L, 27L)  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"WRITE\") qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\")  bufptr <- tiledb:::libtiledb_query_buffer_var_char_create(offsets, data) qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr) ## <pointer: 0x55efdca594d0> #TODO Higher-level R support # 'at' uses Sys.time() from R in seconds, and shifts back 10 minutes at <- Sys.time() - 10*60  # 'arr' is an already created array, could also be encrypted and carry key arr <- tiledb_array_open_at(arr, \"WRITE\", Sys.time() - 600)  # arr is now open for writing, any suitable content can be written the usual way # continuing from previous example on dense variable length array # (but this works of course with any array after a write is needed  # Number of fragments numfrag <- tiledb_query_get_fragment_num(qry)  # URI of given fragment, with 0 <= idx < numfrag uri <- tiledb_query_get_fragment_uri(qry, idx)  # Timestamp range of given fragment, with 0 <= idx < numfrag tsrange <- tiledb_query_get_fragment_timestamp_range(qry, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Writing in Dense Subarrays","title":null,"text":"","code":"## prepare a larger 5 x 5 to embed into tmp <- tempfile() d1  <- tiledb_dim(\"d1\", domain = c(1L, 5L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 5L)) dom <- tiledb_domain(c(d1, d2)) val <- tiledb_attr(name=\"val\", type = \"INT32\") sch <- tiledb_array_schema(dom, c(val)) tiledb_array_create(tmp, sch)  dat <- matrix(as.integer(rnorm(25)*100), 5, 5) arr <- tiledb_dense(tmp, as.data.frame=FALSE) arr[] <- dat   # Prepare a 2x3 dense array # Contrary to Python, R by default stores arrays in col-major order data <-  array(c(1L, 4L, 2L, 5L, 3L, 6L), dim=c(2,3))  # Prepare the [1,2] x [2,4] subarray to write to I <- c(1:2) J <- c(2:4)  # Open the array and write the data to it A <- tiledb_dense(uri = tmp) A[I, J] <- data  unlink(tmp, recursive=TRUE) ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"WRITE\")  ## data: simple (integer sequence) of 1:16 times 10 vec <- 1:16 * 10L subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Basic Writing using Low-Level Code","title":null,"text":"","code":"ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"WRITE\")  ## data: simple (integer sequence) of 1:16 times 10 vec <- 1:16 * 10L subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Writing Sparse Cells","title":null,"text":"","code":"tmp <- urisparse unlink(tmp, recursive=TRUE)  d1  <- tiledb_dim(\"d1\", domain = c(1L, 5L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 5L)) dom <- tiledb_domain(c(d1, d2)) val <- tiledb_attr(\"val\", type = \"INT32\") sch <- tiledb_array_schema(dom, val, sparse=TRUE) tiledb_array_create(tmp, sch) ## [1] \"/tmp/Rtmp4X6VQi/sparse\" # Prepare some data data <- c(3L, 4L, 1L, 2L)  I <- c(3, 4, 1, 2) J <- c(3, 4, 2, 1)  # Open the array and write the data to it A <- tiledb_array(uri = tmp) A[I, J] <- data"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Writing Encrypted Arrays","title":null,"text":"","code":"# open for writing with corresponding encryption key A <- tiledb_array(uridensewkey, encryption_key = encryption_key) # access array as usual"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Fixed-length Attributes","title":null,"text":"","code":"if (dir.exists(uridensefix)) unlink(uridensefix, recursive=TRUE) d1  <- tiledb_dim(\"d1\", domain = c(1L, 4L)) d2  <- tiledb_dim(\"d2\", domain = c(1L, 4L)) dom <- tiledb_domain(c(d1, d2))  vec <- 1:32 * 10L attr <- tiledb_attr(\"a\", type = r_to_tiledb_type(vec))  ## set to two values per cell tiledb:::libtiledb_attribute_set_cell_val_num(attr@ptr, 2) sch <- tiledb_array_schema(dom, attr) tiledb_array_create(uridensefix, sch) ## [1] \"/tmp/Rtmp4X6VQi/densefix\" ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensefix, \"WRITE\") subarr <- c(1L,4L, 1L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr)  #TODO Higher-level R support"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Var-length Attributes","title":null,"text":"","code":"if (dir.exists(uridensevar)) unlink(uridensevar, recursive=TRUE) ## Define array ## The array will be 4x4 with dimensions \"rows\" and \"cols\", with domain [1,4]. dom <- tiledb_domain(dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\")))   attr <- tiledb_attr(\"a1\", type = \"CHAR\") ## set to variable length tiledb:::libtiledb_attribute_set_cell_val_num(attr@ptr, NA)  ## now set the schema ctx <- tiledb_ctx() schptr <- tiledb:::libtiledb_array_schema_create(ctx@ptr, \"DENSE\") tiledb:::libtiledb_array_schema_set_domain(schptr, dom@ptr) tiledb:::libtiledb_array_schema_set_cell_order(schptr, \"ROW_MAJOR\") tiledb:::libtiledb_array_schema_set_tile_order(schptr, \"ROW_MAJOR\") tiledb:::libtiledb_array_schema_add_attribute(schptr, attr@ptr)    ## Create the (empty) array on disk. tiledb:::libtiledb_array_create(uridensevar, schptr) ## [1] \"/tmp/Rtmp4X6VQi/densevar\" data <- \"abbcccddeeefghhhijjjkklmnoop\"; offsets <- c(0L, 1L, 3L, 6L, 8L, 11L, 12L, 13L, 16L, 17L, 20L, 22L, 23L, 24L, 25L, 27L)  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"WRITE\") qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"WRITE\") qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\")  bufptr <- tiledb:::libtiledb_query_buffer_var_char_create(offsets, data) qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr) ## <pointer: 0x55efdca594d0> #TODO Higher-level R support"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Writing at a Timestamp","title":null,"text":"","code":"# 'at' uses Sys.time() from R in seconds, and shifts back 10 minutes at <- Sys.time() - 10*60  # 'arr' is an already created array, could also be encrypted and carry key arr <- tiledb_array_open_at(arr, \"WRITE\", Sys.time() - 600)  # arr is now open for writing, any suitable content can be written the usual way"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Getting the Fragment Info","title":null,"text":"","code":"# continuing from previous example on dense variable length array # (but this works of course with any array after a write is needed  # Number of fragments numfrag <- tiledb_query_get_fragment_num(qry)  # URI of given fragment, with 0 <= idx < numfrag uri <- tiledb_query_get_fragment_uri(qry, idx)  # Timestamp range of given fragment, with 0 <= idx < numfrag tsrange <- tiledb_query_get_fragment_timestamp_range(qry, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Reading Arrays","title":null,"text":"","code":"# get a schema directly from storage, uri holds a valid array URI uri <- \"<array_uri>\" sch <- schema(uri)  # get an encrypted scheme directory from storage, enc_key is the AES-256 key sch <- schema(uri, enc_key)  # get a schema from an already openened array # using a sparse array example, works the same for dense arrays array_name <- urisparse A <- tiledb_array(uri = array_name, is.sparse = TRUE) sch <- schema(A)  # one can also open encrypted arrays with key for AES-256 encryption # and all other options (for sparse arrays, data.frame objects...) key <- \"0123456789abcdeF0123456789abcdeF\" A <- tiledb_array(uri = array_name, encryption_key = key) sch <- schema(A) # Get array schema, this shows the sparse accessor # and it is similar for tiledb_dense() A <- tiledb_array(uri = urisparse, is.sparse = TRUE) schema <- schema(A)  # Get array type sparse <- is.sparse(schema)  # Get tile capacity t_capacity <- capacity(schema)  # Get tile order t_order <- tile_order(schema)  # Get cell order c_order <- cell_order(schema)  # Get coordinates and offset filter list reslist <- filter_list(schema)  # Get the array domain dom <- domain(schema)  # Get all attributes as list attrs <- attrs(schema)  # Check if given attribute exists has_attr <- has_attribute(schema, \"attr\")  # Get attribute from name attr <- attrs(schema, \"attr\")  # Dump the array schema in ASCII format in the selected output show(schema) # ... get array schema # ... get domain from schema  # Get the domain datatype (i.e., the datatype of all dimensions) type <- datatype(dom)  # Get number of dimensions dim_num <- dim(dom)  # Get all dimension dims <- dimensions(dom)  # Get dimension by index (0 <= i < dim_num) dim <- tiledb_domain_get_dimension_from_index(dom, 1)  # Get dimension by name dim <- tiledb_domain_get_dimension_from_name(dom, \"dimname\")  # Check dimension for name tiledb_domain_has_dimension(dom, \"dimname\")  # Dump the domain in ASCII format in the selected output show(dom) # ... get array schema # ... get domain # ... get dimension by index or name  # Get dimension name dim_name <- name(dim)  # Get dimension datatype dim_type <- datatype(dim)  # Get dimension domain domain <- domain(dim)  # Get tile extent tile_extent <- tile(dim)  # Dump the dimension in ASCII format in the selected output show(dim) # ... get array schema # ... get attribute by index or name  # Get attribute name attr_name <- name(attr)  # Get attribute datatype attr_type <- datatype(attr)  # Get filter list filter_list <- filter_list(attr)  # Check if attribute is variable-length is_var <- tiledb_attribute_is_variable_sized(attr)  # Get number of values per cell num <- ncells(attr)  # Get cell size for this attribute sz <- tiledb_attribute_get_cell_size(attr)  # Get the fill value (for both fixed and variable sized attributes) tiledb_attribute_get_fill_value(attr)  # Dump the attribute in ASCII format in the selected output show(attr) # dim hold a previously created or load Dimension object fltrlst <- filter_list(dim) # or fltrlst <- filter_list(attr) for some attribute `attr`  # get number of filter nb <- nfilters(fltrlst)  # get max chunk size mxsz <- max_chunk_size(fltrlst)  # get filter by index from filter list (0 <= idx < num_filters) idx <- i fltr <- fltrlst[idx]  # get option (that is filter-dependent) from filter tiledb_filter_get_option(fltr, \"COMPRESSION_LEVEL\")  # set option (that is filter-dependent) for filter tiledb_filter_set_option(fltr, \"COMPRESSION_LEVEL\", 9)  # get filter type tiledb_filter_type(fltr) # Open a dense array A <- tiledb_array(uri = uridense)  # Or, open a sparse array # A <- tiledb_sparse(uri = \"<array-uri>\", ctx=ctx)  # Slice only rows 1, 2 and cols 2, 3, 4 data <- A[1:2, 2:4] show(data) ## $rows ## [1] 1 1 1 2 2 2 ##  ## $cols ## [1] 2 3 4 2 3 4 ##  ## $a ## [1] 20 30 40 60 70 80 ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") ## subarray of rows 1,2 and cols 2,3,4 subarr <- c(1L,2L, 2L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") v <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", v) qryptr <- tiledb:::libtiledb_query_submit(qryptr) print(v)         # unformed array, no coordinates ## [1] 20 30 40 60 70 80 res <- tiledb:::libtiledb_array_close(arrptr) ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"READ\")  subarr <- c(1L,4L, 1L,4L) bufptr <- tiledb:::libtiledb_query_buffer_var_char_alloc(arrptr, subarr, \"a1\", 16, 100)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\")  qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr) ## <pointer: 0x55efdd8e1630> mat <- tiledb:::libtiledb_query_get_buffer_var_char(bufptr) print(mat, quote=FALSE) ##      [,1] [,2] [,3] [,4] ## [1,] a    eee  i    m    ## [2,] bb   f    jjj  n    ## [3,] ccc  g    kk   oo   ## [4,] dd   hhh  l    p # example with one fixed- and one variable-sized domain dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"d2\", NULL, NULL, \"ASCII\")))  # ... add attribute(s), write content, ... # ... arr is the array opened  # retrieve non-empty domain for fixed-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 1) tiledb_array_get_non_empty_domain_from_name(arr, \"d1\") # retrieve non-empty domain for variable-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 2) tiledb_array_get_non_empty_domain_from_name(arr, \"d2\") # Arrays are reopened automatically for you based on # read or write being performed. For direct pointer-based # access you can also explicitly reopen arr@ptr <- tiledb:::libtiledb_array_reopen(arr@ptr) # Open the array and read as a data.frame from it. A <- tiledb_array(uri = array_name, as.data.frame=TRUE,                   encryption_key = encryption_key)  # Slice rows 1 and 2, and cols 2, 3 and 4 A[1:2, 2:4]  # timestamps for TileDB are milliseconds since epoch, we use # R Datime object to pass the value tstamp <- as.POSIXct(1577955845.678, origin=\"1970-01-01\")  # open the array for reading at the timestamp A <- tiledb_array_open_at(A, \"READ\", tstamp) # create query, allocate result buffer, ...  # add two query range on the first dimension qry <- tiledb_query_add_range(qry, schema, \"d1\", 2L, 4L) qry <- tiledb_query_add_range(qry, schema, \"d1\", 6L, 8L)  # add a query range on the second dimension, using variable size qry <- tiledb_query_add_range(qry, schema, \"d2\", \"caaa\", \"gzzz\")   # number of ranges given index num <- tiledb_query_get_range_num(qry, idx)  # range start, end and stride for range i (1 <= i <= num) rng <- tiledb_query_get_range(qry, idx, i)  # range start and end for variable-sized dimension for range i (1 <= i <= num) strrng <- tiledb_query_get_range_var(qry, idx, i) ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") subarr <- c(1L,4L, 1L,4L) qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) vec <- integer(4)  # reserve (insufficient) space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) finished <- FALSE while (!finished) {   qryptr <- tiledb:::libtiledb_query_submit(qryptr)   print(vec)   finished <- tiledb:::libtiledb_query_status(qryptr) == \"COMPLETE\" } ## [1] 10 20 30 40 ## [1] 50 60 70 80 ## [1]  90 100 110 120 ## [1] 130 140 150 160 res <- tiledb:::libtiledb_array_close(arrptr) # ...create query object  # estimated size of a fixed-length attribute in sparse array sz <- tiledb_query_get_est_result_size(qry, \"a\")  # estimated size of a variable-length attribute in dense or sparse array sz <- tiledb_query_get_est_result_size_var(qry, \"b\") # time traveling is currently only accessible via the lower-level API # we use the R Datetime type; internally TileDB uses milliseconds since epoch tstamp <- Sys.time() - 60*60 # one hour ago  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open_at(ctx@ptr, uridense, \"READ\", tstamp) subarr <- c(1L,2L, 2L,4L) qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") a <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", a) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr) a ## [1] NA NA NA NA NA NA # we can do the same with encrypted arrays encryption_key <- \"0123456789abcdeF0123456789abcdeF\" arrptr <- tiledb:::libtiledb_array_open_at_with_key(ctx@ptr, uridensewkey, \"READ\",                                                     encryption_key, tstamp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Reading the Array Schema","title":null,"text":"","code":"# get a schema directly from storage, uri holds a valid array URI uri <- \"<array_uri>\" sch <- schema(uri)  # get an encrypted scheme directory from storage, enc_key is the AES-256 key sch <- schema(uri, enc_key)  # get a schema from an already openened array # using a sparse array example, works the same for dense arrays array_name <- urisparse A <- tiledb_array(uri = array_name, is.sparse = TRUE) sch <- schema(A)  # one can also open encrypted arrays with key for AES-256 encryption # and all other options (for sparse arrays, data.frame objects...) key <- \"0123456789abcdeF0123456789abcdeF\" A <- tiledb_array(uri = array_name, encryption_key = key) sch <- schema(A) # Get array schema, this shows the sparse accessor # and it is similar for tiledb_dense() A <- tiledb_array(uri = urisparse, is.sparse = TRUE) schema <- schema(A)  # Get array type sparse <- is.sparse(schema)  # Get tile capacity t_capacity <- capacity(schema)  # Get tile order t_order <- tile_order(schema)  # Get cell order c_order <- cell_order(schema)  # Get coordinates and offset filter list reslist <- filter_list(schema)  # Get the array domain dom <- domain(schema)  # Get all attributes as list attrs <- attrs(schema)  # Check if given attribute exists has_attr <- has_attribute(schema, \"attr\")  # Get attribute from name attr <- attrs(schema, \"attr\")  # Dump the array schema in ASCII format in the selected output show(schema) # ... get array schema # ... get domain from schema  # Get the domain datatype (i.e., the datatype of all dimensions) type <- datatype(dom)  # Get number of dimensions dim_num <- dim(dom)  # Get all dimension dims <- dimensions(dom)  # Get dimension by index (0 <= i < dim_num) dim <- tiledb_domain_get_dimension_from_index(dom, 1)  # Get dimension by name dim <- tiledb_domain_get_dimension_from_name(dom, \"dimname\")  # Check dimension for name tiledb_domain_has_dimension(dom, \"dimname\")  # Dump the domain in ASCII format in the selected output show(dom) # ... get array schema # ... get domain # ... get dimension by index or name  # Get dimension name dim_name <- name(dim)  # Get dimension datatype dim_type <- datatype(dim)  # Get dimension domain domain <- domain(dim)  # Get tile extent tile_extent <- tile(dim)  # Dump the dimension in ASCII format in the selected output show(dim) # ... get array schema # ... get attribute by index or name  # Get attribute name attr_name <- name(attr)  # Get attribute datatype attr_type <- datatype(attr)  # Get filter list filter_list <- filter_list(attr)  # Check if attribute is variable-length is_var <- tiledb_attribute_is_variable_sized(attr)  # Get number of values per cell num <- ncells(attr)  # Get cell size for this attribute sz <- tiledb_attribute_get_cell_size(attr)  # Get the fill value (for both fixed and variable sized attributes) tiledb_attribute_get_fill_value(attr)  # Dump the attribute in ASCII format in the selected output show(attr) # dim hold a previously created or load Dimension object fltrlst <- filter_list(dim) # or fltrlst <- filter_list(attr) for some attribute `attr`  # get number of filter nb <- nfilters(fltrlst)  # get max chunk size mxsz <- max_chunk_size(fltrlst)  # get filter by index from filter list (0 <= idx < num_filters) idx <- i fltr <- fltrlst[idx]  # get option (that is filter-dependent) from filter tiledb_filter_get_option(fltr, \"COMPRESSION_LEVEL\")  # set option (that is filter-dependent) for filter tiledb_filter_set_option(fltr, \"COMPRESSION_LEVEL\", 9)  # get filter type tiledb_filter_type(fltr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Inspecting the array schema","title":null,"text":"","code":"# get a schema directly from storage, uri holds a valid array URI uri <- \"<array_uri>\" sch <- schema(uri)  # get an encrypted scheme directory from storage, enc_key is the AES-256 key sch <- schema(uri, enc_key)  # get a schema from an already openened array # using a sparse array example, works the same for dense arrays array_name <- urisparse A <- tiledb_array(uri = array_name, is.sparse = TRUE) sch <- schema(A)  # one can also open encrypted arrays with key for AES-256 encryption # and all other options (for sparse arrays, data.frame objects...) key <- \"0123456789abcdeF0123456789abcdeF\" A <- tiledb_array(uri = array_name, encryption_key = key) sch <- schema(A) # Get array schema, this shows the sparse accessor # and it is similar for tiledb_dense() A <- tiledb_array(uri = urisparse, is.sparse = TRUE) schema <- schema(A)  # Get array type sparse <- is.sparse(schema)  # Get tile capacity t_capacity <- capacity(schema)  # Get tile order t_order <- tile_order(schema)  # Get cell order c_order <- cell_order(schema)  # Get coordinates and offset filter list reslist <- filter_list(schema)  # Get the array domain dom <- domain(schema)  # Get all attributes as list attrs <- attrs(schema)  # Check if given attribute exists has_attr <- has_attribute(schema, \"attr\")  # Get attribute from name attr <- attrs(schema, \"attr\")  # Dump the array schema in ASCII format in the selected output show(schema)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Inspecting Domain","title":null,"text":"","code":"# ... get array schema # ... get domain from schema  # Get the domain datatype (i.e., the datatype of all dimensions) type <- datatype(dom)  # Get number of dimensions dim_num <- dim(dom)  # Get all dimension dims <- dimensions(dom)  # Get dimension by index (0 <= i < dim_num) dim <- tiledb_domain_get_dimension_from_index(dom, 1)  # Get dimension by name dim <- tiledb_domain_get_dimension_from_name(dom, \"dimname\")  # Check dimension for name tiledb_domain_has_dimension(dom, \"dimname\")  # Dump the domain in ASCII format in the selected output show(dom)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Inspecting Dimensions","title":null,"text":"","code":"# ... get array schema # ... get domain # ... get dimension by index or name  # Get dimension name dim_name <- name(dim)  # Get dimension datatype dim_type <- datatype(dim)  # Get dimension domain domain <- domain(dim)  # Get tile extent tile_extent <- tile(dim)  # Dump the dimension in ASCII format in the selected output show(dim)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Inspecting Attributes","title":null,"text":"","code":"# ... get array schema # ... get attribute by index or name  # Get attribute name attr_name <- name(attr)  # Get attribute datatype attr_type <- datatype(attr)  # Get filter list filter_list <- filter_list(attr)  # Check if attribute is variable-length is_var <- tiledb_attribute_is_variable_sized(attr)  # Get number of values per cell num <- ncells(attr)  # Get cell size for this attribute sz <- tiledb_attribute_get_cell_size(attr)  # Get the fill value (for both fixed and variable sized attributes) tiledb_attribute_get_fill_value(attr)  # Dump the attribute in ASCII format in the selected output show(attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Inspecting Filters","title":null,"text":"","code":"# dim hold a previously created or load Dimension object fltrlst <- filter_list(dim) # or fltrlst <- filter_list(attr) for some attribute `attr`  # get number of filter nb <- nfilters(fltrlst)  # get max chunk size mxsz <- max_chunk_size(fltrlst)  # get filter by index from filter list (0 <= idx < num_filters) idx <- i fltr <- fltrlst[idx]  # get option (that is filter-dependent) from filter tiledb_filter_get_option(fltr, \"COMPRESSION_LEVEL\")  # set option (that is filter-dependent) for filter tiledb_filter_set_option(fltr, \"COMPRESSION_LEVEL\", 9)  # get filter type tiledb_filter_type(fltr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Basic Reading","title":null,"text":"","code":"# Open a dense array A <- tiledb_array(uri = uridense)  # Or, open a sparse array # A <- tiledb_sparse(uri = \"<array-uri>\", ctx=ctx)  # Slice only rows 1, 2 and cols 2, 3, 4 data <- A[1:2, 2:4] show(data) ## $rows ## [1] 1 1 1 2 2 2 ##  ## $cols ## [1] 2 3 4 2 3 4 ##  ## $a ## [1] 20 30 40 60 70 80 ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") ## subarray of rows 1,2 and cols 2,3,4 subarr <- c(1L,2L, 2L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") v <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", v) qryptr <- tiledb:::libtiledb_query_submit(qryptr) print(v)         # unformed array, no coordinates ## [1] 20 30 40 60 70 80 res <- tiledb:::libtiledb_array_close(arrptr) ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"READ\")  subarr <- c(1L,4L, 1L,4L) bufptr <- tiledb:::libtiledb_query_buffer_var_char_alloc(arrptr, subarr, \"a1\", 16, 100)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\")  qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr) ## <pointer: 0x55efdd8e1630> mat <- tiledb:::libtiledb_query_get_buffer_var_char(bufptr) print(mat, quote=FALSE) ##      [,1] [,2] [,3] [,4] ## [1,] a    eee  i    m    ## [2,] bb   f    jjj  n    ## [3,] ccc  g    kk   oo   ## [4,] dd   hhh  l    p # example with one fixed- and one variable-sized domain dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"d2\", NULL, NULL, \"ASCII\")))  # ... add attribute(s), write content, ... # ... arr is the array opened  # retrieve non-empty domain for fixed-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 1) tiledb_array_get_non_empty_domain_from_name(arr, \"d1\") # retrieve non-empty domain for variable-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 2) tiledb_array_get_non_empty_domain_from_name(arr, \"d2\") # Arrays are reopened automatically for you based on # read or write being performed. For direct pointer-based # access you can also explicitly reopen arr@ptr <- tiledb:::libtiledb_array_reopen(arr@ptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Basic Reading using Low-Level Code","title":null,"text":"","code":"ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") ## subarray of rows 1,2 and cols 2,3,4 subarr <- c(1L,2L, 2L,4L)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") v <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", v) qryptr <- tiledb:::libtiledb_query_submit(qryptr) print(v)         # unformed array, no coordinates ## [1] 20 30 40 60 70 80 res <- tiledb:::libtiledb_array_close(arrptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Variable-length Attributes","title":null,"text":"","code":"ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridensevar, \"READ\")  subarr <- c(1L,4L, 1L,4L) bufptr <- tiledb:::libtiledb_query_buffer_var_char_alloc(arrptr, subarr, \"a1\", 16, 100)  qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\")  qryptr <- tiledb:::libtiledb_query_set_buffer_var_char(qryptr, \"a1\", bufptr) qryptr <- tiledb:::libtiledb_query_submit(qryptr) tiledb:::libtiledb_array_close(arrptr) ## <pointer: 0x55efdd8e1630> mat <- tiledb:::libtiledb_query_get_buffer_var_char(bufptr) print(mat, quote=FALSE) ##      [,1] [,2] [,3] [,4] ## [1,] a    eee  i    m    ## [2,] bb   f    jjj  n    ## [3,] ccc  g    kk   oo   ## [4,] dd   hhh  l    p"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Getting the Non-empty Domain","title":null,"text":"","code":"# example with one fixed- and one variable-sized domain dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 4L), 4L, \"INT32\"),                               tiledb_dim(\"d2\", NULL, NULL, \"ASCII\")))  # ... add attribute(s), write content, ... # ... arr is the array opened  # retrieve non-empty domain for fixed-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 1) tiledb_array_get_non_empty_domain_from_name(arr, \"d1\") # retrieve non-empty domain for variable-sized dimension tiledb_array_get_non_empty_domain_from_index(arr, 2) tiledb_array_get_non_empty_domain_from_name(arr, \"d2\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Reopening Arrays","title":null,"text":"","code":"# Arrays are reopened automatically for you based on # read or write being performed. For direct pointer-based # access you can also explicitly reopen arr@ptr <- tiledb:::libtiledb_array_reopen(arr@ptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Reading Encrypted Arrays","title":null,"text":"","code":"# Open the array and read as a data.frame from it. A <- tiledb_array(uri = array_name, as.data.frame=TRUE,                   encryption_key = encryption_key)  # Slice rows 1 and 2, and cols 2, 3 and 4 A[1:2, 2:4]  # timestamps for TileDB are milliseconds since epoch, we use # R Datime object to pass the value tstamp <- as.POSIXct(1577955845.678, origin=\"1970-01-01\")  # open the array for reading at the timestamp A <- tiledb_array_open_at(A, \"READ\", tstamp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Multi-range Subarrays","title":null,"text":"","code":"# create query, allocate result buffer, ...  # add two query range on the first dimension qry <- tiledb_query_add_range(qry, schema, \"d1\", 2L, 4L) qry <- tiledb_query_add_range(qry, schema, \"d1\", 6L, 8L)  # add a query range on the second dimension, using variable size qry <- tiledb_query_add_range(qry, schema, \"d2\", \"caaa\", \"gzzz\")   # number of ranges given index num <- tiledb_query_get_range_num(qry, idx)  # range start, end and stride for range i (1 <= i <= num) rng <- tiledb_query_get_range(qry, idx, i)  # range start and end for variable-sized dimension for range i (1 <= i <= num) strrng <- tiledb_query_get_range_var(qry, idx, i)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Incomplete Queries","title":null,"text":"","code":"ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open(ctx@ptr, uridense, \"READ\") qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") subarr <- c(1L,4L, 1L,4L) qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) vec <- integer(4)  # reserve (insufficient) space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", vec) finished <- FALSE while (!finished) {   qryptr <- tiledb:::libtiledb_query_submit(qryptr)   print(vec)   finished <- tiledb:::libtiledb_query_status(qryptr) == \"COMPLETE\" } ## [1] 10 20 30 40 ## [1] 50 60 70 80 ## [1]  90 100 110 120 ## [1] 130 140 150 160 res <- tiledb:::libtiledb_array_close(arrptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Result Estimation","title":null,"text":"","code":"# ...create query object  # estimated size of a fixed-length attribute in sparse array sz <- tiledb_query_get_est_result_size(qry, \"a\")  # estimated size of a variable-length attribute in dense or sparse array sz <- tiledb_query_get_est_result_size_var(qry, \"b\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Time Traveling","title":null,"text":"","code":"# time traveling is currently only accessible via the lower-level API # we use the R Datetime type; internally TileDB uses milliseconds since epoch tstamp <- Sys.time() - 60*60 # one hour ago  ctx <- tiledb_ctx() arrptr <- tiledb:::libtiledb_array_open_at(ctx@ptr, uridense, \"READ\", tstamp) subarr <- c(1L,2L, 2L,4L) qryptr <- tiledb:::libtiledb_query(ctx@ptr, arrptr, \"READ\") qryptr <- tiledb:::libtiledb_query_set_subarray(qryptr, subarr) qryptr <- tiledb:::libtiledb_query_set_layout(qryptr, \"ROW_MAJOR\") a <- integer(6)  # reserve space qryptr <- tiledb:::libtiledb_query_set_buffer(qryptr, \"a\", a) qryptr <- tiledb:::libtiledb_query_submit(qryptr) res <- tiledb:::libtiledb_array_close(arrptr) a ## [1] NA NA NA NA NA NA # we can do the same with encrypted arrays encryption_key <- \"0123456789abcdeF0123456789abcdeF\" arrptr <- tiledb:::libtiledb_array_open_at_with_key(ctx@ptr, uridensewkey, \"READ\",                                                     encryption_key, tstamp)"},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Asynchronous Queries","title":null,"text":"","code":"#  ... create read or write query  # Instead of using tiledb_query_submit(), use tiledb_query_submit_async() # There is an alternate form with a callback function which is not yet supported tiledb_query_submit_async(qry)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Configuration","title":null,"text":"","code":"# Create a configuration object config <- tiledb_config()  # Set a configuration parameter config[\"sm.tile_cache_size\"] <- \"5000\"  # Get a configuration parameter tile_cache_size <- config[\"sm.tile_cache_size\"]  # Unset a configuration parameter tiledb_config_unset(config, \"sm.tile_cache_size\") ## <pointer: 0x55efe2880100> # Save to file config <- tiledb_config() config[\"sm.tile_cache_size\"] <- 0; file <- tempfile(pattern = \"tiledb_config\", fileext = \".txt\") tiledb_config_save(config, file) ## [1] \"/tmp/Rtmp4X6VQi/tiledb_config13562d561394b7.txt\" # Load from file config_loaded <- tiledb_config_load(file) tile_cache_size = config_loaded[\"sm.tile_cache_size\"] # R has no native iterator but one loop over the config elements # by retrieving the configuration as a vector  cfg <- as.vector(tiledb_config())  # print all non-empty config elements for (n in names(cfg))    if (cfg[n] != \"\")       cat(n, \":\", cfg[n], \"\\n\") ## config.env_var_prefix : TILEDB_  ## rest.http_compressor : any  ## rest.server_address : https://api.tiledb.com  ## rest.server_serialization_format : CAPNP  ## sm.check_coord_dups : true  ## sm.check_coord_oob : true  ## sm.check_global_order : true  ## sm.compute_concurrency_level : 12  ## sm.consolidation.amplification : 1.0  ## sm.consolidation.buffer_size : 50000000  ## sm.consolidation.mode : fragments  ## sm.consolidation.step_max_frags : 4294967295  ## sm.consolidation.step_min_frags : 4294967295  ## sm.consolidation.step_size_ratio : 0.0  ## sm.consolidation.steps : 4294967295  ## sm.dedup_coords : false  ## sm.enable_signal_handlers : true  ## sm.io_concurrency_level : 12  ## sm.memory_budget : 5368709120  ## sm.memory_budget_var : 10737418240  ## sm.num_tbb_threads : -1  ## sm.skip_checksum_validation : false  ## sm.sub_partitioner_memory_budget : 0  ## sm.tile_cache_size : 10000000  ## sm.vacuum.mode : fragments  ## sm.var_offsets.bitsize : 64  ## sm.var_offsets.extra_element : false  ## sm.var_offsets.mode : bytes  ## vfs.azure.block_list_block_size : 5242880  ## vfs.azure.max_parallel_ops : 12  ## vfs.azure.use_block_list_upload : true  ## vfs.azure.use_https : true  ## vfs.file.enable_filelocks : true  ## vfs.file.max_parallel_ops : 12  ## vfs.file.posix_directory_permissions : 755  ## vfs.file.posix_file_permissions : 644  ## vfs.gcs.max_parallel_ops : 12  ## vfs.gcs.multi_part_size : 5242880  ## vfs.gcs.use_multi_part_upload : true  ## vfs.min_batch_gap : 512000  ## vfs.min_batch_size : 20971520  ## vfs.min_parallel_size : 10485760  ## vfs.read_ahead_cache_size : 10485760  ## vfs.read_ahead_size : 102400  ## vfs.s3.connect_max_tries : 5  ## vfs.s3.connect_scale_factor : 25  ## vfs.s3.connect_timeout_ms : 3000  ## vfs.s3.logging_level : Off  ## vfs.s3.max_parallel_ops : 12  ## vfs.s3.multipart_part_size : 5242880  ## vfs.s3.proxy_port : 0  ## vfs.s3.proxy_scheme : http  ## vfs.s3.region : us-east-1  ## vfs.s3.request_timeout_ms : 3000  ## vfs.s3.requester_pays : false  ## vfs.s3.scheme : https  ## vfs.s3.use_multipart_upload : true  ## vfs.s3.use_virtual_addressing : true  ## vfs.s3.verify_ssl : true"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Basic Usage","title":null,"text":"","code":"# Create a configuration object config <- tiledb_config()  # Set a configuration parameter config[\"sm.tile_cache_size\"] <- \"5000\"  # Get a configuration parameter tile_cache_size <- config[\"sm.tile_cache_size\"]  # Unset a configuration parameter tiledb_config_unset(config, \"sm.tile_cache_size\") ## <pointer: 0x55efe2880100>"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Save and Load to File","title":null,"text":"","code":"# Save to file config <- tiledb_config() config[\"sm.tile_cache_size\"] <- 0; file <- tempfile(pattern = \"tiledb_config\", fileext = \".txt\") tiledb_config_save(config, file) ## [1] \"/tmp/Rtmp4X6VQi/tiledb_config13562d561394b7.txt\" # Load from file config_loaded <- tiledb_config_load(file) tile_cache_size = config_loaded[\"sm.tile_cache_size\"]"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Configuration Iterator","title":null,"text":"","code":"# R has no native iterator but one loop over the config elements # by retrieving the configuration as a vector  cfg <- as.vector(tiledb_config())  # print all non-empty config elements for (n in names(cfg))    if (cfg[n] != \"\")       cat(n, \":\", cfg[n], \"\\n\") ## config.env_var_prefix : TILEDB_  ## rest.http_compressor : any  ## rest.server_address : https://api.tiledb.com  ## rest.server_serialization_format : CAPNP  ## sm.check_coord_dups : true  ## sm.check_coord_oob : true  ## sm.check_global_order : true  ## sm.compute_concurrency_level : 12  ## sm.consolidation.amplification : 1.0  ## sm.consolidation.buffer_size : 50000000  ## sm.consolidation.mode : fragments  ## sm.consolidation.step_max_frags : 4294967295  ## sm.consolidation.step_min_frags : 4294967295  ## sm.consolidation.step_size_ratio : 0.0  ## sm.consolidation.steps : 4294967295  ## sm.dedup_coords : false  ## sm.enable_signal_handlers : true  ## sm.io_concurrency_level : 12  ## sm.memory_budget : 5368709120  ## sm.memory_budget_var : 10737418240  ## sm.num_tbb_threads : -1  ## sm.skip_checksum_validation : false  ## sm.sub_partitioner_memory_budget : 0  ## sm.tile_cache_size : 10000000  ## sm.vacuum.mode : fragments  ## sm.var_offsets.bitsize : 64  ## sm.var_offsets.extra_element : false  ## sm.var_offsets.mode : bytes  ## vfs.azure.block_list_block_size : 5242880  ## vfs.azure.max_parallel_ops : 12  ## vfs.azure.use_block_list_upload : true  ## vfs.azure.use_https : true  ## vfs.file.enable_filelocks : true  ## vfs.file.max_parallel_ops : 12  ## vfs.file.posix_directory_permissions : 755  ## vfs.file.posix_file_permissions : 644  ## vfs.gcs.max_parallel_ops : 12  ## vfs.gcs.multi_part_size : 5242880  ## vfs.gcs.use_multi_part_upload : true  ## vfs.min_batch_gap : 512000  ## vfs.min_batch_size : 20971520  ## vfs.min_parallel_size : 10485760  ## vfs.read_ahead_cache_size : 10485760  ## vfs.read_ahead_size : 102400  ## vfs.s3.connect_max_tries : 5  ## vfs.s3.connect_scale_factor : 25  ## vfs.s3.connect_timeout_ms : 3000  ## vfs.s3.logging_level : Off  ## vfs.s3.max_parallel_ops : 12  ## vfs.s3.multipart_part_size : 5242880  ## vfs.s3.proxy_port : 0  ## vfs.s3.proxy_scheme : http  ## vfs.s3.region : us-east-1  ## vfs.s3.request_timeout_ms : 3000  ## vfs.s3.requester_pays : false  ## vfs.s3.scheme : https  ## vfs.s3.use_multipart_upload : true  ## vfs.s3.use_virtual_addressing : true  ## vfs.s3.verify_ssl : true"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Array Metadata","title":null,"text":"One can read key: one can retrieve metadata :","code":"# 'array' can be a URI, or an array opened for writing tiledb_put_metadata(array, \"aaa\", 100L) tiledb_put_metadata(array, \"bb\", c(1.1, 2.2)) # 'array' can be a URI, or an array opened for reading tiledb_get_metadata(array, \"aaa\") # 'array' can be a URI, or an array opened for reading md <- tiledb_get_all_metadata(array)  # prints all keys and (formatted) values print(md) # 'array' can be a URI, or an array opened for writing tiledb_delete_metadata(array, \"aaa\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Writing Array Metadata","title":null,"text":"","code":"# 'array' can be a URI, or an array opened for writing tiledb_put_metadata(array, \"aaa\", 100L) tiledb_put_metadata(array, \"bb\", c(1.1, 2.2))"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Reading Array Metadata","title":null,"text":"One can read key: one can retrieve metadata :","code":"# 'array' can be a URI, or an array opened for reading tiledb_get_metadata(array, \"aaa\") # 'array' can be a URI, or an array opened for reading md <- tiledb_get_all_metadata(array)  # prints all keys and (formatted) values print(md)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Deleting Array Metadata","title":null,"text":"","code":"# 'array' can be a URI, or an array opened for writing tiledb_delete_metadata(array, \"aaa\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Consolidating And Vacuuming","title":null,"text":"","code":"# An array URI uri <- \"<array_uri>\"  # Consolidate with default configuration array_consolidate(uri)  # Alteratively, create and pass a configuration object cfg <- tiledb_config() cfg[\"sm.consolidation.steps\"] <- \"3\" cfg[\"sm.consolidation.mode\"] <- \"fragments\" array_consolidate(uri, cfg) # An array URI uri <- \"<array_uri>\"  # Vacuum with default configuration array_vacuum(uri)  # Alteratively, create and pass a configuration object cfg <- tiledb_config() cfg[\"sm.vacuum.mode\"] <- \"fragments\" array_vacuum(uri, cfg)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Fragments","title":null,"text":"","code":"# An array URI uri <- \"<array_uri>\"  # Consolidate with default configuration array_consolidate(uri)  # Alteratively, create and pass a configuration object cfg <- tiledb_config() cfg[\"sm.consolidation.steps\"] <- \"3\" cfg[\"sm.consolidation.mode\"] <- \"fragments\" array_consolidate(uri, cfg)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Vacuuming","title":null,"text":"","code":"# An array URI uri <- \"<array_uri>\"  # Vacuum with default configuration array_vacuum(uri)  # Alteratively, create and pass a configuration object cfg <- tiledb_config() cfg[\"sm.vacuum.mode\"] <- \"fragments\" array_vacuum(uri, cfg)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Object Management","title":null,"text":"","code":"tiledb_group_create(\"/tmp/my_group\") type <- tiledb_object_type(\"<path>\") # List arrays (defaults to default \"PREORDER\" traversal) tiledb_object_ls(uri)  # Walk arrays (with \"POSTORDER\" traversal) returning a data.frame res <- tiledb_object_walk(\"<uri>\", \"POSTORDER\")  # Show the content print(res) tiledb_object_mv(\"/tmp/my_group\", \"/tmp/my_group_2\")  tiledb_object_remove(ctx, \"/tmp/my_group_2/dense_array\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Creating TileDB Groups","title":null,"text":"","code":"tiledb_group_create(\"/tmp/my_group\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Getting the Object Type","title":null,"text":"","code":"type <- tiledb_object_type(\"<path>\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"List the Object Hierarchy","title":null,"text":"","code":"# List arrays (defaults to default \"PREORDER\" traversal) tiledb_object_ls(uri)  # Walk arrays (with \"POSTORDER\" traversal) returning a data.frame res <- tiledb_object_walk(\"<uri>\", \"POSTORDER\")  # Show the content print(res)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Move / Remove Object","title":null,"text":"","code":"tiledb_object_mv(\"/tmp/my_group\", \"/tmp/my_group_2\")  tiledb_object_remove(ctx, \"/tmp/my_group_2/dense_array\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Virtual Filesystem","title":null,"text":"","code":"# binary file to be written uri <- tempfile(pattern = \"tiledb_vfs\", fileext = \".bin\") # open file fhbuf <- tiledb_vfs_open(uri, \"WRITE\")  # create a binary payload from a serialized R object payload <- as.integer(serialize(list(dbl=153, string=\"abcde\"), NULL)) # write it and close file tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)  # write again overwriting previous write fhbuf <- tiledb_vfs_open(uri, \"WRITE\") payload <- as.integer(serialize(list(dbl=153.1, string=\"abcdef\"), NULL)) tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)  # append to existing file fhbuf <- tiledb_vfs_open(uri, \"APPEND\") payload <- as.integer(serialize(c(string=\"ghijkl\"), NULL)) tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf) # open a binary file for reading fhbuf <- tiledb_vfs_open(uri, \"READ\") vec <- tiledb_vfs_read(fhbuf, as.integer64(0), as.integer64(488)) tiledb_vfs_close(fhbuf) # Creating a directory if (!tiledb_vfs_is_dir(\"dir_A\")) {     tiledb_vfs_create_dir(\"dir_A\")     cat(\"Created 'dir_A'\\n\") } else {     cat(\"'dir_A' already exists\\n\") }  # Creating an (empty) file if (!tiledb_vfs_is_file(\"dir_A/file_A\")) {     tiledb_vfs_touch(\"dir_A/file_A\")     cat(\"Created empty file 'dir_A/file_A'\\n\") } else {     cat(\"File 'dir_A/file_A' already existed\\n\") }  # Getting the file size cat(\"Size of file 'dir_A/file_A': \",     tiledb_vfs_file_size(\"dir_A/file_A\"), \"\\n\")  # Moving files (moving directories is similar) tiledb_vfs_move_file(\"dir_A/file_A\", \"dir_A/file_B\")  # Cleaning up tiledb_vfs_remove_file(\"dir_A/file_B\") tiledb_vfs_remove_dir(\"dir_A\") tiledb_vfs_create_bucket(\"s3://my_bucket\")  tiledb_vfs_remove_bucket(\"s3://my_bucket\") ctx <- tiledb_get_context()  config <- tiledb_config() config[\"vfs.file.max_parallel_ops\"] <- 16  vfs <- tiledb_vfs(config, ctx)  # Or create the Config first and pass to the Ctx constructor"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Writing","title":null,"text":"","code":"# binary file to be written uri <- tempfile(pattern = \"tiledb_vfs\", fileext = \".bin\") # open file fhbuf <- tiledb_vfs_open(uri, \"WRITE\")  # create a binary payload from a serialized R object payload <- as.integer(serialize(list(dbl=153, string=\"abcde\"), NULL)) # write it and close file tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)  # write again overwriting previous write fhbuf <- tiledb_vfs_open(uri, \"WRITE\") payload <- as.integer(serialize(list(dbl=153.1, string=\"abcdef\"), NULL)) tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)  # append to existing file fhbuf <- tiledb_vfs_open(uri, \"APPEND\") payload <- as.integer(serialize(c(string=\"ghijkl\"), NULL)) tiledb_vfs_write(fhbuf, payload) tiledb_vfs_close(fhbuf)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Reading","title":null,"text":"","code":"# open a binary file for reading fhbuf <- tiledb_vfs_open(uri, \"READ\") vec <- tiledb_vfs_read(fhbuf, as.integer64(0), as.integer64(488)) tiledb_vfs_close(fhbuf)"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Managing","title":null,"text":"","code":"# Creating a directory if (!tiledb_vfs_is_dir(\"dir_A\")) {     tiledb_vfs_create_dir(\"dir_A\")     cat(\"Created 'dir_A'\\n\") } else {     cat(\"'dir_A' already exists\\n\") }  # Creating an (empty) file if (!tiledb_vfs_is_file(\"dir_A/file_A\")) {     tiledb_vfs_touch(\"dir_A/file_A\")     cat(\"Created empty file 'dir_A/file_A'\\n\") } else {     cat(\"File 'dir_A/file_A' already existed\\n\") }  # Getting the file size cat(\"Size of file 'dir_A/file_A': \",     tiledb_vfs_file_size(\"dir_A/file_A\"), \"\\n\")  # Moving files (moving directories is similar) tiledb_vfs_move_file(\"dir_A/file_A\", \"dir_A/file_B\")  # Cleaning up tiledb_vfs_remove_file(\"dir_A/file_B\") tiledb_vfs_remove_dir(\"dir_A\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"S3","title":null,"text":"","code":"tiledb_vfs_create_bucket(\"s3://my_bucket\")  tiledb_vfs_remove_bucket(\"s3://my_bucket\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Configuring VFS","title":null,"text":"","code":"ctx <- tiledb_get_context()  config <- tiledb_config() config[\"vfs.file.max_parallel_ops\"] <- 16  vfs <- tiledb_vfs(config, ctx)  # Or create the Config first and pass to the Ctx constructor"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Using Performance Statistics","title":null,"text":"","code":"# Start collecting statistics tiledb_stats_enable()  # ... create some query here  res <- A[1:4]  # Stop collecting statistics tiledb_stats_disable()  # Show the statistics on the console tiledb_stats_print()  # Save the statistics to a file tiledb_stats_dump(\"my_file_name\")  # You can also reset the stats as follows tiledb_stats_reset()"},{"path":"https://tiledb-inc.github.io/TileDB-R/documentation.html","id":null,"dir":"","previous_headings":"","what":"Catching Errors","title":null,"text":"","code":"result <- tryCatch({     # Create a group. The code below creates a group `my_group` and prints a     # message because (normally) it will succeed.     tiledb_group_create(\"/tmp/my_group\")      # Create the same group again. If we attempt to create the same group     # `my_group` as shown below, TileDB will return an error.     tiledb_group_create(\"/tmp.my_group\") }, warning = function(w) {    cat(w) }, error = function(e) {     cat(e) }, finally = {} )"},{"path":"https://tiledb-inc.github.io/TileDB-R/index.html","id":"section","dir":"","previous_headings":"","what":"Modern Database Engine for Complex Data Based on Multi-Dimensional Arrays","title":"Modern Database Engine for Complex Data Based on Multi-Dimensional Arrays","text":"TileDB R package offers R interface modern database TileDB.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Modern Database Engine for Complex Data Based on Multi-Dimensional Arrays","text":"Documentation available R package well TileDB API.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Modern Database Engine for Complex Data Based on Multi-Dimensional Arrays","text":"TileDB Embedded needs present, can installed first (package source) TileDB R package build link correctly. Alternatively, system installation found, precompiled shared library used installation R package. TileDB R package published CRAN installed directly via usual. recent released version can installed Github using package remotes. TileDB library installed custom location, need pass explicit path: Note TileDB R package always developed tested latest stable version TileDB, also build newest development version.","code":"> install.packages(\"tiledb\") > if (!requireNamespace(\"remotes\",quietly=TRUE)) install.packages(\"remotes\") > remotes::install_github(\"TileDB-Inc/TileDB-R\") ... > library(tiledb) TileDB R 0.30.0 with TileDB Embedded 2.26.0 on Ubuntu 24.04. See https://tiledb.com for more information about TileDB. > help(package=tiledb) > remotes::install_github(\"TileDB-Inc/TileDB-R\",       args=\"--configure-args='--with-tiledb=/path/to/tiledb'\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/index.html","id":"quick-links","dir":"","previous_headings":"","what":"Quick Links","title":"Modern Database Engine for Complex Data Based on Multi-Dimensional Arrays","text":"TileDB Installation TileDB R Package Docs TileDB Support Forum","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/index.html","id":"copyright","dir":"","previous_headings":"","what":"Copyright","title":"Modern Database Engine for Complex Data Based on Multi-Dimensional Arrays","text":"TileDB R package Copyright 2018-2024 TileDB, Inc","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Modern Database Engine for Complex Data Based on Multi-Dimensional Arrays","text":"MIT","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Getting started","title":null,"text":"TileDB R package installed, can loaded via library(tiledb). Installation supported Windows, Linux macOS via official CRAN package, Linux macOS via conda package well source. Documentation TileDB R package available via help() function within R well via package documentation [introductory notebook][tiledb_notebook]. Documentation TileDB also available. Several “quickstart” examples discussed website available examples directory. vignette discusses similar examples. following examples, URIs describing arrays point local file system object. TileDB built S3 support, proper AWS credentials usual environment variables, URIs s3:///data/bucket can used local file used. See script ex_S3.R example.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Dense Arrays","title":null,"text":"illustrations use array created file ex_1.R one can run within R, command-line. follow along discussion follows, helps run example create array possibly adjusting array location path default value (using current directory , set option, override). file ex_1.R examples directory simple yet complete example extending quickstart_dense.R adding second third attribute. well following examples use tiledb_array() access array; older variants tiledb_dense() tiledb_sparse() remain supported deprecated may removed point future. Read 1-D first example extracts rows 1 2 column 2 array. also limits selection just one attribute (via attrs), asks return data.frame (instead simpler list) (row column, present ) indices printed (via extended=FALSE). Note examples create three two-dimensional attributes. attributes can selected via attrs argument, attrs() method array object. square-bracket indexing selects 2-d attribute object. multiple objects returned (list data.frame), subsetting returned object works via [[var]] $var. numeric index also works (needs account rows cols). Read 2-D works analogously. Note results generally returned vectors, columns data.frame object case option set. can restrict selection subset attributes opening array. also illustrated effect setting .data.frame=TRUE opening array. scheme can generalized variable cells, cells N>1, can expand (atomistic) value corresponding row column indices. column types correspond attribute typed array schema, subject constraint mentioned R types. (char comes factor variable still R 3.6.* default change. can also override, users can .) Consistent data.frame semantics, now requesting named column reduces vector happens R side:","code":"> A <- tiledb_array(uri = uri, attrs = \"b\", +                   as.data.frame=TRUE, extended=FALSE)) > A[1:2,2] [1] 101.5 104.0 > > A <- tiledb_array(uri = uri, attrs = c(\"a\",\"b\"), +                   as.data.frame = TRUE) > A[1:2,2][[\"a\"]] [1] 2 7 > A[1:2,2]$a [1] 2 7 > > A[6:9,3:4] $a [1] 28 29 33 34 38 39 43 44  $b [1] 114.5 115.0 117.0 117.5 119.5 120.0 122.0 122.5  $c [1] \"fox\" \"A\"   \"E\"   \"F\"   \"J\"   \"K\"   \"O\"   \"P\" > > A <- tiledb_dense(uri = uri, attrs = c(\"b\",\"c\"), +                   as.data.frame = TRUE, extended=FALSE) > A[6:9,2:4]        b     c 1  114.0 brown 2  114.5   fox 3  115.0     A 4  116.5     D 5  117.0     E 6  117.5     F 7  119.0     I 8  119.5     J 9  120.0     K 10 121.5     N 11 122.0     O 12 122.5     P > > A <- tiledb_array(\"/tmp/tiledb/ex_1/\", attrs=c(\"b\",\"c\"), +                   as.data.frame = TRUE, extended=TRUE) > sapply(A[6:9, 3:4], \"class\")        rows        cols           b           c   \"integer\"   \"integer\"   \"numeric\" \"character\" > > A[6:9, 3:4]$b [1] 114.5 115.0 117.0 117.5 119.5 120.0 122.0 122.5 >"},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Preliminaries","title":null,"text":"illustrations use array created file ex_1.R one can run within R, command-line. follow along discussion follows, helps run example create array possibly adjusting array location path default value (using current directory , set option, override).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Basic Reading of Dense Arrays","title":null,"text":"file ex_1.R examples directory simple yet complete example extending quickstart_dense.R adding second third attribute. well following examples use tiledb_array() access array; older variants tiledb_dense() tiledb_sparse() remain supported deprecated may removed point future. Read 1-D first example extracts rows 1 2 column 2 array. also limits selection just one attribute (via attrs), asks return data.frame (instead simpler list) (row column, present ) indices printed (via extended=FALSE). Note examples create three two-dimensional attributes. attributes can selected via attrs argument, attrs() method array object. square-bracket indexing selects 2-d attribute object. multiple objects returned (list data.frame), subsetting returned object works via [[var]] $var. numeric index also works (needs account rows cols). Read 2-D works analogously. Note results generally returned vectors, columns data.frame object case option set.","code":"> A <- tiledb_array(uri = uri, attrs = \"b\", +                   as.data.frame=TRUE, extended=FALSE)) > A[1:2,2] [1] 101.5 104.0 > > A <- tiledb_array(uri = uri, attrs = c(\"a\",\"b\"), +                   as.data.frame = TRUE) > A[1:2,2][[\"a\"]] [1] 2 7 > A[1:2,2]$a [1] 2 7 > > A[6:9,3:4] $a [1] 28 29 33 34 38 39 43 44  $b [1] 114.5 115.0 117.0 117.5 119.5 120.0 122.0 122.5  $c [1] \"fox\" \"A\"   \"E\"   \"F\"   \"J\"   \"K\"   \"O\"   \"P\" >"},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Read 2-D with attribute selection","title":null,"text":"can restrict selection subset attributes opening array. also illustrated effect setting .data.frame=TRUE opening array. scheme can generalized variable cells, cells N>1, can expand (atomistic) value corresponding row column indices. column types correspond attribute typed array schema, subject constraint mentioned R types. (char comes factor variable still R 3.6.* default change. can also override, users can .) Consistent data.frame semantics, now requesting named column reduces vector happens R side:","code":"> A <- tiledb_dense(uri = uri, attrs = c(\"b\",\"c\"), +                   as.data.frame = TRUE, extended=FALSE) > A[6:9,2:4]        b     c 1  114.0 brown 2  114.5   fox 3  115.0     A 4  116.5     D 5  117.0     E 6  117.5     F 7  119.0     I 8  119.5     J 9  120.0     K 10 121.5     N 11 122.0     O 12 122.5     P > > A <- tiledb_array(\"/tmp/tiledb/ex_1/\", attrs=c(\"b\",\"c\"), +                   as.data.frame = TRUE, extended=TRUE) > sapply(A[6:9, 3:4], \"class\")        rows        cols           b           c   \"integer\"   \"integer\"   \"numeric\" \"character\" > > A[6:9, 3:4]$b [1] 114.5 115.0 117.0 117.5 119.5 120.0 122.0 122.5 >"},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Sparse Arrays","title":null,"text":"Simple Examples Basic reading returns coordinates attributes. following examples use array created quickstart_sparse example. can also request data.frame object, either opening changing object characteristic fly: sparse arrays, return type default ‘extended’ showing rows column can overridden. Assignment works similarly: Reads can select rows columns: Attributes can selected similarly. Similar dense array case described earlier, file ex_2.R illustrates basic operations sparse arrays. also shows date datetime types instead just integer double precision floats. row coordinate currently floating point representation underlying time type. can select attributes (excluded “” column) select rows time (time stamps get converted required floating point value). extended examples available showing indexing date(time) well character dimension.","code":"> A <- tiledb_array(uri = uri, is.sparse = TRUE) > A[] $rows [1] 1 2 2  $cols [1] 1 3 4  $a [1] 1 3 2  > > return.data.frame(A) <- TRUE > A[]   a rows cols 1 1    1    1 2 3    2    3 3 2    2    4 > A[4,2] <- 42L > A[] > A[]   rows cols  a 1    1    1  1 2    2    3  3 3    2    4  2 4    4    2 42 > > A[2,]   rows cols a 1    2    3 3 2    2    4 2 > A[,2]   rows cols  a 1    4    2 42 > > A <- tiledb_array(uri = uri, as.data.frame = TRUE) > A[1577858403:1577858408]         rows cols a   b          d                       e 1 1577858403    1 3 103 2020-01-11 2020-01-02 18:24:33.844 2 1577858404    1 4 104 2020-01-15 2020-01-05 02:28:36.214 3 1577858405    1 5 105 2020-01-19 2020-01-05 00:44:04.805 4 1577858406    1 6 106 2020-01-21 2020-01-06 12:58:51.770 5 1577858407    1 7 107 2020-01-25 2020-01-09 04:29:56.309 6 1577858408    1 8 108 2020-01-26 2020-01-07 13:55:10.240 > > attrs(A) <- c(\"b\", \"d\", \"e\") > A[as.POSIXct(\"2020-01-01\"):as.POSIXct(\"2020-01-01 00:00:03\")]         rows cols   b          d                       e 1 1577858401    1 101 2020-01-05 2020-01-01 03:03:07.548 2 1577858402    1 102 2020-01-10 2020-01-02 21:02:19.747 3 1577858403    1 103 2020-01-11 2020-01-02 18:24:33.844 >"},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Basic Reading and Writing of Sparse Arrays","title":null,"text":"Simple Examples Basic reading returns coordinates attributes. following examples use array created quickstart_sparse example. can also request data.frame object, either opening changing object characteristic fly: sparse arrays, return type default ‘extended’ showing rows column can overridden. Assignment works similarly: Reads can select rows columns: Attributes can selected similarly.","code":"> A <- tiledb_array(uri = uri, is.sparse = TRUE) > A[] $rows [1] 1 2 2  $cols [1] 1 3 4  $a [1] 1 3 2  > > return.data.frame(A) <- TRUE > A[]   a rows cols 1 1    1    1 2 3    2    3 3 2    2    4 > A[4,2] <- 42L > A[] > A[]   rows cols  a 1    1    1  1 2    2    3  3 3    2    4  2 4    4    2 42 > > A[2,]   rows cols a 1    2    3 3 2    2    4 2 > A[,2]   rows cols  a 1    4    2 42 >"},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Date(time) Attributes","title":null,"text":"Similar dense array case described earlier, file ex_2.R illustrates basic operations sparse arrays. also shows date datetime types instead just integer double precision floats. row coordinate currently floating point representation underlying time type. can select attributes (excluded “” column) select rows time (time stamps get converted required floating point value). extended examples available showing indexing date(time) well character dimension.","code":"> A <- tiledb_array(uri = uri, as.data.frame = TRUE) > A[1577858403:1577858408]         rows cols a   b          d                       e 1 1577858403    1 3 103 2020-01-11 2020-01-02 18:24:33.844 2 1577858404    1 4 104 2020-01-15 2020-01-05 02:28:36.214 3 1577858405    1 5 105 2020-01-19 2020-01-05 00:44:04.805 4 1577858406    1 6 106 2020-01-21 2020-01-06 12:58:51.770 5 1577858407    1 7 107 2020-01-25 2020-01-09 04:29:56.309 6 1577858408    1 8 108 2020-01-26 2020-01-07 13:55:10.240 > > attrs(A) <- c(\"b\", \"d\", \"e\") > A[as.POSIXct(\"2020-01-01\"):as.POSIXct(\"2020-01-01 00:00:03\")]         rows cols   b          d                       e 1 1577858401    1 101 2020-01-05 2020-01-01 03:03:07.548 2 1577858402    1 102 2020-01-10 2020-01-02 21:02:19.747 3 1577858403    1 103 2020-01-11 2020-01-02 18:24:33.844 >"},{"path":"https://tiledb-inc.github.io/TileDB-R/introduction.html","id":null,"dir":"","previous_headings":"","what":"Additional Information","title":null,"text":"TileDB R package documented via R help functions (e.g. help(\"tiledb_array\") shows information tiledb_array() function) well via website regrouping documentation. Extended API documentation available, examples/ directory. TileDB extensive installation, overall documentation well support forum.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_consolidate.html","id":null,"dir":"Reference","previous_headings":"","what":"Consolidate fragments of a TileDB Array — array_consolidate","title":"Consolidate fragments of a TileDB Array — array_consolidate","text":"function invokes consolidation operation. Parameters affecting operation can set via optional configuration object. Start end timestamps can also set directly.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_consolidate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Consolidate fragments of a TileDB Array — array_consolidate","text":"","code":"array_consolidate(   uri,   cfg = NULL,   start_time,   end_time,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_consolidate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Consolidate fragments of a TileDB Array — array_consolidate","text":"uri character value URI TileDB Array cfg optional TileDB Configuration object start_time optional timestamp value, missing config default used end_time optional timestamp value, missing config default used ctx option TileDB Context object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_consolidate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Consolidate fragments of a TileDB Array — array_consolidate","text":"NULL returned invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_vacuum.html","id":null,"dir":"Reference","previous_headings":"","what":"After consolidation, remove consolidated fragments of a TileDB Array — array_vacuum","title":"After consolidation, remove consolidated fragments of a TileDB Array — array_vacuum","text":"function can remove fragments following consolidation step. Note vacuuming run one intends use TileDB time-traveling feature opening arrays particular timestamps.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_vacuum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"After consolidation, remove consolidated fragments of a TileDB Array — array_vacuum","text":"","code":"array_vacuum(uri, cfg = NULL, start_time, end_time, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_vacuum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"After consolidation, remove consolidated fragments of a TileDB Array — array_vacuum","text":"uri character value URI TileDB Array cfg optional TileDB Configuration object start_time optional timestamp value, missing config default used end_time optional timestamp value, missing config default used ctx option TileDB Context object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_vacuum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"After consolidation, remove consolidated fragments of a TileDB Array — array_vacuum","text":"NULL returned invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/array_vacuum.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"After consolidation, remove consolidated fragments of a TileDB Array — array_vacuum","text":"Parameters affecting operation can set via optional configuration object. Start end timestamps can also set directly.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.data.frame.tiledb_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a tiledb_config object to a R data.frame — as.data.frame.tiledb_config","title":"Convert a tiledb_config object to a R data.frame — as.data.frame.tiledb_config","text":"Convert tiledb_config object R data.frame","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.data.frame.tiledb_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a tiledb_config object to a R data.frame — as.data.frame.tiledb_config","text":"","code":"# S3 method for class 'tiledb_config' as.data.frame(x, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.data.frame.tiledb_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a tiledb_config object to a R data.frame — as.data.frame.tiledb_config","text":"x tiledb_config object ... Extra parameter method signature, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.data.frame.tiledb_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a tiledb_config object to a R data.frame — as.data.frame.tiledb_config","text":"data.frame wth parameter, value columns","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.data.frame.tiledb_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a tiledb_config object to a R data.frame — as.data.frame.tiledb_config","text":"","code":"cfg <- tiledb_config() as.data.frame(cfg) #>                                                      parameter #> 1                                        config.env_var_prefix #> 2                                        config.logging_format #> 3                                         config.logging_level #> 4                                        filestore.buffer_size #> 5                                   rest.capnp_traversal_limit #> 6                                        rest.curl.buffer_size #> 7                                       rest.curl.retry_errors #> 8                                            rest.curl.verbose #> 9                                         rest.http_compressor #> 10                        rest.load_enumerations_on_array_open #> 11                            rest.load_metadata_on_array_open #> 12                    rest.load_non_empty_domain_on_array_open #> 13                                        rest.payer_namespace #> 14                                            rest.retry_count #> 15                                     rest.retry_delay_factor #> 16                                       rest.retry_http_codes #> 17                                 rest.retry_initial_delay_ms #> 18                                         rest.server_address #> 19                            rest.server_serialization_format #> 20                              rest.use_refactored_array_open #> 21             rest.use_refactored_array_open_and_query_submit #> 22                          sm.allow_separate_attribute_writes #> 23                               sm.allow_updates_experimental #> 24                                         sm.check_coord_dups #> 25                                          sm.check_coord_oob #> 26                                       sm.check_global_order #> 27                                sm.compute_concurrency_level #> 28                              sm.consolidation.amplification #> 29                                sm.consolidation.buffer_size #> 30                          sm.consolidation.max_fragment_size #> 31                                       sm.consolidation.mode #> 32                        sm.consolidation.purge_deleted_cells #> 33                             sm.consolidation.step_max_frags #> 34                             sm.consolidation.step_min_frags #> 35                            sm.consolidation.step_size_ratio #> 36                                      sm.consolidation.steps #> 37                              sm.consolidation.timestamp_end #> 38                            sm.consolidation.timestamp_start #> 39                                             sm.dedup_coords #> 40                                   sm.enable_signal_handlers #> 41                                           sm.encryption_key #> 42                                          sm.encryption_type #> 43                                    sm.enumerations_max_size #> 44                              sm.enumerations_max_total_size #> 45                               sm.fragment_info.preload_mbrs #> 46                                      sm.group.timestamp_end #> 47                                    sm.group.timestamp_start #> 48                                     sm.io_concurrency_level #> 49                                    sm.max_tile_overlap_size #> 50                         sm.mem.consolidation.buffers_weight #> 51                          sm.mem.consolidation.reader_weight #> 52                          sm.mem.consolidation.writer_weight #> 53                                          sm.mem.malloc_trim #> 54          sm.mem.reader.sparse_global_order.ratio_array_data #> 55              sm.mem.reader.sparse_global_order.ratio_coords #> 56         sm.mem.reader.sparse_global_order.ratio_tile_ranges #> 57   sm.mem.reader.sparse_unordered_with_dups.ratio_array_data #> 58       sm.mem.reader.sparse_unordered_with_dups.ratio_coords #> 59  sm.mem.reader.sparse_unordered_with_dups.ratio_tile_ranges #> 60                              sm.mem.tile_upper_memory_limit #> 61                                         sm.mem.total_budget #> 62                                            sm.memory_budget #> 63                                        sm.memory_budget_var #> 64                    sm.merge_overlapping_ranges_experimental #> 65                             sm.partial_tile_offsets_loading #> 66                               sm.query.dense.qc_coords_mode #> 67                                       sm.query.dense.reader #> 68                         sm.query.sparse_global_order.reader #> 69                  sm.query.sparse_unordered_with_dups.reader #> 70                                           sm.read_range_oob #> 71                                 sm.skip_checksum_validation #> 72                               sm.skip_est_size_partitioning #> 73                     sm.skip_unary_partitioning_budget_check #> 74                                              sm.vacuum.mode #> 75                                      sm.var_offsets.bitsize #> 76                                sm.var_offsets.extra_element #> 77                                         sm.var_offsets.mode #> 78                                                 ssl.ca_file #> 79                                                 ssl.ca_path #> 80                                                  ssl.verify #> 81                                     vfs.azure.blob_endpoint #> 82                             vfs.azure.block_list_block_size #> 83                                  vfs.azure.max_parallel_ops #> 84                                       vfs.azure.max_retries #> 85                                vfs.azure.max_retry_delay_ms #> 86                                    vfs.azure.retry_delay_ms #> 87                               vfs.azure.storage_account_key #> 88                              vfs.azure.storage_account_name #> 89                                 vfs.azure.storage_sas_token #> 90                             vfs.azure.use_block_list_upload #> 91                        vfs.file.posix_directory_permissions #> 92                             vfs.file.posix_file_permissions #> 93                                            vfs.gcs.endpoint #> 94                         vfs.gcs.impersonate_service_account #> 95                              vfs.gcs.max_direct_upload_size #> 96                                    vfs.gcs.max_parallel_ops #> 97                                     vfs.gcs.multi_part_size #> 98                                          vfs.gcs.project_id #> 99                                  vfs.gcs.request_timeout_ms #> 100                                vfs.gcs.service_account_key #> 101                              vfs.gcs.use_multi_part_upload #> 102                    vfs.gcs.workload_identity_configuration #> 103                            vfs.hdfs.kerb_ticket_cache_path #> 104                                     vfs.hdfs.name_node_uri #> 105                                          vfs.hdfs.username #> 106                                         vfs.max_batch_size #> 107                                          vfs.min_batch_gap #> 108                                         vfs.min_batch_size #> 109                                      vfs.min_parallel_size #> 110                                  vfs.read_ahead_cache_size #> 111                                        vfs.read_ahead_size #> 112                                      vfs.read_logging_mode #> 113                                   vfs.s3.aws_access_key_id #> 114                                     vfs.s3.aws_external_id #> 115                                  vfs.s3.aws_load_frequency #> 116                                        vfs.s3.aws_role_arn #> 117                               vfs.s3.aws_secret_access_key #> 118                                    vfs.s3.aws_session_name #> 119                                   vfs.s3.aws_session_token #> 120                                   vfs.s3.bucket_canned_acl #> 121                                             vfs.s3.ca_file #> 122                                             vfs.s3.ca_path #> 123                                       vfs.s3.config_source #> 124                                   vfs.s3.connect_max_tries #> 125                                vfs.s3.connect_scale_factor #> 126                                  vfs.s3.connect_timeout_ms #> 127                                   vfs.s3.endpoint_override #> 128                             vfs.s3.install_sigpipe_handler #> 129                                       vfs.s3.logging_level #> 130                                    vfs.s3.max_parallel_ops #> 131                                 vfs.s3.multipart_part_size #> 132                                     vfs.s3.no_sign_request #> 133                                   vfs.s3.object_canned_acl #> 134                                          vfs.s3.proxy_host #> 135                                      vfs.s3.proxy_password #> 136                                          vfs.s3.proxy_port #> 137                                        vfs.s3.proxy_scheme #> 138                                      vfs.s3.proxy_username #> 139                                              vfs.s3.region #> 140                                  vfs.s3.request_timeout_ms #> 141                                      vfs.s3.requester_pays #> 142                                              vfs.s3.scheme #> 143                                           vfs.s3.skip_init #> 144                                                 vfs.s3.sse #> 145                                      vfs.s3.sse_kms_key_id #> 146                                       vfs.s3.storage_class #> 147                                vfs.s3.use_multipart_upload #> 148                              vfs.s3.use_virtual_addressing #> 149                                          vfs.s3.verify_ssl #>                      value #> 1                  TILEDB_ #> 2                  DEFAULT #> 3                        0 #> 4                104857600 #> 5               2147483648 #> 6                   524288 #> 7                     true #> 8                    false #> 9                      any #> 10                    true #> 11                    true #> 12                    true #> 13                         #> 14                      25 #> 15                    1.25 #> 16                     503 #> 17                     500 #> 18  https://api.tiledb.com #> 19                   CAPNP #> 20                    true #> 21                    true #> 22                   false #> 23                   false #> 24                    true #> 25                    true #> 26                    true #> 27                      16 #> 28                     1.0 #> 29                50000000 #> 30    18446744073709551615 #> 31               fragments #> 32                   false #> 33              4294967295 #> 34              4294967295 #> 35                     0.0 #> 36              4294967295 #> 37    18446744073709551615 #> 38                       0 #> 39                   false #> 40                    true #> 41                         #> 42           NO_ENCRYPTION #> 43                10485760 #> 44                52428800 #> 45                   false #> 46    18446744073709551615 #> 47                       0 #> 48                      16 #> 49               314572800 #> 50                       1 #> 51                       3 #> 52                       2 #> 53                    true #> 54                     0.1 #> 55                     0.5 #> 56                     0.1 #> 57                     0.1 #> 58                     0.5 #> 59                     0.1 #> 60              1073741824 #> 61             10737418240 #> 62              5368709120 #> 63             10737418240 #> 64                    true #> 65                   false #> 66                   false #> 67              refactored #> 68              refactored #> 69              refactored #> 70                    warn #> 71                   false #> 72                   false #> 73                   false #> 74               fragments #> 75                      64 #> 76                   false #> 77                   bytes #> 78                         #> 79                         #> 80                    true #> 81                         #> 82                 5242880 #> 83                      16 #> 84                       5 #> 85                   60000 #> 86                     800 #> 87                         #> 88                         #> 89                         #> 90                    true #> 91                     755 #> 92                     644 #> 93                         #> 94                         #> 95             10737418240 #> 96                      16 #> 97                 5242880 #> 98                         #> 99                    3000 #> 100                        #> 101                   true #> 102                        #> 103                        #> 104                        #> 105                        #> 106              104857600 #> 107                 512000 #> 108               20971520 #> 109               10485760 #> 110               10485760 #> 111                 102400 #> 112                        #> 113                        #> 114                        #> 115                        #> 116                        #> 117                        #> 118                        #> 119                        #> 120                NOT_SET #> 121                        #> 122                        #> 123                   auto #> 124                      5 #> 125                     25 #> 126                  10800 #> 127                        #> 128                   true #> 129                    Off #> 130                     16 #> 131                5242880 #> 132                  false #> 133                NOT_SET #> 134                        #> 135                        #> 136                      0 #> 137                   http #> 138                        #> 139              us-east-1 #> 140                   3000 #> 141                  false #> 142                  https #> 143                  false #> 144                        #> 145                        #> 146                NOT_SET #> 147                   true #> 148                   true #> 149                   true"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.vector.tiledb_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a tiledb_config object to a R vector — as.vector.tiledb_config","title":"Convert a tiledb_config object to a R vector — as.vector.tiledb_config","text":"Convert tiledb_config object R vector","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.vector.tiledb_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a tiledb_config object to a R vector — as.vector.tiledb_config","text":"","code":"# S3 method for class 'tiledb_config' as.vector(x, mode = \"any\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.vector.tiledb_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a tiledb_config object to a R vector — as.vector.tiledb_config","text":"x tiledb_config object mode Character value \"\", currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.vector.tiledb_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a tiledb_config object to a R vector — as.vector.tiledb_config","text":"character vector config parameter names, values","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as.vector.tiledb_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a tiledb_config object to a R vector — as.vector.tiledb_config","text":"","code":"cfg <- tiledb_config() as.vector(cfg) #>                                      config.env_var_prefix  #>                                                  \"TILEDB_\"  #>                                      config.logging_format  #>                                                  \"DEFAULT\"  #>                                       config.logging_level  #>                                                        \"0\"  #>                                      filestore.buffer_size  #>                                                \"104857600\"  #>                                 rest.capnp_traversal_limit  #>                                               \"2147483648\"  #>                                      rest.curl.buffer_size  #>                                                   \"524288\"  #>                                     rest.curl.retry_errors  #>                                                     \"true\"  #>                                          rest.curl.verbose  #>                                                    \"false\"  #>                                       rest.http_compressor  #>                                                      \"any\"  #>                       rest.load_enumerations_on_array_open  #>                                                     \"true\"  #>                           rest.load_metadata_on_array_open  #>                                                     \"true\"  #>                   rest.load_non_empty_domain_on_array_open  #>                                                     \"true\"  #>                                       rest.payer_namespace  #>                                                         \"\"  #>                                           rest.retry_count  #>                                                       \"25\"  #>                                    rest.retry_delay_factor  #>                                                     \"1.25\"  #>                                      rest.retry_http_codes  #>                                                      \"503\"  #>                                rest.retry_initial_delay_ms  #>                                                      \"500\"  #>                                        rest.server_address  #>                                   \"https://api.tiledb.com\"  #>                           rest.server_serialization_format  #>                                                    \"CAPNP\"  #>                             rest.use_refactored_array_open  #>                                                     \"true\"  #>            rest.use_refactored_array_open_and_query_submit  #>                                                     \"true\"  #>                         sm.allow_separate_attribute_writes  #>                                                    \"false\"  #>                              sm.allow_updates_experimental  #>                                                    \"false\"  #>                                        sm.check_coord_dups  #>                                                     \"true\"  #>                                         sm.check_coord_oob  #>                                                     \"true\"  #>                                      sm.check_global_order  #>                                                     \"true\"  #>                               sm.compute_concurrency_level  #>                                                       \"16\"  #>                             sm.consolidation.amplification  #>                                                      \"1.0\"  #>                               sm.consolidation.buffer_size  #>                                                 \"50000000\"  #>                         sm.consolidation.max_fragment_size  #>                                     \"18446744073709551615\"  #>                                      sm.consolidation.mode  #>                                                \"fragments\"  #>                       sm.consolidation.purge_deleted_cells  #>                                                    \"false\"  #>                            sm.consolidation.step_max_frags  #>                                               \"4294967295\"  #>                            sm.consolidation.step_min_frags  #>                                               \"4294967295\"  #>                           sm.consolidation.step_size_ratio  #>                                                      \"0.0\"  #>                                     sm.consolidation.steps  #>                                               \"4294967295\"  #>                             sm.consolidation.timestamp_end  #>                                     \"18446744073709551615\"  #>                           sm.consolidation.timestamp_start  #>                                                        \"0\"  #>                                            sm.dedup_coords  #>                                                    \"false\"  #>                                  sm.enable_signal_handlers  #>                                                     \"true\"  #>                                          sm.encryption_key  #>                                                         \"\"  #>                                         sm.encryption_type  #>                                            \"NO_ENCRYPTION\"  #>                                   sm.enumerations_max_size  #>                                                 \"10485760\"  #>                             sm.enumerations_max_total_size  #>                                                 \"52428800\"  #>                              sm.fragment_info.preload_mbrs  #>                                                    \"false\"  #>                                     sm.group.timestamp_end  #>                                     \"18446744073709551615\"  #>                                   sm.group.timestamp_start  #>                                                        \"0\"  #>                                    sm.io_concurrency_level  #>                                                       \"16\"  #>                                   sm.max_tile_overlap_size  #>                                                \"314572800\"  #>                        sm.mem.consolidation.buffers_weight  #>                                                        \"1\"  #>                         sm.mem.consolidation.reader_weight  #>                                                        \"3\"  #>                         sm.mem.consolidation.writer_weight  #>                                                        \"2\"  #>                                         sm.mem.malloc_trim  #>                                                     \"true\"  #>         sm.mem.reader.sparse_global_order.ratio_array_data  #>                                                      \"0.1\"  #>             sm.mem.reader.sparse_global_order.ratio_coords  #>                                                      \"0.5\"  #>        sm.mem.reader.sparse_global_order.ratio_tile_ranges  #>                                                      \"0.1\"  #>  sm.mem.reader.sparse_unordered_with_dups.ratio_array_data  #>                                                      \"0.1\"  #>      sm.mem.reader.sparse_unordered_with_dups.ratio_coords  #>                                                      \"0.5\"  #> sm.mem.reader.sparse_unordered_with_dups.ratio_tile_ranges  #>                                                      \"0.1\"  #>                             sm.mem.tile_upper_memory_limit  #>                                               \"1073741824\"  #>                                        sm.mem.total_budget  #>                                              \"10737418240\"  #>                                           sm.memory_budget  #>                                               \"5368709120\"  #>                                       sm.memory_budget_var  #>                                              \"10737418240\"  #>                   sm.merge_overlapping_ranges_experimental  #>                                                     \"true\"  #>                            sm.partial_tile_offsets_loading  #>                                                    \"false\"  #>                              sm.query.dense.qc_coords_mode  #>                                                    \"false\"  #>                                      sm.query.dense.reader  #>                                               \"refactored\"  #>                        sm.query.sparse_global_order.reader  #>                                               \"refactored\"  #>                 sm.query.sparse_unordered_with_dups.reader  #>                                               \"refactored\"  #>                                          sm.read_range_oob  #>                                                     \"warn\"  #>                                sm.skip_checksum_validation  #>                                                    \"false\"  #>                              sm.skip_est_size_partitioning  #>                                                    \"false\"  #>                    sm.skip_unary_partitioning_budget_check  #>                                                    \"false\"  #>                                             sm.vacuum.mode  #>                                                \"fragments\"  #>                                     sm.var_offsets.bitsize  #>                                                       \"64\"  #>                               sm.var_offsets.extra_element  #>                                                    \"false\"  #>                                        sm.var_offsets.mode  #>                                                    \"bytes\"  #>                                                ssl.ca_file  #>                                                         \"\"  #>                                                ssl.ca_path  #>                                                         \"\"  #>                                                 ssl.verify  #>                                                     \"true\"  #>                                    vfs.azure.blob_endpoint  #>                                                         \"\"  #>                            vfs.azure.block_list_block_size  #>                                                  \"5242880\"  #>                                 vfs.azure.max_parallel_ops  #>                                                       \"16\"  #>                                      vfs.azure.max_retries  #>                                                        \"5\"  #>                               vfs.azure.max_retry_delay_ms  #>                                                    \"60000\"  #>                                   vfs.azure.retry_delay_ms  #>                                                      \"800\"  #>                              vfs.azure.storage_account_key  #>                                                         \"\"  #>                             vfs.azure.storage_account_name  #>                                                         \"\"  #>                                vfs.azure.storage_sas_token  #>                                                         \"\"  #>                            vfs.azure.use_block_list_upload  #>                                                     \"true\"  #>                       vfs.file.posix_directory_permissions  #>                                                      \"755\"  #>                            vfs.file.posix_file_permissions  #>                                                      \"644\"  #>                                           vfs.gcs.endpoint  #>                                                         \"\"  #>                        vfs.gcs.impersonate_service_account  #>                                                         \"\"  #>                             vfs.gcs.max_direct_upload_size  #>                                              \"10737418240\"  #>                                   vfs.gcs.max_parallel_ops  #>                                                       \"16\"  #>                                    vfs.gcs.multi_part_size  #>                                                  \"5242880\"  #>                                         vfs.gcs.project_id  #>                                                         \"\"  #>                                 vfs.gcs.request_timeout_ms  #>                                                     \"3000\"  #>                                vfs.gcs.service_account_key  #>                                                         \"\"  #>                              vfs.gcs.use_multi_part_upload  #>                                                     \"true\"  #>                    vfs.gcs.workload_identity_configuration  #>                                                         \"\"  #>                            vfs.hdfs.kerb_ticket_cache_path  #>                                                         \"\"  #>                                     vfs.hdfs.name_node_uri  #>                                                         \"\"  #>                                          vfs.hdfs.username  #>                                                         \"\"  #>                                         vfs.max_batch_size  #>                                                \"104857600\"  #>                                          vfs.min_batch_gap  #>                                                   \"512000\"  #>                                         vfs.min_batch_size  #>                                                 \"20971520\"  #>                                      vfs.min_parallel_size  #>                                                 \"10485760\"  #>                                  vfs.read_ahead_cache_size  #>                                                 \"10485760\"  #>                                        vfs.read_ahead_size  #>                                                   \"102400\"  #>                                      vfs.read_logging_mode  #>                                                         \"\"  #>                                   vfs.s3.aws_access_key_id  #>                                                         \"\"  #>                                     vfs.s3.aws_external_id  #>                                                         \"\"  #>                                  vfs.s3.aws_load_frequency  #>                                                         \"\"  #>                                        vfs.s3.aws_role_arn  #>                                                         \"\"  #>                               vfs.s3.aws_secret_access_key  #>                                                         \"\"  #>                                    vfs.s3.aws_session_name  #>                                                         \"\"  #>                                   vfs.s3.aws_session_token  #>                                                         \"\"  #>                                   vfs.s3.bucket_canned_acl  #>                                                  \"NOT_SET\"  #>                                             vfs.s3.ca_file  #>                                                         \"\"  #>                                             vfs.s3.ca_path  #>                                                         \"\"  #>                                       vfs.s3.config_source  #>                                                     \"auto\"  #>                                   vfs.s3.connect_max_tries  #>                                                        \"5\"  #>                                vfs.s3.connect_scale_factor  #>                                                       \"25\"  #>                                  vfs.s3.connect_timeout_ms  #>                                                    \"10800\"  #>                                   vfs.s3.endpoint_override  #>                                                         \"\"  #>                             vfs.s3.install_sigpipe_handler  #>                                                     \"true\"  #>                                       vfs.s3.logging_level  #>                                                      \"Off\"  #>                                    vfs.s3.max_parallel_ops  #>                                                       \"16\"  #>                                 vfs.s3.multipart_part_size  #>                                                  \"5242880\"  #>                                     vfs.s3.no_sign_request  #>                                                    \"false\"  #>                                   vfs.s3.object_canned_acl  #>                                                  \"NOT_SET\"  #>                                          vfs.s3.proxy_host  #>                                                         \"\"  #>                                      vfs.s3.proxy_password  #>                                                         \"\"  #>                                          vfs.s3.proxy_port  #>                                                        \"0\"  #>                                        vfs.s3.proxy_scheme  #>                                                     \"http\"  #>                                      vfs.s3.proxy_username  #>                                                         \"\"  #>                                              vfs.s3.region  #>                                                \"us-east-1\"  #>                                  vfs.s3.request_timeout_ms  #>                                                     \"3000\"  #>                                      vfs.s3.requester_pays  #>                                                    \"false\"  #>                                              vfs.s3.scheme  #>                                                    \"https\"  #>                                           vfs.s3.skip_init  #>                                                    \"false\"  #>                                                 vfs.s3.sse  #>                                                         \"\"  #>                                      vfs.s3.sse_kms_key_id  #>                                                         \"\"  #>                                       vfs.s3.storage_class  #>                                                  \"NOT_SET\"  #>                                vfs.s3.use_multipart_upload  #>                                                     \"true\"  #>                              vfs.s3.use_virtual_addressing  #>                                                     \"true\"  #>                                          vfs.s3.verify_ssl  #>                                                     \"true\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a data.frame from query results — as_data_frame","title":"Construct a data.frame from query results — as_data_frame","text":"Converts tiledb object data.frame object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a data.frame from query results — as_data_frame","text":"","code":"as_data_frame(dom, data, extended = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a data.frame from query results — as_data_frame","text":"dom tiledb_domain object data tiledb object converted extended optional logical variable selected wider display coordinates, defaults false","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/as_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a data.frame from query results — as_data_frame","text":"data.frame object constructed data","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects attributes for the given TileDB array — attrs<-,tiledb_array-method","title":"Selects attributes for the given TileDB array — attrs<-,tiledb_array-method","text":"Selects attributes given TileDB array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects attributes for the given TileDB array — attrs<-,tiledb_array-method","text":"","code":"# S4 method for class 'tiledb_array' attrs(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects attributes for the given TileDB array — attrs<-,tiledb_array-method","text":"x tiledb_array object value character vector attributes; value NA_character_ signals attributes returned; default empty character vector implying columns returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects attributes for the given TileDB array — attrs<-,tiledb_array-method","text":"modified tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_dense-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects attributes for the given TileDB array — attrs<-","title":"Selects attributes for the given TileDB array — attrs<-","text":"Selects attributes given TileDB array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_dense-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects attributes for the given TileDB array — attrs<-","text":"","code":"attrs(x) <- value  # S4 method for tiledb_dense attrs(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_dense-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects attributes for the given TileDB array — attrs<-","text":"x tiledb_dense array object value character vector attributes","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_dense-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects attributes for the given TileDB array — attrs<-","text":"modified tiledb_dense array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_sparse-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects attributes for the given TileDB array — attrs<-,tiledb_sparse-method","title":"Selects attributes for the given TileDB array — attrs<-,tiledb_sparse-method","text":"Selects attributes given TileDB array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_sparse-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects attributes for the given TileDB array — attrs<-,tiledb_sparse-method","text":"","code":"# S4 method for tiledb_sparse attrs(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_sparse-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects attributes for the given TileDB array — attrs<-,tiledb_sparse-method","text":"x tiledb_sparse array object value character vector attributes","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-set-tiledb_sparse-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects attributes for the given TileDB array — attrs<-,tiledb_sparse-method","text":"modified tiledb_sparse array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve attributes from tiledb_array object — attrs,tiledb_array,ANY-method","title":"Retrieve attributes from tiledb_array object — attrs,tiledb_array,ANY-method","text":"default, attributes selected. subset attribute names assigned internal slot attrs, attributes queried.  methods accesses slot.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve attributes from tiledb_array object — attrs,tiledb_array,ANY-method","text":"","code":"# S4 method for class 'tiledb_array,ANY' attrs(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve attributes from tiledb_array object — attrs,tiledb_array,ANY-method","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve attributes from tiledb_array object — attrs,tiledb_array,ANY-method","text":"empty character vector attributes selected else vector attributes; NA means attributes returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of all tiledb_attr objects associated with the tiledb_array_schema — attrs,tiledb_array_schema,ANY-method","title":"Returns a list of all tiledb_attr objects associated with the tiledb_array_schema — attrs,tiledb_array_schema,ANY-method","text":"Returns list tiledb_attr objects associated tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of all tiledb_attr objects associated with the tiledb_array_schema — attrs,tiledb_array_schema,ANY-method","text":"","code":"# S4 method for class 'tiledb_array_schema,ANY' attrs(object, idx, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of all tiledb_attr objects associated with the tiledb_array_schema — attrs,tiledb_array_schema,ANY-method","text":"object tiledb_array_schema idx index argument, currently unused. ... Extra parameter method signature, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of all tiledb_attr objects associated with the tiledb_array_schema — attrs,tiledb_array_schema,ANY-method","text":"list tiledb_attr objects","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-ANY-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a list of all tiledb_attr objects associated with the tiledb_array_schema — attrs,tiledb_array_schema,ANY-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 10L), type = \"INT32\"))) sch <- tiledb_array_schema(dom, attrs = c(tiledb_attr(\"a1\", type = \"INT32\"),                                                tiledb_attr(\"a2\", type = \"FLOAT64\"))) attrs(sch) #> $a1 #> tiledb_attr(name=\"a1\", type=\"INT32\", ncells=1, nullable=FALSE)  #>  #> $a2 #> tiledb_attr(name=\"a2\", type=\"FLOAT64\", ncells=1, nullable=FALSE)  #>   lapply(attrs(sch), datatype) #> $a1 #> [1] \"INT32\" #>  #> $a2 #> [1] \"FLOAT64\" #>"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given name. — attrs,tiledb_array_schema,character-method","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given name. — attrs,tiledb_array_schema,character-method","text":"Returns tiledb_attr object associated tiledb_array_schema given name.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given name. — attrs,tiledb_array_schema,character-method","text":"","code":"# S4 method for class 'tiledb_array_schema,character' attrs(object, idx, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given name. — attrs,tiledb_array_schema,character-method","text":"object tiledb_array_schema idx attribute name string ... Extra parameter method signature, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given name. — attrs,tiledb_array_schema,character-method","text":"tiledb_attr object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-character-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given name. — attrs,tiledb_array_schema,character-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 10L), type = \"INT32\"))) sch <- tiledb_array_schema(dom, attrs = c(tiledb_attr(\"a1\", type = \"INT32\"),                                                tiledb_attr(\"a2\", type = \"FLOAT64\"))) attrs(sch, \"a2\") #> tiledb_attr(name=\"a2\", type=\"FLOAT64\", ncells=1, nullable=FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-numeric-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given index — attrs,tiledb_array_schema,numeric-method","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given index — attrs,tiledb_array_schema,numeric-method","text":"attribute index defined order attributes defined schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-numeric-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given index — attrs,tiledb_array_schema,numeric-method","text":"","code":"# S4 method for class 'tiledb_array_schema,numeric' attrs(object, idx, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-numeric-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given index — attrs,tiledb_array_schema,numeric-method","text":"object tiledb_array_schema idx attribute index ... Extra parameter method signature, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-numeric-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given index — attrs,tiledb_array_schema,numeric-method","text":"tiledb_attr object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_array_schema-numeric-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a tiledb_attr object associated with the tiledb_array_schema with a given index — attrs,tiledb_array_schema,numeric-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 10L), type = \"INT32\"))) sch <- tiledb_array_schema(dom, attrs = c(tiledb_attr(\"a1\", type = \"INT32\"),                                           tiledb_attr(\"a2\", type = \"FLOAT64\"))) attrs(sch, 2) #> tiledb_attr(name=\"a2\", type=\"FLOAT64\", ncells=1, nullable=FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_dense-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve attributes from tiledb_dense object — attrs,tiledb_dense,ANY-method","title":"Retrieve attributes from tiledb_dense object — attrs,tiledb_dense,ANY-method","text":"default, attributes selected. subset attribute names assigned internal slot attrs, attributes queried.  methods accesses slot.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_dense-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve attributes from tiledb_dense object — attrs,tiledb_dense,ANY-method","text":"","code":"# S4 method for tiledb_dense,ANY attrs(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_dense-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve attributes from tiledb_dense object — attrs,tiledb_dense,ANY-method","text":"object tiledb_dense array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_dense-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve attributes from tiledb_dense object — attrs,tiledb_dense,ANY-method","text":"empty character vector attributes selected else vector attributes.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_sparse-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve attributes from tiledb_sparse object — attrs,tiledb_sparse,ANY-method","title":"Retrieve attributes from tiledb_sparse object — attrs,tiledb_sparse,ANY-method","text":"default, attributes selected. subset attribute names assigned internal slot attrs, attributes queried.  methods accesses slot.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_sparse-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve attributes from tiledb_sparse object — attrs,tiledb_sparse,ANY-method","text":"","code":"# S4 method for tiledb_sparse,ANY attrs(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_sparse-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve attributes from tiledb_sparse object — attrs,tiledb_sparse,ANY-method","text":"object tiledb_sparse array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/attrs-tiledb_sparse-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve attributes from tiledb_sparse object — attrs,tiledb_sparse,ANY-method","text":"empty character vector attributes selected else vector attributes.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/cell_order-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the cell layout string associated with the tiledb_array_schema — cell_order,tiledb_array_schema-method","title":"Returns the cell layout string associated with the tiledb_array_schema — cell_order,tiledb_array_schema-method","text":"Returns cell layout string associated tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/cell_order-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the cell layout string associated with the tiledb_array_schema — cell_order,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' cell_order(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/cell_order-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the cell layout string associated with the tiledb_array_schema — cell_order,tiledb_array_schema-method","text":"object tiledb object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/completedBatched.html","id":null,"dir":"Reference","previous_headings":"","what":"Check ‘batched’ query for completion — completedBatched","title":"Check ‘batched’ query for completion — completedBatched","text":"Batched queries return initial result set even incomplete. normal retrieval process loop place complete (potentially large) result set, function return result (may part larger result set) allowing user assemble part.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/completedBatched.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check ‘batched’ query for completion — completedBatched","text":"","code":"completedBatched(obj)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/completedBatched.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check ‘batched’ query for completion — completedBatched","text":"obj list object returned createBatched","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/completedBatched.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check ‘batched’ query for completion — completedBatched","text":"logical value indicated query completed","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/config-tiledb_ctx-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the tiledb_config object from the tiledb_ctx — config,tiledb_ctx-method","title":"Retrieve the tiledb_config object from the tiledb_ctx — config,tiledb_ctx-method","text":"Retrieve tiledb_config object tiledb_ctx","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/config-tiledb_ctx-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the tiledb_config object from the tiledb_ctx — config,tiledb_ctx-method","text":"","code":"# S4 method for class 'tiledb_ctx' config(object = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/config-tiledb_ctx-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the tiledb_config object from the tiledb_ctx — config,tiledb_ctx-method","text":"object tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/config-tiledb_ctx-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the tiledb_config object from the tiledb_ctx — config,tiledb_ctx-method","text":"tiledb_config object associated tiledb_ctx instance","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/config-tiledb_ctx-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the tiledb_config object from the tiledb_ctx — config,tiledb_ctx-method","text":"","code":"ctx <- tiledb_ctx(c(\"sm.tile_cache_size\" = \"10\")) cfg <- config(ctx) cfg[\"sm.tile_cache_size\"] #> sm.tile_cache_size  #>               \"10\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/createBatched.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ‘batched’ query object — createBatched","title":"Create a ‘batched’ query object — createBatched","text":"Batched queries return initial result set even incomplete. normal retrieval process loop place complete (potentially large) result set, function return result (may part larger result set) allowing user assemble part.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/createBatched.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ‘batched’ query object — createBatched","text":"","code":"createBatched(x)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/createBatched.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ‘batched’ query object — createBatched","text":"x tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/createBatched.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ‘batched’ query object — createBatched","text":"batchedquery object, list containing external pointer TileDB Query object along support variables used fetchBatched","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/createBatched.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a ‘batched’ query object — createBatched","text":"tiledb_array object can parameterised usual.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_attr-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the tiledb_attr datatype — datatype,tiledb_attr-method","title":"Return the tiledb_attr datatype — datatype,tiledb_attr-method","text":"Return tiledb_attr datatype","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_attr-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the tiledb_attr datatype — datatype,tiledb_attr-method","text":"","code":"# S4 method for class 'tiledb_attr' datatype(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_attr-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the tiledb_attr datatype — datatype,tiledb_attr-method","text":"object tiledb_attr object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_attr-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the tiledb_attr datatype — datatype,tiledb_attr-method","text":"tiledb datatype string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_attr-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the tiledb_attr datatype — datatype,tiledb_attr-method","text":"","code":"a1 <- tiledb_attr(\"a1\", type = \"INT32\") datatype(a1) #> [1] \"INT32\"  a2 <- tiledb_attr(\"a1\", type = \"FLOAT64\") datatype(a2) #> [1] \"FLOAT64\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_dim-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the tiledb_dim datatype — datatype,tiledb_dim-method","title":"Return the tiledb_dim datatype — datatype,tiledb_dim-method","text":"Return tiledb_dim datatype","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_dim-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the tiledb_dim datatype — datatype,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' datatype(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_dim-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the tiledb_dim datatype — datatype,tiledb_dim-method","text":"object tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_dim-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the tiledb_dim datatype — datatype,tiledb_dim-method","text":"tiledb datatype string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_dim-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the tiledb_dim datatype — datatype,tiledb_dim-method","text":"","code":"d1 <- tiledb_dim(\"d1\", domain = c(5L, 10L), tile = 2L, type = \"INT32\") datatype(d1) #> [1] \"INT32\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_domain-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the tiledb_domain TileDB type string — datatype,tiledb_domain-method","title":"Returns the tiledb_domain TileDB type string — datatype,tiledb_domain-method","text":"Returns tiledb_domain TileDB type string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_domain-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the tiledb_domain TileDB type string — datatype,tiledb_domain-method","text":"","code":"# S4 method for class 'tiledb_domain' datatype(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_domain-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the tiledb_domain TileDB type string — datatype,tiledb_domain-method","text":"object tiledb_domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_domain-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the tiledb_domain TileDB type string — datatype,tiledb_domain-method","text":"tiledb_domain type string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datatype-tiledb_domain-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the tiledb_domain TileDB type string — datatype,tiledb_domain-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"))) datatype(dom) #> [1] \"INT32\" dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(0.5, 100.0), type = \"FLOAT64\"))) datatype(dom) #> [1] \"FLOAT64\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datetimes_as_int64-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set datetimes_as_int64 toggle — datetimes_as_int64<-","title":"Set datetimes_as_int64 toggle — datetimes_as_int64<-","text":"tiledb_array object may contain date datetime objects. internal representation generally shielded user, can useful access ‘native’ format integer64. function set current value selection variable, default FALSE.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datetimes_as_int64-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set datetimes_as_int64 toggle — datetimes_as_int64<-","text":"","code":"datetimes_as_int64(x) <- value  # S4 method for class 'tiledb_array' datetimes_as_int64(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datetimes_as_int64-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set datetimes_as_int64 toggle — datetimes_as_int64<-","text":"x tiledb_array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datetimes_as_int64-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set datetimes_as_int64 toggle — datetimes_as_int64<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datetimes_as_int64-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve datetimes_as_int64 toggle — datetimes_as_int64","title":"Retrieve datetimes_as_int64 toggle — datetimes_as_int64","text":"tiledb_array object may contain date datetime objects. internal representation generally shielded user, can useful access ‘native’ format integer64. function retrieves current value selection variable, default FALSE.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datetimes_as_int64-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve datetimes_as_int64 toggle — datetimes_as_int64","text":"","code":"datetimes_as_int64(object)  # S4 method for class 'tiledb_array' datetimes_as_int64(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datetimes_as_int64-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve datetimes_as_int64 toggle — datetimes_as_int64","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/datetimes_as_int64-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve datetimes_as_int64 toggle — datetimes_as_int64","text":"logical value indicating whether datetimes_as_int64 selected","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/describe.html","id":null,"dir":"Reference","previous_headings":"","what":"Describe a TileDB array schema via code to create it — describe","title":"Describe a TileDB array schema via code to create it — describe","text":"Note function unexported internal function can called using colons tiledb:::describe(arr).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/describe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Describe a TileDB array schema via code to create it — describe","text":"","code":"describe(arr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/describe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Describe a TileDB array schema via code to create it — describe","text":"arr TileDB Array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/describe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Describe a TileDB array schema via code to create it — describe","text":"Nothing returned function invoked side effect printing schema via sequence R instructions re-create .","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_array_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_array_schema","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_array_schema","text":"valid integral (integer) domains","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_array_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_array_schema","text":"","code":"# S3 method for class 'tiledb_array_schema' dim(x)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_array_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_array_schema","text":"x tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_array_schema.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_array_schema","text":"dimension vector","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_array_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_array_schema","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 10L), type = \"INT32\"))) sch <- tiledb_array_schema(dom, attrs = c(tiledb_attr(\"a1\", type = \"INT32\"),                                           tiledb_attr(\"a2\", type = \"FLOAT64\"))) dim(sch) #> [1] 10"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves the dimension of the tiledb_dim domain — dim.tiledb_dim","title":"Retrieves the dimension of the tiledb_dim domain — dim.tiledb_dim","text":"Retrieves dimension tiledb_dim domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves the dimension of the tiledb_dim domain — dim.tiledb_dim","text":"","code":"# S3 method for class 'tiledb_dim' dim(x)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves the dimension of the tiledb_dim domain — dim.tiledb_dim","text":"x tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves the dimension of the tiledb_dim domain — dim.tiledb_dim","text":"vector tile_dim domain type, dim domain dimension (extent)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_dim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves the dimension of the tiledb_dim domain — dim.tiledb_dim","text":"","code":"d1 <- tiledb_dim(\"d1\", c(1L, 10L), 5L) dim(d1) #> [1] 10"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_domain","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_domain","text":"valid integral (integer) domains","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_domain","text":"","code":"# S3 method for class 'tiledb_domain' dim(x)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_domain","text":"x tiledb_domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_domain","text":"dimension vector","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dim.tiledb_domain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the dimension (domain extent) of the domain — dim.tiledb_domain","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"),                               tiledb_dim(\"d2\", c(1L, 100L), type = \"INT32\"))) dim(dom) #> [1] 100 100"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of tiledb_dim objects associated with the tiledb_array_schema — dimensions,tiledb_array_schema-method","title":"Returns a list of tiledb_dim objects associated with the tiledb_array_schema — dimensions,tiledb_array_schema-method","text":"Returns list tiledb_dim objects associated tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of tiledb_dim objects associated with the tiledb_array_schema — dimensions,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' dimensions(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of tiledb_dim objects associated with the tiledb_array_schema — dimensions,tiledb_array_schema-method","text":"object tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_array_schema-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of tiledb_dim objects associated with the tiledb_array_schema — dimensions,tiledb_array_schema-method","text":"list tiledb_dim objects","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_array_schema-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a list of tiledb_dim objects associated with the tiledb_array_schema — dimensions,tiledb_array_schema-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"),                               tiledb_dim(\"d2\", c(1L, 50L), type = \"INT32\"))) sch <- tiledb_array_schema(dom, attrs = c(tiledb_attr(\"a1\", type = \"INT32\"))) dimensions(dom) #> [[1]] #> tiledb_dim(name=\"d1\", domain=c(1L,100L), tile=100L, type=\"INT32\")  #>  #> [[2]] #> tiledb_dim(name=\"d2\", domain=c(1L,50L), tile=50L, type=\"INT32\")  #>   lapply(dimensions(dom), name) #> [[1]] #> [1] \"d1\" #>  #> [[2]] #> [1] \"d2\" #>"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_domain-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a list of the tiledb_domain dimension objects — dimensions,tiledb_domain-method","title":"Returns a list of the tiledb_domain dimension objects — dimensions,tiledb_domain-method","text":"Returns list tiledb_domain dimension objects","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_domain-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a list of the tiledb_domain dimension objects — dimensions,tiledb_domain-method","text":"","code":"# S4 method for class 'tiledb_domain' dimensions(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_domain-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a list of the tiledb_domain dimension objects — dimensions,tiledb_domain-method","text":"object tiledb_domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_domain-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a list of the tiledb_domain dimension objects — dimensions,tiledb_domain-method","text":"list tiledb_dim","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/dimensions-tiledb_domain-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns a list of the tiledb_domain dimension objects — dimensions,tiledb_domain-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"),                               tiledb_dim(\"d2\", c(1L, 50L), type = \"INT32\"))) dimensions(dom) #> [[1]] #> tiledb_dim(name=\"d1\", domain=c(1L,100L), tile=100L, type=\"INT32\")  #>  #> [[2]] #> tiledb_dim(name=\"d2\", domain=c(1L,50L), tile=50L, type=\"INT32\")  #>   lapply(dimensions(dom), name) #> [[1]] #> [1] \"d1\" #>  #> [[2]] #> [1] \"d2\" #>"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the tiledb_domain object associated with a given tiledb_array_schema — domain,tiledb_array_schema-method","title":"Returns the tiledb_domain object associated with a given tiledb_array_schema — domain,tiledb_array_schema-method","text":"Returns tiledb_domain object associated given tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the tiledb_domain object associated with a given tiledb_array_schema — domain,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' domain(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the tiledb_domain object associated with a given tiledb_array_schema — domain,tiledb_array_schema-method","text":"object tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_array_schema-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the tiledb_domain object associated with a given tiledb_array_schema — domain,tiledb_array_schema-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 10L), type = \"INT32\"))) sch <- tiledb_array_schema(dom, attrs = c(tiledb_attr(\"a1\", type = \"INT32\"))) domain(sch) #> tiledb_domain(c( #>         tiledb_dim(name=\"d1\", domain=c(1L,10L), tile=10L, type=\"INT32\") #>     ))"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_dim-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the tiledb_dim domain — domain,tiledb_dim-method","title":"Return the tiledb_dim domain — domain,tiledb_dim-method","text":"Return tiledb_dim domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_dim-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the tiledb_dim domain — domain,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' domain(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_dim-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the tiledb_dim domain — domain,tiledb_dim-method","text":"object tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_dim-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the tiledb_dim domain — domain,tiledb_dim-method","text":"vector (lb, ub) inclusive domain dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/domain-tiledb_dim-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the tiledb_dim domain — domain,tiledb_dim-method","text":"","code":"d1 <- tiledb_dim(\"d1\", domain = c(5L, 10L)) domain(d1) #> [1]  5 10"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/extended-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data.frame extended return columns toggle — extended<-","title":"Set data.frame extended return columns toggle — extended<-","text":"tiledb_array object can returned data.frame. methods set selection value ‘extended’ format including row (column, present) indices.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/extended-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data.frame extended return columns toggle — extended<-","text":"","code":"extended(x) <- value  # S4 method for class 'tiledb_array' extended(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/extended-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data.frame extended return columns toggle — extended<-","text":"x tiledb_array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/extended-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set data.frame extended return columns toggle — extended<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/extended-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data.frame extended returns columns toggle — extended","title":"Retrieve data.frame extended returns columns toggle — extended","text":"tiledb_array object can returned data.frame. methods returns selection value ‘extended’ format including row (column, present) indices.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/extended-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data.frame extended returns columns toggle — extended","text":"","code":"extended(object)  # S4 method for class 'tiledb_array' extended(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/extended-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data.frame extended returns columns toggle — extended","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/extended-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data.frame extended returns columns toggle — extended","text":"logical value indicating whether extended return selected","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fetchBatched.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a ‘batched’ query — fetchBatched","title":"Run a ‘batched’ query — fetchBatched","text":"Batched queries return initial result set even incomplete. normal retrieval process loop place complete (potentially large) result set, function return result (may part larger result set) allowing user assemble part.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fetchBatched.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a ‘batched’ query — fetchBatched","text":"","code":"fetchBatched(x, obj)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fetchBatched.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a ‘batched’ query — fetchBatched","text":"x tiledb_array object obj batchedquery object returned createBatched","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fetchBatched.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a ‘batched’ query — fetchBatched","text":"data.frame object (potentially partial) result batched query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fetchBatched.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run a ‘batched’ query — fetchBatched","text":"tiledb_array object can parameterised usual.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-set-tiledb_attr-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the TileDB Filter List for the TileDB Attribute object — filter_list<-,tiledb_attr-method","title":"Sets the TileDB Filter List for the TileDB Attribute object — filter_list<-,tiledb_attr-method","text":"Sets TileDB Filter List TileDB Attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-set-tiledb_attr-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the TileDB Filter List for the TileDB Attribute object — filter_list<-,tiledb_attr-method","text":"","code":"# S4 method for class 'tiledb_attr' filter_list(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-set-tiledb_attr-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the TileDB Filter List for the TileDB Attribute object — filter_list<-,tiledb_attr-method","text":"x TileDB Attribute value TileDB Filter List","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-set-tiledb_attr-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the TileDB Filter List for the TileDB Attribute object — filter_list<-,tiledb_attr-method","text":"modified TileDB Attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-set-tiledb_dim-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the TileDB Filter List for the TileDB Dimension object — filter_list<-,tiledb_dim-method","title":"Sets the TileDB Filter List for the TileDB Dimension object — filter_list<-,tiledb_dim-method","text":"Sets TileDB Filter List TileDB Dimension object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-set-tiledb_dim-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the TileDB Filter List for the TileDB Dimension object — filter_list<-,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' filter_list(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-set-tiledb_dim-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the TileDB Filter List for the TileDB Dimension object — filter_list<-,tiledb_dim-method","text":"x TileDB Dimension value TileDB Filter List","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-set-tiledb_dim-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the TileDB Filter List for the TileDB Dimension object — filter_list<-,tiledb_dim-method","text":"modified TileDB Dimension object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the offsets and coordinate filter_lists associated with the tiledb_array_schema — filter_list,tiledb_array_schema-method","title":"Returns the offsets and coordinate filter_lists associated with the tiledb_array_schema — filter_list,tiledb_array_schema-method","text":"Returns offsets coordinate filter_lists associated tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the offsets and coordinate filter_lists associated with the tiledb_array_schema — filter_list,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' filter_list(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the offsets and coordinate filter_lists associated with the tiledb_array_schema — filter_list,tiledb_array_schema-method","text":"object tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_array_schema-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the offsets and coordinate filter_lists associated with the tiledb_array_schema — filter_list,tiledb_array_schema-method","text":"list tiledb_filter_list objects","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_attr-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the TileDB Filter List object associated with the given TileDB Attribute — filter_list,tiledb_attr-method","title":"Returns the TileDB Filter List object associated with the given TileDB Attribute — filter_list,tiledb_attr-method","text":"Returns TileDB Filter List object associated given TileDB Attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_attr-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the TileDB Filter List object associated with the given TileDB Attribute — filter_list,tiledb_attr-method","text":"","code":"# S4 method for class 'tiledb_attr' filter_list(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_attr-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the TileDB Filter List object associated with the given TileDB Attribute — filter_list,tiledb_attr-method","text":"object TileDB Attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_attr-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the TileDB Filter List object associated with the given TileDB Attribute — filter_list,tiledb_attr-method","text":"tiledb_filter_list object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_attr-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the TileDB Filter List object associated with the given TileDB Attribute — filter_list,tiledb_attr-method","text":"","code":"attr <- tiledb_attr(type = \"INT32\", filter_list=tiledb_filter_list(list(tiledb_filter(\"ZSTD\")))) filter_list(attr) #> tiledb_filter_list(c(tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",-1)))"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_dim-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the TileDB Filter List object associated with the given TileDB Dimension — filter_list,tiledb_dim-method","title":"Returns the TileDB Filter List object associated with the given TileDB Dimension — filter_list,tiledb_dim-method","text":"Returns TileDB Filter List object associated given TileDB Dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_dim-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the TileDB Filter List object associated with the given TileDB Dimension — filter_list,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' filter_list(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_dim-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the TileDB Filter List object associated with the given TileDB Dimension — filter_list,tiledb_dim-method","text":"object TileDB_Dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/filter_list-tiledb_dim-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the TileDB Filter List object associated with the given TileDB Dimension — filter_list,tiledb_dim-method","text":"TileDB_filter_list object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a TileDB dense or sparse array from a given data.frame Object — fromDataFrame","title":"Create a TileDB dense or sparse array from a given data.frame Object — fromDataFrame","text":"supplied data.frame object (currently) limited integer, numeric, character. addition, three datetime columns supported R representations Date, POSIXct nanotime.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a TileDB dense or sparse array from a given data.frame Object — fromDataFrame","text":"","code":"fromDataFrame(   obj,   uri,   col_index = NULL,   sparse = TRUE,   allows_dups = sparse,   cell_order = \"COL_MAJOR\",   tile_order = \"COL_MAJOR\",   filter = \"ZSTD\",   capacity = 10000L,   tile_domain = NULL,   tile_extent = NULL,   mode = c(\"ingest\", \"schema_only\", \"append\"),   filter_list = NULL,   coords_filters = \"ZSTD\",   offsets_filters = \"ZSTD\",   validity_filters = \"RLE\",   debug = FALSE,   timestamps = as.POSIXct(double(), origin = \"1970-01-01\") )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a TileDB dense or sparse array from a given data.frame Object — fromDataFrame","text":"obj data.frame object. uri character variable Array URI. col_index optional column index, either numeric column index, character column name, designating index column; default NULL implying index column added array created sparse logical switch select sparse (default) dense allows_dups logical switch select duplicate values allowed , default value ‘sparse’. cell_order character variable one TileDB cell order values, default “COL_MAJOR”. tile_order character variable one TileDB tile order values, default “COL_MAJOR”. filter character variable vector, defaults ‘ZSTD’, one filters applied attribute; capacity integer value schema capacity, default 10000. tile_domain integer vector list NULL. integer vector size two specifies integer domain row dimension; list named element used dimension name; NULL row dimension obj used. tile_extent integer value tile extent row dimensions; NULL row dimension obj used. Note tile_extent exceed tile domain. mode character variable possible values ‘ingest’ (schema creation data ingestion, default behavior), ‘schema_only’ (create array schema without writing newly-created array) ‘append’ (append already existing array). filter_list named list specifying filter choices per column, default empty list object. argument applies named arguments matchin dimensions attributes. filter argument still applies unnamed arguments. coords_filters character vector filters coordinates, default ZSTD. offsets_filters character vector filters coordinates, default ZSTD. validity_filters character vector filters coordinates, default RLE. debug Logical flag select additional output. timestamps Vector two POSIXct variables denoting open intervals; default length zero start end set (implicitly) current time; case one value used interval end, case two values taken start end. applies write append modes schema creation.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a TileDB dense or sparse array from a given data.frame Object — fromDataFrame","text":"Null, invisibly.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromDataFrame.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a TileDB dense or sparse array from a given data.frame Object — fromDataFrame","text":"created (dense sparse) array many attributes columns data.frame.  attribute single column. sparse array, one columns designated dimensions. present, factor variable converted character.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a TileDB dense or sparse array from a given data.frame Object — fromDataFrame","text":"","code":"uri <- tempfile() fromDataFrame(iris, uri) arr <- tiledb_array(uri, return_as=\"data.frame\", extended=FALSE) newdf <- arr[] all.equal(iris, newdf, check.attributes=FALSE)  # extra attribute on query in newdf #> [1] TRUE all.equal(as.matrix(iris), as.matrix(newdf))  # also strips attribute #> [1] TRUE"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a TileDB array from an R matrix, or return an R matrix — fromMatrix","title":"Create a TileDB array from an R matrix, or return an R matrix — fromMatrix","text":"functions fromMatrix toMatrix help storing (retrieving) matrices using TileDB backend. particular help matrices explicit rownames.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a TileDB array from an R matrix, or return an R matrix — fromMatrix","text":"","code":"fromMatrix(obj, uri, filter = \"ZSTD\", capacity = 10000L)  toMatrix(uri)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a TileDB array from an R matrix, or return an R matrix — fromMatrix","text":"obj sparse matrix object. uri character variable Array URI. filter character variable vector, defaults ‘ZSTD’, one filters applied attribute; capacity integer value schema capacity, default 10000.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a TileDB array from an R matrix, or return an R matrix — fromMatrix","text":"Null, invisibly.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromSparseMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create (or return) a TileDB sparse array — fromSparseMatrix","title":"Create (or return) a TileDB sparse array — fromSparseMatrix","text":"functions fromSparseMatrix toSparseMatrix help storing (retrieving) sparse matrices using TileDB backend.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromSparseMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create (or return) a TileDB sparse array — fromSparseMatrix","text":"","code":"fromSparseMatrix(   obj,   uri,   cell_order = \"ROW_MAJOR\",   tile_order = \"ROW_MAJOR\",   filter = \"ZSTD\",   capacity = 10000L )  toSparseMatrix(uri)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromSparseMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create (or return) a TileDB sparse array — fromSparseMatrix","text":"obj sparse matrix object. uri character variable Array URI. cell_order character variable one TileDB cell order values, default “COL_MAJOR”. tile_order character variable one TileDB tile order values, default “COL_MAJOR”. filter character variable vector, defaults ‘ZSTD’, one filters applied attribute; capacity integer value schema capacity, default 10000.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromSparseMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create (or return) a TileDB sparse array — fromSparseMatrix","text":"Null, invisibly.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/fromSparseMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create (or return) a TileDB sparse array — fromSparseMatrix","text":"","code":"if (FALSE) { # \\dontrun{ if (requireNamespace(\"Matrix\", quietly=TRUE)) {     library(Matrix)     set.seed(123)      # just to fix it     mat <- matrix(0, nrow=20, ncol=10)     mat[sample(seq_len(200), 20)] <- seq(1, 20)     spmat <- as(mat, \"dgTMatrix\")  # sparse matrix in dgTMatrix format     uri <- \"sparse_matrix\"     fromSparseMatrix(spmat, uri)   # now written     chk <- toSparseMatrix(uri)     # and re-read     print(chk)     all.equal(spmat, chk) } } # }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/generics.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic Methods — generics","title":"Generic Methods — generics","text":"Definition generic methods","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic Methods — generics","text":"","code":"schema(object, ...)  return.data.frame(object, ...)  return.data.frame(x) <- value  attrs(x) <- value  raw_dump(object, ...)  domain(object, ...)  dimensions(object, ...)  attrs(object, idx, ...)  cell_order(object, ...)  tile_order(object, ...)  filter_list(object, ...)  filter_list(x) <- value  is.sparse(object, ...)  tiledb_ndim(object, ...)  name(object)  datatype(object)  config(object, ...)  tile(object)  is.integral(object)  nfilters(object)  tdb_filter(x, ...)  tdb_select(x, ...)  tdb_collect(x, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic Methods — generics","text":"object TileDB object ... Currently unused x TileDB Object value value assigned idx index argument","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/has_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a schema for a given attribute name — has_attribute","title":"Check a schema for a given attribute name — has_attribute","text":"Check schema given attribute name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/has_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a schema for a given attribute name — has_attribute","text":"","code":"has_attribute(schema, attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/has_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a schema for a given attribute name — has_attribute","text":"schema schema TileDB Array attr character variable attribute name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/has_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a schema for a given attribute name — has_attribute","text":"boolean value indicating attribute exists schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous","text":"TileDB attribute anonymous name/label defined","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous","text":"","code":"is.anonymous(object)  # S3 method for class 'tiledb_attr' is.anonymous(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous","text":"object tiledb_attr object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous","text":"TRUE FALSE","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous","text":"","code":"a1 <- tiledb_attr(\"a1\", type = \"FLOAT64\") is.anonymous(a1) #> [1] FALSE  a2 <- tiledb_attr(\"\", type = \"FLOAT64\") is.anonymous(a2) #> [1] TRUE"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.tiledb_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous.tiledb_dim","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous.tiledb_dim","text":"TileDB dimension anonymous name/label defined","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.tiledb_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous.tiledb_dim","text":"","code":"# S3 method for class 'tiledb_dim' is.anonymous(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.tiledb_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous.tiledb_dim","text":"object tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.tiledb_dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous.tiledb_dim","text":"TRUE FALSE","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.anonymous.tiledb_dim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns TRUE if the tiledb_dim is anonymous — is.anonymous.tiledb_dim","text":"","code":"d1 <- tiledb_dim(\"d1\", c(1L, 10L), 10L) is.anonymous(d1) #> [1] FALSE  d2 <- tiledb_dim(\"\", c(1L, 10L), 10L) is.anonymous(d2) #> [1] TRUE"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.integral-tiledb_domain-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns TRUE is tiledb_domain is an integral (integer) domain — is.integral,tiledb_domain-method","title":"Returns TRUE is tiledb_domain is an integral (integer) domain — is.integral,tiledb_domain-method","text":"Returns TRUE tiledb_domain integral (integer) domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.integral-tiledb_domain-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns TRUE is tiledb_domain is an integral (integer) domain — is.integral,tiledb_domain-method","text":"","code":"# S4 method for class 'tiledb_domain' is.integral(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.integral-tiledb_domain-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns TRUE is tiledb_domain is an integral (integer) domain — is.integral,tiledb_domain-method","text":"object tiledb_domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.integral-tiledb_domain-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns TRUE is tiledb_domain is an integral (integer) domain — is.integral,tiledb_domain-method","text":"TRUE domain integral domain, else FALSE","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.integral-tiledb_domain-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns TRUE is tiledb_domain is an integral (integer) domain — is.integral,tiledb_domain-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"))) is.integral(dom) #> [1] TRUE dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(0.5, 100.0), type = \"FLOAT64\"))) is.integral(dom) #> [1] TRUE"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns TRUE if the tiledb_array_schema is sparse, else FALSE — is.sparse,tiledb_array_schema-method","title":"Returns TRUE if the tiledb_array_schema is sparse, else FALSE — is.sparse,tiledb_array_schema-method","text":"Returns TRUE tiledb_array_schema sparse, else FALSE","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns TRUE if the tiledb_array_schema is sparse, else FALSE — is.sparse,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' is.sparse(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns TRUE if the tiledb_array_schema is sparse, else FALSE — is.sparse,tiledb_array_schema-method","text":"object tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_array_schema-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns TRUE if the tiledb_array_schema is sparse, else FALSE — is.sparse,tiledb_array_schema-method","text":"TRUE tiledb_array_schema sparse","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_dense-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns true is if the array or array_schema is sparse — is.sparse,tiledb_dense-method","title":"Returns true is if the array or array_schema is sparse — is.sparse,tiledb_dense-method","text":"Returns true array array_schema sparse","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_dense-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns true is if the array or array_schema is sparse — is.sparse,tiledb_dense-method","text":"","code":"# S4 method for tiledb_dense is.sparse(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_dense-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns true is if the array or array_schema is sparse — is.sparse,tiledb_dense-method","text":"object tiledb_dense","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_dense-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns true is if the array or array_schema is sparse — is.sparse,tiledb_dense-method","text":"FALSE","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_sparse-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is sparse — is.sparse,tiledb_sparse-method","title":"Check if object is sparse — is.sparse,tiledb_sparse-method","text":"Check object sparse","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_sparse-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is sparse — is.sparse,tiledb_sparse-method","text":"","code":"# S4 method for tiledb_sparse is.sparse(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_sparse-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is sparse — is.sparse,tiledb_sparse-method","text":"object TileDB object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/is.sparse-tiledb_sparse-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is sparse — is.sparse,tiledb_sparse-method","text":"logical value indicating whether object sparse","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/limitTileDBCores.html","id":null,"dir":"Reference","previous_headings":"","what":"Limit TileDB core use to a given number of cores — limitTileDBCores","title":"Limit TileDB core use to a given number of cores — limitTileDBCores","text":"default, TileDB use available cores given machine. multi-user multi-process settings, one may want reduce number core. function take given number, default smaller ‘Ncpus’ options value ‘\"OMP_THREAD_LIMIT\"’ enviroment variable (two hard fallback).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/limitTileDBCores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit TileDB core use to a given number of cores — limitTileDBCores","text":"","code":"limitTileDBCores(ncores, verbose = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/limitTileDBCores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limit TileDB core use to a given number of cores — limitTileDBCores","text":"ncores Value CPUs used, missing smaller fallback two, value ‘Ncpus’ (set) value environment variable ‘\"OMP_THREAD_LIMIT\"’ used. verbose Optional logical toggle; set, short message displayed informing user value set.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/limitTileDBCores.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Limit TileDB core use to a given number of cores — limitTileDBCores","text":"modified configuration object returned invisibly.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/limitTileDBCores.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Limit TileDB core use to a given number of cores — limitTileDBCores","text":"function returns config object, intended use argument context creating functions: ctx <- tiledb_ctx(limitTileDBCores()). check values set (later point, still set) config object retrieved via corresponding method ctx object: cfg <- config(ctx).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_attr-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the tiledb_attr name — name,tiledb_attr-method","title":"Return the tiledb_attr name — name,tiledb_attr-method","text":"Return tiledb_attr name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_attr-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the tiledb_attr name — name,tiledb_attr-method","text":"","code":"# S4 method for class 'tiledb_attr' name(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_attr-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the tiledb_attr name — name,tiledb_attr-method","text":"object tiledb_attr object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_attr-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the tiledb_attr name — name,tiledb_attr-method","text":"string name, empty string attribute anonymous","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_attr-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the tiledb_attr name — name,tiledb_attr-method","text":"","code":"a1 <- tiledb_attr(\"a1\", type = \"INT32\") name(a1) #> [1] \"a1\"  a2 <- tiledb_attr(type = \"INT32\") name(a2) #> [1] \"\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_dim-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the tiledb_dim name — name,tiledb_dim-method","title":"Return the tiledb_dim name — name,tiledb_dim-method","text":"Return tiledb_dim name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_dim-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the tiledb_dim name — name,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' name(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_dim-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the tiledb_dim name — name,tiledb_dim-method","text":"object tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_dim-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the tiledb_dim name — name,tiledb_dim-method","text":"string name, empty string dimension anonymous","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/name-tiledb_dim-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the tiledb_dim name — name,tiledb_dim-method","text":"","code":"d1 <- tiledb_dim(\"d1\", c(1L, 10L)) name(d1) #> [1] \"d1\"  d2 <- tiledb_dim(\"\", c(1L, 10L)) name(d2) #> [1] \"\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/nfilters-tiledb_filter_list-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the filter_list's number of filters — nfilters,tiledb_filter_list-method","title":"Returns the filter_list's number of filters — nfilters,tiledb_filter_list-method","text":"Returns filter_list's number filters","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/nfilters-tiledb_filter_list-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the filter_list's number of filters — nfilters,tiledb_filter_list-method","text":"","code":"# S4 method for class 'tiledb_filter_list' nfilters(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/nfilters-tiledb_filter_list-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the filter_list's number of filters — nfilters,tiledb_filter_list-method","text":"object tiledb_filter_list","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/nfilters-tiledb_filter_list-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the filter_list's number of filters — nfilters,tiledb_filter_list-method","text":"integer number filters","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/nfilters-tiledb_filter_list-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the filter_list's number of filters — nfilters,tiledb_filter_list-method","text":"","code":"flt <- tiledb_filter(\"ZSTD\") tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 5) #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)  filter_list <- tiledb_filter_list(c(flt)) nfilters(filter_list) #> [1] 1"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/parse_query_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a 'tiledb_query_condition' object from an expression — parse_query_condition","title":"Create a 'tiledb_query_condition' object from an expression — parse_query_condition","text":"grammar query conditions present constraint eight operators (\">\", \">=\", \"<\", \"<=\", \"==\", \"!=\", \"%%\", \"%nin%\"), three boolean operators (\"&&\", also \"&\", (\"||\", also \"|\", \"!\" negation.  Note locally define \"%nin%\" Negate() call around %%) extends R little use case.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/parse_query_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a 'tiledb_query_condition' object from an expression — parse_query_condition","text":"","code":"parse_query_condition(   expr,   ta = NULL,   debug = FALSE,   strict = TRUE,   use_int64 = FALSE )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/parse_query_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a 'tiledb_query_condition' object from an expression — parse_query_condition","text":"expr expression understood TileDB grammar query conditions. ta tiledb_array object query condition applied ; argument optional cases required others. debug boolean toogle enable verbose operations, defaults 'FALSE'. strict boolean toogle , set, errors non-existing attribute selected filtered , defaults 'TRUE'; 'FALSE' warning shown execution proceeds. use_int64 boolean toggle switch integer64 integer seen, default false remain default four-byte int","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/parse_query_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a 'tiledb_query_condition' object from an expression — parse_query_condition","text":"tiledb_query_condition object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/parse_query_condition.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a 'tiledb_query_condition' object from an expression — parse_query_condition","text":"Expressions parsed locally function. debug=TRUE option may help issue diagnosed. cases errroneous parse, generally helps supply tiledb_array providing schema information. One example numeric integer columns data type difficult guess. Also, using \"%%\" \"%nin%\" operators, argument mandatory.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/parse_query_condition.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a 'tiledb_query_condition' object from an expression — parse_query_condition","text":"","code":"if (FALSE) { # \\dontrun{ uri <- \"mem://airquality\"    # change to on-disk for persistence fromDataFrame(airquality, uri, col_index=c(\"Month\", \"Day\"))  # dense array ## query condition on dense array requires extended=FALSE tiledb_array(uri, return_as=\"data.frame\", extended=FALSE,              query_condition=parse_query_condition(Temp > 90))[] } # }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/print.tiledb_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Print a TileDB Array Metadata object — print.tiledb_metadata","title":"Print a TileDB Array Metadata object — print.tiledb_metadata","text":"Print TileDB Array Metadata object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/print.tiledb_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print a TileDB Array Metadata object — print.tiledb_metadata","text":"","code":"# S3 method for class 'tiledb_metadata' print(x, width = NULL, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/print.tiledb_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print a TileDB Array Metadata object — print.tiledb_metadata","text":"x TileDB array object width Optional display width, defaults NULL ... Optional method arguments, currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/print.tiledb_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print a TileDB Array Metadata object — print.tiledb_metadata","text":"array object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_condition-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set query_condition object for the array — query_condition<-","title":"Set query_condition object for the array — query_condition<-","text":"tiledb_array object can associated query condition object set conditions read queries. methods sets ‘query_condition’ object.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_condition-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set query_condition object for the array — query_condition<-","text":"","code":"query_condition(x) <- value  # S4 method for class 'tiledb_array' query_condition(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_condition-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set query_condition object for the array — query_condition<-","text":"x tiledb_array object value tiledb_query_conditon_object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_condition-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set query_condition object for the array — query_condition<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_condition-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve query_condition value for the array — query_condition","title":"Retrieve query_condition value for the array — query_condition","text":"tiledb_array object can corresponding query condition object. methods returns .","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_condition-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve query_condition value for the array — query_condition","text":"","code":"query_condition(object)  # S4 method for class 'tiledb_array' query_condition(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_condition-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve query_condition value for the array — query_condition","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_condition-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve query_condition value for the array — query_condition","text":"tiledb_query_condition object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_layout-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set query_layout return values for the array — query_layout<-","title":"Set query_layout return values for the array — query_layout<-","text":"tiledb_array object can associated query specific layout. methods sets selection value ‘query_layout’ character value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_layout-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set query_layout return values for the array — query_layout<-","text":"","code":"query_layout(x) <- value  # S4 method for class 'tiledb_array' query_layout(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_layout-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set query_layout return values for the array — query_layout<-","text":"x tiledb_array object value character variable query layout. Permitted values “ROW_MAJOR”, “COL_MAJOR”, “GLOBAL_ORDER”, “UNORDERD”.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_layout-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set query_layout return values for the array — query_layout<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_layout-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve query_layout values for the array — query_layout","title":"Retrieve query_layout values for the array — query_layout","text":"tiledb_array object can corresponding query given layout given layout. methods returns selection value ‘query_layout’ character value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_layout-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve query_layout values for the array — query_layout","text":"","code":"query_layout(object)  # S4 method for class 'tiledb_array' query_layout(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_layout-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve query_layout values for the array — query_layout","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_layout-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve query_layout values for the array — query_layout","text":"character value describing query layout","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_statistics-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set query_statistics toggle — query_statistics<-","title":"Set query_statistics toggle — query_statistics<-","text":"tiledb_array object can, requested, return query statistics JSON string attribute ‘query_statistics’ attached return object. default value logical switch ‘FALSE’. method sets value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_statistics-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set query_statistics toggle — query_statistics<-","text":"","code":"query_statistics(x) <- value  # S4 method for class 'tiledb_array' query_statistics(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_statistics-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set query_statistics toggle — query_statistics<-","text":"x tiledb_array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_statistics-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set query_statistics toggle — query_statistics<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_statistics-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve query_statistics toggle — query_statistics","title":"Retrieve query_statistics toggle — query_statistics","text":"tiledb_array object can, requested, return query statistics JSON string attribute ‘query_statistics’ attached return object. default value logical switch ‘FALSE’. method returns current value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_statistics-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve query_statistics toggle — query_statistics","text":"","code":"query_statistics(object, ...)  # S4 method for class 'tiledb_array' query_statistics(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_statistics-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve query_statistics toggle — query_statistics","text":"object tiledb_array object ... Currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/query_statistics-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve query_statistics toggle — query_statistics","text":"logical value indicating whether query statistics returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/r_to_tiledb_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up TileDB type corresponding to the type of an R object — r_to_tiledb_type","title":"Look up TileDB type corresponding to the type of an R object — r_to_tiledb_type","text":"Look TileDB type corresponding type R object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/r_to_tiledb_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up TileDB type corresponding to the type of an R object — r_to_tiledb_type","text":"","code":"r_to_tiledb_type(x)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/r_to_tiledb_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up TileDB type corresponding to the type of an R object — r_to_tiledb_type","text":"x R array list","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/r_to_tiledb_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up TileDB type corresponding to the type of an R object — r_to_tiledb_type","text":"single character, e.g. INT32","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw display of an array schema object — raw_dump,tiledb_array_schema-method","title":"Raw display of an array schema object — raw_dump,tiledb_array_schema-method","text":"method used display method provided underlying library.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw display of an array schema object — raw_dump,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' raw_dump(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw display of an array schema object — raw_dump,tiledb_array_schema-method","text":"object array_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_attr-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw display of an attribute object — raw_dump,tiledb_attr-method","title":"Raw display of an attribute object — raw_dump,tiledb_attr-method","text":"method used display method provided underlying library.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_attr-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw display of an attribute object — raw_dump,tiledb_attr-method","text":"","code":"# S4 method for class 'tiledb_attr' raw_dump(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_attr-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw display of an attribute object — raw_dump,tiledb_attr-method","text":"object attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_domain-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw display of a domain object — raw_dump,tiledb_domain-method","title":"Raw display of a domain object — raw_dump,tiledb_domain-method","text":"method used display method provided underlying library.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_domain-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw display of a domain object — raw_dump,tiledb_domain-method","text":"","code":"# S4 method for class 'tiledb_domain' raw_dump(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/raw_dump-tiledb_domain-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Raw display of a domain object — raw_dump,tiledb_domain-method","text":"object domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.array-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set array return toggle — return.array<-","title":"Set array return toggle — return.array<-","text":"tiledb_array object can returned array (list arrays), , select, data.frame matrix. methods sets selection value array.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.array-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set array return toggle — return.array<-","text":"","code":"return.array(x) <- value  # S4 method for class 'tiledb_array' return.array(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.array-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set array return toggle — return.array<-","text":"x tiledb_array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.array-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set array return toggle — return.array<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.array-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve array return toggle — return.array","title":"Retrieve array return toggle — return.array","text":"tiledb_array object can returned array (list arrays), , select, data.frame matrix. methods returns selection value array selection.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.array-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve array return toggle — return.array","text":"","code":"return.array(object, ...)  # S4 method for class 'tiledb_array' return.array(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.array-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve array return toggle — return.array","text":"object tiledb_array object ... Currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.array-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve array return toggle — return.array","text":"logical value indicating whether array return selected","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data.frame return toggle — return.data.frame<-,tiledb_array-method","title":"Set data.frame return toggle — return.data.frame<-,tiledb_array-method","text":"tiledb_array object can returned array (list arrays), , select, data.frame. methods sets selection value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data.frame return toggle — return.data.frame<-,tiledb_array-method","text":"","code":"# S4 method for class 'tiledb_array' return.data.frame(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data.frame return toggle — return.data.frame<-,tiledb_array-method","text":"x tiledb_array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set data.frame return toggle — return.data.frame<-,tiledb_array-method","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_dense-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data.frame return toggle — return.data.frame<-","title":"Set data.frame return toggle — return.data.frame<-","text":"tiledb_dense object can returned array (list arrays), , select, data.frame. methods sets selection value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_dense-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data.frame return toggle — return.data.frame<-","text":"","code":"return.data.frame(x) <- value  # S4 method for tiledb_dense return.data.frame(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_dense-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data.frame return toggle — return.data.frame<-","text":"x tiledb_dense array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_dense-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set data.frame return toggle — return.data.frame<-","text":"modified tiledb_dense array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_sparse-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set data.frame return toggle — return.data.frame<-,tiledb_sparse-method","title":"Set data.frame return toggle — return.data.frame<-,tiledb_sparse-method","text":"tiledb_sparse object can returned array (list arrays), , select, data.frame. methods sets selection value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_sparse-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set data.frame return toggle — return.data.frame<-,tiledb_sparse-method","text":"","code":"# S4 method for tiledb_sparse return.data.frame(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_sparse-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set data.frame return toggle — return.data.frame<-,tiledb_sparse-method","text":"x tiledb_sparse array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-set-tiledb_sparse-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set data.frame return toggle — return.data.frame<-,tiledb_sparse-method","text":"modified tiledb_sparse array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data.frame return toggle — return.data.frame,tiledb_array-method","title":"Retrieve data.frame return toggle — return.data.frame,tiledb_array-method","text":"tiledb_array object can returned array (list arrays), , select, data.frame. methods returns selection value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data.frame return toggle — return.data.frame,tiledb_array-method","text":"","code":"# S4 method for class 'tiledb_array' return.data.frame(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data.frame return toggle — return.data.frame,tiledb_array-method","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data.frame return toggle — return.data.frame,tiledb_array-method","text":"logical value indicating whether data.frame return selected","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_dense-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data.frame return toggle — return.data.frame","title":"Retrieve data.frame return toggle — return.data.frame","text":"tiledb_dense object can returned array (list arrays), , select, data.frame. methods returns selection value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_dense-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data.frame return toggle — return.data.frame","text":"","code":"return.data.frame(object, ...)  # S4 method for tiledb_dense return.data.frame(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_dense-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data.frame return toggle — return.data.frame","text":"object tiledb_dense array object ... Currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_dense-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data.frame return toggle — return.data.frame","text":"logical value indicating whether data.frame return selected","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_sparse-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve data.frame return toggle — return.data.frame,tiledb_sparse-method","title":"Retrieve data.frame return toggle — return.data.frame,tiledb_sparse-method","text":"tiledb_sparse object can returned array (list arrays), , select, data.frame. methods returns selection value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_sparse-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve data.frame return toggle — return.data.frame,tiledb_sparse-method","text":"","code":"# S4 method for tiledb_sparse return.data.frame(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_sparse-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve data.frame return toggle — return.data.frame,tiledb_sparse-method","text":"object tiledb_sparse array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.data.frame-tiledb_sparse-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve data.frame return toggle — return.data.frame,tiledb_sparse-method","text":"logical value indicating whether data.frame return selected","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.matrix-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set matrix return toggle — return.matrix<-","title":"Set matrix return toggle — return.matrix<-","text":"tiledb_array object can returned array (list arrays), , select, data.frame matrix. methods sets selection value matrix.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.matrix-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set matrix return toggle — return.matrix<-","text":"","code":"return.matrix(x) <- value  # S4 method for class 'tiledb_array' return.matrix(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.matrix-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set matrix return toggle — return.matrix<-","text":"x tiledb_array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.matrix-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set matrix return toggle — return.matrix<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.matrix-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve matrix return toggle — return.matrix","title":"Retrieve matrix return toggle — return.matrix","text":"tiledb_array object can returned array (list arrays), , select, data.frame matrix. methods returns selection value matrix selection.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.matrix-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve matrix return toggle — return.matrix","text":"","code":"return.matrix(object, ...)  # S4 method for class 'tiledb_array' return.matrix(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.matrix-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve matrix return toggle — return.matrix","text":"object tiledb_array object ... Currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return.matrix-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve matrix return toggle — return.matrix","text":"logical value indicating whether matrix return selected","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return_as-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve return_as conversion preference — return_as<-","title":"Retrieve return_as conversion preference — return_as<-","text":"tiledb_array object can returned ‘list’ (default), ‘array’, ‘matrix’, ‘data.frame’, ‘data.table’ ‘tibble’. method methods permits set preference returning list, array, matrix, data.frame, data.table, tibble. default value “asis” means conversion performed list returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return_as-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve return_as conversion preference — return_as<-","text":"","code":"return_as(x) <- value  # S4 method for class 'tiledb_array' return_as(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return_as-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve return_as conversion preference — return_as<-","text":"x tiledb_array object value character value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return_as-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve return_as conversion preference — return_as<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return_as-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve return_as conversion preference — return_as","title":"Retrieve return_as conversion preference — return_as","text":"tiledb_array object can returned ‘list’ (default), ‘array’, ‘matrix’, ‘data.frame’, ‘data.table’ ‘tibble’. method permits select preference returned object. default value ‘asis’ means conversion performed.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return_as-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve return_as conversion preference — return_as","text":"","code":"return_as(object, ...)  # S4 method for class 'tiledb_array' return_as(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return_as-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve return_as conversion preference — return_as","text":"object tiledb_array object ... Currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/return_as-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve return_as conversion preference — return_as","text":"character value indicating preferred conversion value one ‘asis’ (default), ‘array’, ‘matrix’,‘data.frame’, ‘data.table’, ‘tibble’.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_allocation_size_preference.html","id":null,"dir":"Reference","previous_headings":"","what":"Store allocation size preference — save_allocation_size_preference","title":"Store allocation size preference — save_allocation_size_preference","text":"Save (load) allocation size default preference optional config file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_allocation_size_preference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store allocation size preference — save_allocation_size_preference","text":"","code":"save_allocation_size_preference(value)  load_allocation_size_preference()  get_allocation_size_preference()  set_allocation_size_preference(value)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_allocation_size_preference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store allocation size preference — save_allocation_size_preference","text":"value numeric value desired allocation size (bytes).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_allocation_size_preference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store allocation size preference — save_allocation_size_preference","text":"setter, TRUE returned invisibly function invoked side effect storing value. getters, value numeric.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_allocation_size_preference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Store allocation size preference — save_allocation_size_preference","text":"retrieving data sparse arrays, allocation sizes determined ex ante degree sparsity unknown. configuration value can aide providing allocation size value. functions let user store value retrieval package script code.  preference encoded configuration file R (version 4.0.0 later) allows user- package specific configuration files.  helper functions sets retrieve value, respectively, retrieve cached value package environment set package load. value stored character value reparsed ‘1e6’ ‘1000000’ equivalent, fixed (adjustable) number digits numerical precision use formatting impact writing. effect standard allocation sizes. value used limit per column total memory use per query multiple value, increasing dimension attribute count. fallback value 10 mb used user value set.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_allocation_size_preference.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Store allocation size preference — save_allocation_size_preference","text":"function requires R version 4.0.0 later utilise per-user config directory accessor function. older R versions, fallback TileDB configuration object used.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_return_as_preference.html","id":null,"dir":"Reference","previous_headings":"","what":"Store object conversion preference — save_return_as_preference","title":"Store object conversion preference — save_return_as_preference","text":"Save (load) ‘return_as’ conversion preference optional config file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_return_as_preference.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store object conversion preference — save_return_as_preference","text":"","code":"save_return_as_preference(   value = c(\"asis\", \"array\", \"matrix\", \"data.frame\", \"data.table\", \"tibble\") )  load_return_as_preference()  get_return_as_preference()  set_return_as_preference(   value = c(\"asis\", \"array\", \"matrix\", \"data.frame\", \"data.table\", \"tibble\") )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_return_as_preference.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store object conversion preference — save_return_as_preference","text":"value character variable one six permitted values","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_return_as_preference.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store object conversion preference — save_return_as_preference","text":"setter, TRUE returned invisibly function invoked side effect storing value. either getter, character value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_return_as_preference.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Store object conversion preference — save_return_as_preference","text":"tiledb_array object can set preference conversion retrieved object. preference can also enconded configuration file R (version 4.0.0 later) allows user- package specific configuration files.  helper functions sets retrieve value, respectively, retrieve cached value package environment set package load. Note value must one ‘asis’ (default), ‘array’, ‘matrix’‘data.frame’, ‘data.table’ ‘tibble’. latter two require corresponding package installed.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/save_return_as_preference.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Store object conversion preference — save_return_as_preference","text":"function requires R version 4.0.0 later utilise per-user config directory accessor function. older R versions, please set attribute directly creating tiledb_array object, via return_as() method.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-character-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a schema from a URI character value — schema,character-method","title":"Return a schema from a URI character value — schema,character-method","text":"Return schema URI character value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-character-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a schema from a URI character value — schema,character-method","text":"","code":"# S4 method for class 'character' schema(object, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-character-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a schema from a URI character value — schema,character-method","text":"object character variable URI ... Extra parameters ‘enckey’, encryption key","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-character-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a schema from a URI character value — schema,character-method","text":"scheme object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a schema from a tiledb_array object — schema,tiledb_array-method","title":"Return a schema from a tiledb_array object — schema,tiledb_array-method","text":"Return schema tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a schema from a tiledb_array object — schema,tiledb_array-method","text":"","code":"# S4 method for class 'tiledb_array' schema(object, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a schema from a tiledb_array object — schema,tiledb_array-method","text":"object tiledb array object ... Extra parameter function signature, currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a schema from a tiledb_array object — schema,tiledb_array-method","text":"scheme object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_dense-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the tiledb_dense array tiledb_schema object — schema,tiledb_dense-method","title":"Returns the tiledb_dense array tiledb_schema object — schema,tiledb_dense-method","text":"Returns tiledb_dense array tiledb_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_dense-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the tiledb_dense array tiledb_schema object — schema,tiledb_dense-method","text":"","code":"# S4 method for tiledb_dense schema(object, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_dense-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the tiledb_dense array tiledb_schema object — schema,tiledb_dense-method","text":"object tiledb_dense array object ... Extra parameter method signature, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_dense-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the tiledb_dense array tiledb_schema object — schema,tiledb_dense-method","text":"tiledb_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_sparse-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a schema from a sparse array — schema,tiledb_sparse-method","title":"Return a schema from a sparse array — schema,tiledb_sparse-method","text":"Return schema sparse array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_sparse-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a schema from a sparse array — schema,tiledb_sparse-method","text":"","code":"# S4 method for tiledb_sparse schema(object, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_sparse-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a schema from a sparse array — schema,tiledb_sparse-method","text":"object sparse array object ... Extra parameter function signature, currently unused","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/schema-tiledb_sparse-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a schema from a sparse array — schema,tiledb_sparse-method","text":"scheme object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_points-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set selected_points return values for the array — selected_points<-","title":"Set selected_points return values for the array — selected_points<-","text":"tiledb_array object can range selection dimension attribute. methods sets selection value ‘selected_points’ list (one element per dimension) two-column matrices row describes one pair minimum maximum values. Alternatively, list can named names providing match corresponding dimension.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_points-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set selected_points return values for the array — selected_points<-","text":"","code":"selected_points(x) <- value  # S4 method for class 'tiledb_array' selected_points(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_points-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set selected_points return values for the array — selected_points<-","text":"x tiledb_array object value list vectors list element ‘’ corresponds dimension attribute ‘’.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_points-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set selected_points return values for the array — selected_points<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_points-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve selected_points values for the array — selected_points","title":"Retrieve selected_points values for the array — selected_points","text":"tiledb_array object can range selection dimension attribute. methods returns selection value ‘selected_points’ returns list (one element per dimension) vectors row describes one selected points. Alternatively, list can named names providing match corresponding dimension.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_points-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve selected_points values for the array — selected_points","text":"","code":"selected_points(object)  # S4 method for class 'tiledb_array' selected_points(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_points-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve selected_points values for the array — selected_points","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_points-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve selected_points values for the array — selected_points","text":"list can contain vector dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_ranges-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set selected_ranges return values for the array — selected_ranges<-","title":"Set selected_ranges return values for the array — selected_ranges<-","text":"tiledb_array object can range selection dimension attribute. methods sets selection value ‘selected_ranges’ list (one element per dimension) two-column matrices row describes one pair minimum maximum values. Alternatively, list can named names providing match corresponding dimension.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_ranges-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set selected_ranges return values for the array — selected_ranges<-","text":"","code":"selected_ranges(x) <- value  # S4 method for class 'tiledb_array' selected_ranges(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_ranges-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set selected_ranges return values for the array — selected_ranges<-","text":"x tiledb_array object value list two-column matrices list element ‘’ corresponds dimension attribute ‘’. matrices can contain rows row contains minimum maximum value range.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_ranges-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set selected_ranges return values for the array — selected_ranges<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_ranges-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve selected_ranges values for the array — selected_ranges","title":"Retrieve selected_ranges values for the array — selected_ranges","text":"tiledb_array object can range selection dimension attribute. methods returns selection value ‘selected_ranges’ returns list (one element per dimension) two-column matrices row describes one pair minimum maximum values. Alternatively, list can named names providing match corresponding dimension.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_ranges-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve selected_ranges values for the array — selected_ranges","text":"","code":"selected_ranges(object)  # S4 method for class 'tiledb_array' selected_ranges(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_ranges-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve selected_ranges values for the array — selected_ranges","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/selected_ranges-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve selected_ranges values for the array — selected_ranges","text":"list can contain matrix dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a tiledb_array object — show,tiledb_array-method","title":"Prints a tiledb_array object — show,tiledb_array-method","text":"Prints tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a tiledb_array object — show,tiledb_array-method","text":"","code":"# S4 method for class 'tiledb_array' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a tiledb_array object — show,tiledb_array-method","text":"object tiledb array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints an array schema object — show,tiledb_array_schema-method","title":"Prints an array schema object — show,tiledb_array_schema-method","text":"Prints array schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints an array schema object — show,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints an array schema object — show,tiledb_array_schema-method","text":"object array_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_attr-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints an attribute object — show,tiledb_attr-method","title":"Prints an attribute object — show,tiledb_attr-method","text":"Prints attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_attr-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints an attribute object — show,tiledb_attr-method","text":"","code":"# S4 method for class 'tiledb_attr' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_attr-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints an attribute object — show,tiledb_attr-method","text":"object attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_config-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints the config object to STDOUT — show,tiledb_config-method","title":"Prints the config object to STDOUT — show,tiledb_config-method","text":"Prints config object STDOUT","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_config-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints the config object to STDOUT — show,tiledb_config-method","text":"","code":"# S4 method for class 'tiledb_config' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_config-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints the config object to STDOUT — show,tiledb_config-method","text":"object tiledb_config object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_config-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prints the config object to STDOUT — show,tiledb_config-method","text":"","code":"cfg <- tiledb_config() show(cfg) #> Config settings: #> \"config.env_var_prefix\" : \"TILEDB_\" #> \"config.logging_format\" : \"DEFAULT\" #> \"config.logging_level\" : \"0\" #> \"filestore.buffer_size\" : \"104857600\" #> \"rest.capnp_traversal_limit\" : \"2147483648\" #> \"rest.curl.buffer_size\" : \"524288\" #> \"rest.curl.retry_errors\" : \"true\" #> \"rest.curl.verbose\" : \"false\" #> \"rest.http_compressor\" : \"any\" #> \"rest.load_enumerations_on_array_open\" : \"true\" #> \"rest.load_metadata_on_array_open\" : \"true\" #> \"rest.load_non_empty_domain_on_array_open\" : \"true\" #> \"rest.payer_namespace\" : \"\" #> \"rest.retry_count\" : \"25\" #> \"rest.retry_delay_factor\" : \"1.25\" #> \"rest.retry_http_codes\" : \"503\" #> \"rest.retry_initial_delay_ms\" : \"500\" #> \"rest.server_address\" : \"https://api.tiledb.com\" #> \"rest.server_serialization_format\" : \"CAPNP\" #> \"rest.use_refactored_array_open\" : \"true\" #> \"rest.use_refactored_array_open_and_query_submit\" : \"true\" #> \"sm.allow_separate_attribute_writes\" : \"false\" #> \"sm.allow_updates_experimental\" : \"false\" #> \"sm.check_coord_dups\" : \"true\" #> \"sm.check_coord_oob\" : \"true\" #> \"sm.check_global_order\" : \"true\" #> \"sm.compute_concurrency_level\" : \"16\" #> \"sm.consolidation.amplification\" : \"1.0\" #> \"sm.consolidation.buffer_size\" : \"50000000\" #> \"sm.consolidation.max_fragment_size\" : \"18446744073709551615\" #> \"sm.consolidation.mode\" : \"fragments\" #> \"sm.consolidation.purge_deleted_cells\" : \"false\" #> \"sm.consolidation.step_max_frags\" : \"4294967295\" #> \"sm.consolidation.step_min_frags\" : \"4294967295\" #> \"sm.consolidation.step_size_ratio\" : \"0.0\" #> \"sm.consolidation.steps\" : \"4294967295\" #> \"sm.consolidation.timestamp_end\" : \"18446744073709551615\" #> \"sm.consolidation.timestamp_start\" : \"0\" #> \"sm.dedup_coords\" : \"false\" #> \"sm.enable_signal_handlers\" : \"true\" #> \"sm.encryption_key\" : \"\" #> \"sm.encryption_type\" : \"NO_ENCRYPTION\" #> \"sm.enumerations_max_size\" : \"10485760\" #> \"sm.enumerations_max_total_size\" : \"52428800\" #> \"sm.fragment_info.preload_mbrs\" : \"false\" #> \"sm.group.timestamp_end\" : \"18446744073709551615\" #> \"sm.group.timestamp_start\" : \"0\" #> \"sm.io_concurrency_level\" : \"16\" #> \"sm.max_tile_overlap_size\" : \"314572800\" #> \"sm.mem.consolidation.buffers_weight\" : \"1\" #> \"sm.mem.consolidation.reader_weight\" : \"3\" #> \"sm.mem.consolidation.writer_weight\" : \"2\" #> \"sm.mem.malloc_trim\" : \"true\" #> \"sm.mem.reader.sparse_global_order.ratio_array_data\" : \"0.1\" #> \"sm.mem.reader.sparse_global_order.ratio_coords\" : \"0.5\" #> \"sm.mem.reader.sparse_global_order.ratio_tile_ranges\" : \"0.1\" #> \"sm.mem.reader.sparse_unordered_with_dups.ratio_array_data\" : \"0.1\" #> \"sm.mem.reader.sparse_unordered_with_dups.ratio_coords\" : \"0.5\" #> \"sm.mem.reader.sparse_unordered_with_dups.ratio_tile_ranges\" : \"0.1\" #> \"sm.mem.tile_upper_memory_limit\" : \"1073741824\" #> \"sm.mem.total_budget\" : \"10737418240\" #> \"sm.memory_budget\" : \"5368709120\" #> \"sm.memory_budget_var\" : \"10737418240\" #> \"sm.merge_overlapping_ranges_experimental\" : \"true\" #> \"sm.partial_tile_offsets_loading\" : \"false\" #> \"sm.query.dense.qc_coords_mode\" : \"false\" #> \"sm.query.dense.reader\" : \"refactored\" #> \"sm.query.sparse_global_order.reader\" : \"refactored\" #> \"sm.query.sparse_unordered_with_dups.reader\" : \"refactored\" #> \"sm.read_range_oob\" : \"warn\" #> \"sm.skip_checksum_validation\" : \"false\" #> \"sm.skip_est_size_partitioning\" : \"false\" #> \"sm.skip_unary_partitioning_budget_check\" : \"false\" #> \"sm.vacuum.mode\" : \"fragments\" #> \"sm.var_offsets.bitsize\" : \"64\" #> \"sm.var_offsets.extra_element\" : \"false\" #> \"sm.var_offsets.mode\" : \"bytes\" #> \"ssl.ca_file\" : \"\" #> \"ssl.ca_path\" : \"\" #> \"ssl.verify\" : \"true\" #> \"vfs.azure.blob_endpoint\" : \"\" #> \"vfs.azure.block_list_block_size\" : \"5242880\" #> \"vfs.azure.max_parallel_ops\" : \"16\" #> \"vfs.azure.max_retries\" : \"5\" #> \"vfs.azure.max_retry_delay_ms\" : \"60000\" #> \"vfs.azure.retry_delay_ms\" : \"800\" #> \"vfs.azure.storage_account_key\" : \"\" #> \"vfs.azure.storage_account_name\" : \"\" #> \"vfs.azure.storage_sas_token\" : \"\" #> \"vfs.azure.use_block_list_upload\" : \"true\" #> \"vfs.file.posix_directory_permissions\" : \"755\" #> \"vfs.file.posix_file_permissions\" : \"644\" #> \"vfs.gcs.endpoint\" : \"\" #> \"vfs.gcs.impersonate_service_account\" : \"\" #> \"vfs.gcs.max_direct_upload_size\" : \"10737418240\" #> \"vfs.gcs.max_parallel_ops\" : \"16\" #> \"vfs.gcs.multi_part_size\" : \"5242880\" #> \"vfs.gcs.project_id\" : \"\" #> \"vfs.gcs.request_timeout_ms\" : \"3000\" #> \"vfs.gcs.service_account_key\" : \"\" #> \"vfs.gcs.use_multi_part_upload\" : \"true\" #> \"vfs.gcs.workload_identity_configuration\" : \"\" #> \"vfs.hdfs.kerb_ticket_cache_path\" : \"\" #> \"vfs.hdfs.name_node_uri\" : \"\" #> \"vfs.hdfs.username\" : \"\" #> \"vfs.max_batch_size\" : \"104857600\" #> \"vfs.min_batch_gap\" : \"512000\" #> \"vfs.min_batch_size\" : \"20971520\" #> \"vfs.min_parallel_size\" : \"10485760\" #> \"vfs.read_ahead_cache_size\" : \"10485760\" #> \"vfs.read_ahead_size\" : \"102400\" #> \"vfs.read_logging_mode\" : \"\" #> \"vfs.s3.aws_access_key_id\" : \"\" #> \"vfs.s3.aws_external_id\" : \"\" #> \"vfs.s3.aws_load_frequency\" : \"\" #> \"vfs.s3.aws_role_arn\" : \"\" #> \"vfs.s3.aws_secret_access_key\" : \"\" #> \"vfs.s3.aws_session_name\" : \"\" #> \"vfs.s3.aws_session_token\" : \"\" #> \"vfs.s3.bucket_canned_acl\" : \"NOT_SET\" #> \"vfs.s3.ca_file\" : \"\" #> \"vfs.s3.ca_path\" : \"\" #> \"vfs.s3.config_source\" : \"auto\" #> \"vfs.s3.connect_max_tries\" : \"5\" #> \"vfs.s3.connect_scale_factor\" : \"25\" #> \"vfs.s3.connect_timeout_ms\" : \"10800\" #> \"vfs.s3.endpoint_override\" : \"\" #> \"vfs.s3.install_sigpipe_handler\" : \"true\" #> \"vfs.s3.logging_level\" : \"Off\" #> \"vfs.s3.max_parallel_ops\" : \"16\" #> \"vfs.s3.multipart_part_size\" : \"5242880\" #> \"vfs.s3.no_sign_request\" : \"false\" #> \"vfs.s3.object_canned_acl\" : \"NOT_SET\" #> \"vfs.s3.proxy_host\" : \"\" #> \"vfs.s3.proxy_password\" : \"\" #> \"vfs.s3.proxy_port\" : \"0\" #> \"vfs.s3.proxy_scheme\" : \"http\" #> \"vfs.s3.proxy_username\" : \"\" #> \"vfs.s3.region\" : \"us-east-1\" #> \"vfs.s3.request_timeout_ms\" : \"3000\" #> \"vfs.s3.requester_pays\" : \"false\" #> \"vfs.s3.scheme\" : \"https\" #> \"vfs.s3.skip_init\" : \"false\" #> \"vfs.s3.sse\" : \"\" #> \"vfs.s3.sse_kms_key_id\" : \"\" #> \"vfs.s3.storage_class\" : \"NOT_SET\" #> \"vfs.s3.use_multipart_upload\" : \"true\" #> \"vfs.s3.use_virtual_addressing\" : \"true\" #> \"vfs.s3.verify_ssl\" : \"true\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_dense-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a tiledb_dense array object — show,tiledb_dense-method","title":"Prints a tiledb_dense array object — show,tiledb_dense-method","text":"Prints tiledb_dense array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_dense-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a tiledb_dense array object — show,tiledb_dense-method","text":"","code":"# S4 method for tiledb_dense show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_dense-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a tiledb_dense array object — show,tiledb_dense-method","text":"object tiledb_dense array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_dim-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a dimension object — show,tiledb_dim-method","title":"Prints a dimension object — show,tiledb_dim-method","text":"Prints dimension object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_dim-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a dimension object — show,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_dim-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a dimension object — show,tiledb_dim-method","text":"object dimension object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_domain-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a domain object — show,tiledb_domain-method","title":"Prints a domain object — show,tiledb_domain-method","text":"Prints domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_domain-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a domain object — show,tiledb_domain-method","text":"","code":"# S4 method for class 'tiledb_domain' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_domain-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a domain object — show,tiledb_domain-method","text":"object domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_filter-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a filter object — show,tiledb_filter-method","title":"Prints a filter object — show,tiledb_filter-method","text":"Prints filter object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_filter-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a filter object — show,tiledb_filter-method","text":"","code":"# S4 method for class 'tiledb_filter' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_filter-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a filter object — show,tiledb_filter-method","text":"object filter object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_filter_list-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a filter_list object — show,tiledb_filter_list-method","title":"Prints a filter_list object — show,tiledb_filter_list-method","text":"Prints filter_list object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_filter_list-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a filter_list object — show,tiledb_filter_list-method","text":"","code":"# S4 method for class 'tiledb_filter_list' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_filter_list-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a filter_list object — show,tiledb_filter_list-method","text":"object filter_list object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_group-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the TileDB Group object to STDOUT — show,tiledb_group-method","title":"Display the TileDB Group object to STDOUT — show,tiledb_group-method","text":"Display TileDB Group object STDOUT","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_group-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the TileDB Group object to STDOUT — show,tiledb_group-method","text":"","code":"# S4 method for class 'tiledb_group' show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_group-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display the TileDB Group object to STDOUT — show,tiledb_group-method","text":"object tiledb_group object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_sparse-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints a tiledb_sparse array object — show,tiledb_sparse-method","title":"Prints a tiledb_sparse array object — show,tiledb_sparse-method","text":"Prints tiledb_sparse array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_sparse-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints a tiledb_sparse array object — show,tiledb_sparse-method","text":"","code":"# S4 method for tiledb_sparse show(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/show-tiledb_sparse-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints a tiledb_sparse array object — show,tiledb_sparse-method","text":"object tiledb_sparse array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/statusBatched.html","id":null,"dir":"Reference","previous_headings":"","what":"Return ‘batched’ status — statusBatched","title":"Return ‘batched’ status — statusBatched","text":"Batched queries return initial result set even incomplete. normal retrieval process loop place complete (potentially large) result set, function return result (may part larger result set) allowing user assemble part.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/statusBatched.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return ‘batched’ status — statusBatched","text":"","code":"statusBatched(obj)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/statusBatched.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return ‘batched’ status — statusBatched","text":"obj list object returned createBatched","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/statusBatched.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return ‘batched’ status — statusBatched","text":"Query status character variable","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/strings_as_factors-set-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Set strings_as_factors return toggle — strings_as_factors<-","title":"Set strings_as_factors return toggle — strings_as_factors<-","text":"tiledb_array object containing character column can converted factors variables. methods sets selection value ‘strings_as_factors’.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/strings_as_factors-set-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set strings_as_factors return toggle — strings_as_factors<-","text":"","code":"strings_as_factors(x) <- value  # S4 method for class 'tiledb_array' strings_as_factors(x) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/strings_as_factors-set-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set strings_as_factors return toggle — strings_as_factors<-","text":"x tiledb_array object value logical value selection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/strings_as_factors-set-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set strings_as_factors return toggle — strings_as_factors<-","text":"modified tiledb_array array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/strings_as_factors-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve strings_as_factors conversion toggle — strings_as_factors","title":"Retrieve strings_as_factors conversion toggle — strings_as_factors","text":"tiledb_array object containing character column can converted factors variables. methods returns selection value ‘strings_as_factors’.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/strings_as_factors-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve strings_as_factors conversion toggle — strings_as_factors","text":"","code":"strings_as_factors(object)  # S4 method for class 'tiledb_array' strings_as_factors(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/strings_as_factors-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve strings_as_factors conversion toggle — strings_as_factors","text":"object tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/strings_as_factors-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve strings_as_factors conversion toggle — strings_as_factors","text":"logical value indicating whether strings_as_factors return selected","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_array-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a TileDB array, allowing for specific subset ranges. — [,tiledb_array,ANY-method","title":"Returns a TileDB array, allowing for specific subset ranges. — [,tiledb_array,ANY-method","text":"Heterogenous domains supported, including timestamps characters.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_array-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a TileDB array, allowing for specific subset ranges. — [,tiledb_array,ANY-method","text":"","code":"# S4 method for class 'tiledb_array,ANY' x[i, j, ..., drop = FALSE]"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_array-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a TileDB array, allowing for specific subset ranges. — [,tiledb_array,ANY-method","text":"x tiledb_array object optional row index expression can list case minimum maximum list element determine range; multiple list elements can used supply multiple ranges. j optional column index expression can list case minimum maximum list element determine range; multiple list elements can used supply multiple ranges. ... Extra parameters method signature, currently unused. drop Optional logical switch drop dimensions, default FALSE, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_array-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a TileDB array, allowing for specific subset ranges. — [,tiledb_array,ANY-method","text":"resulting elements selected format","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_array-ANY-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns a TileDB array, allowing for specific subset ranges. — [,tiledb_array,ANY-method","text":"function may still still change; current implementation considered initial draft.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_config-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a config parameter value — [,tiledb_config,ANY-method","title":"Gets a config parameter value — [,tiledb_config,ANY-method","text":"Gets config parameter value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_config-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a config parameter value — [,tiledb_config,ANY-method","text":"","code":"# S4 method for class 'tiledb_config,ANY' x[i, j, ..., drop = FALSE]"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_config-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a config parameter value — [,tiledb_config,ANY-method","text":"x tiledb_config object parameter key string j parameter key string, currently unused. ... Extra parameter method signature, currently unused. drop Optional logical switch drop dimensions, default FALSE, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_config-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a config parameter value — [,tiledb_config,ANY-method","text":"config string value parameter exists, else NA","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_config-ANY-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gets a config parameter value — [,tiledb_config,ANY-method","text":"","code":"cfg <- tiledb_config() cfg[\"sm.tile_cache_size\"] #> NA  #> NA  cfg[\"does_not_exist\"] #> NA  #> NA"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_dense-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a dense array value — [,tiledb_dense,ANY-method","title":"Gets a dense array value — [,tiledb_dense,ANY-method","text":"Gets dense array value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_dense-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a dense array value — [,tiledb_dense,ANY-method","text":"","code":"# S4 method for tiledb_dense,ANY [(x, i, j, ..., drop = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_dense-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a dense array value — [,tiledb_dense,ANY-method","text":"x dense array object parameter key string j parameter key string, currently unused. ... Extra parameter method signature, currently unused. drop Optional logical switch drop dimensions, default FALSE, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_dense-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a dense array value — [,tiledb_dense,ANY-method","text":"element dense array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_filter_list-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the filter at given index — [,tiledb_filter_list,ANY-method","title":"Returns the filter at given index — [,tiledb_filter_list,ANY-method","text":"Returns filter given index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_filter_list-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the filter at given index — [,tiledb_filter_list,ANY-method","text":"","code":"# S4 method for class 'tiledb_filter_list,ANY' x[i, j, ..., drop = FALSE]"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_filter_list-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the filter at given index — [,tiledb_filter_list,ANY-method","text":"x tiledb_config object parameter key string j parameter key string, currently unused. ... Extra parameter method signature, currently unused. drop Optional logical switch drop dimensions, default false.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_filter_list-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the filter at given index — [,tiledb_filter_list,ANY-method","text":"object tiledb_filter","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_filter_list-ANY-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the filter at given index — [,tiledb_filter_list,ANY-method","text":"","code":"flt <- tiledb_filter(\"ZSTD\") tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 5) #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)  filter_list <- tiledb_filter_list(c(flt)) filter_list[0] #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_sparse-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets a sparse array value — [,tiledb_sparse,ANY-method","title":"Gets a sparse array value — [,tiledb_sparse,ANY-method","text":"Gets sparse array value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_sparse-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets a sparse array value — [,tiledb_sparse,ANY-method","text":"","code":"# S4 method for tiledb_sparse,ANY [(x, i, j, ..., drop = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_sparse-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gets a sparse array value — [,tiledb_sparse,ANY-method","text":"x sparse array object parameter key string j parameter key string, currently unused. ... Extra parameter method signature, currently unused. drop Optional logical switch drop dimensions, default FALSE, currently unused.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/sub-tiledb_sparse-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gets a sparse array value — [,tiledb_sparse,ANY-method","text":"element sparse array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_array-ANY-ANY-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a tiledb array value or value range — [<-,tiledb_array,ANY,ANY,ANY-method","title":"Sets a tiledb array value or value range — [<-,tiledb_array,ANY,ANY,ANY-method","text":"function assigns right-hand side object, typically data.frame something can coerced data.frame, tiledb array.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_array-ANY-ANY-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a tiledb array value or value range — [<-,tiledb_array,ANY,ANY,ANY-method","text":"","code":"# S4 method for class 'tiledb_array,ANY,ANY,ANY' x[i, j, ...] <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_array-ANY-ANY-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a tiledb array value or value range — [<-,tiledb_array,ANY,ANY,ANY-method","text":"x sparse dense TileDB array object parameter row index j parameter column index ... Extra parameter method signature, currently unused. value value assigned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_array-ANY-ANY-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets a tiledb array value or value range — [<-,tiledb_array,ANY,ANY,ANY-method","text":"modified object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_array-ANY-ANY-ANY-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sets a tiledb array value or value range — [<-,tiledb_array,ANY,ANY,ANY-method","text":"sparse matrices, row column indices can either supplied part left-hand side object, part data.frame provided approrpiate column names. function may still still change; current implementation considered initial draft.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_array-ANY-ANY-ANY-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets a tiledb array value or value range — [<-,tiledb_array,ANY,ANY,ANY-method","text":"","code":"if (FALSE) { # \\dontrun{ uri <- \"quickstart_sparse\"      ## as created by the other example arr <- tiledb_array(uri)        ## open array df <- arr[]                     ## read current content ## First approach: matching data.frame with appriate row and column newdf <- data.frame(rows=c(1,2,2), cols=c(1,3,4), a=df$a+100) ## Second approach: supply indices explicitly arr[c(1,2), c(1,3)] <- c(42,43) ## two values arr[2, 4] <- 88                 ## or just one } # }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_config-ANY-ANY-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a config parameter value — [<-,tiledb_config,ANY,ANY,ANY-method","title":"Sets a config parameter value — [<-,tiledb_config,ANY,ANY,ANY-method","text":"Sets config parameter value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_config-ANY-ANY-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a config parameter value — [<-,tiledb_config,ANY,ANY,ANY-method","text":"","code":"# S4 method for class 'tiledb_config,ANY,ANY,ANY' x[i, j] <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_config-ANY-ANY-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a config parameter value — [<-,tiledb_config,ANY,ANY,ANY-method","text":"x tiledb_config object parameter key string j parameter key string value value set, converted stringa","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_config-ANY-ANY-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets a config parameter value — [<-,tiledb_config,ANY,ANY,ANY-method","text":"updated tiledb_config object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_config-ANY-ANY-ANY-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets a config parameter value — [<-,tiledb_config,ANY,ANY,ANY-method","text":"","code":"cfg <- tiledb_config() cfg[\"sm.tile_cache_size\"] #> NA  #> NA   # set tile cache size to custom value cfg[\"sm.tile_cache_size\"] <- 100 cfg[\"sm.tile_cache_size\"] #> sm.tile_cache_size  #>              \"100\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_dense-ANY-ANY-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a dense array value — [<-,tiledb_dense,ANY,ANY,ANY-method","title":"Sets a dense array value — [<-,tiledb_dense,ANY,ANY,ANY-method","text":"Sets dense array value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_dense-ANY-ANY-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a dense array value — [<-,tiledb_dense,ANY,ANY,ANY-method","text":"","code":"# S4 method for tiledb_dense,ANY,ANY,ANY [(x, i, j, ...) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_dense-ANY-ANY-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a dense array value — [<-,tiledb_dense,ANY,ANY,ANY-method","text":"x dense array object parameter key string j parameter key string, currently unused. ... Extra parameter method signature, currently unused. value value assigned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_dense-ANY-ANY-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets a dense array value — [<-,tiledb_dense,ANY,ANY,ANY-method","text":"modified object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_sparse-ANY-ANY-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a sparse array value — [<-,tiledb_sparse,ANY,ANY,ANY-method","title":"Sets a sparse array value — [<-,tiledb_sparse,ANY,ANY,ANY-method","text":"Sets sparse array value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_sparse-ANY-ANY-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a sparse array value — [<-,tiledb_sparse,ANY,ANY,ANY-method","text":"","code":"# S4 method for tiledb_sparse,ANY,ANY,ANY [(x, i, j, ...) <- value"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_sparse-ANY-ANY-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a sparse array value — [<-,tiledb_sparse,ANY,ANY,ANY-method","text":"x sparse array object parameter key string j parameter key string, currently unused. ... Extra parameter method signature, currently unused. value value assigned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/subset-tiledb_sparse-ANY-ANY-ANY-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets a sparse array value — [<-,tiledb_sparse,ANY,ANY,ANY-method","text":"modified object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_collect-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect the query results to finalize piped expression — tdb_collect,tiledb_array-method","title":"Collect the query results to finalize piped expression — tdb_collect,tiledb_array-method","text":"Collect query results finalize piped expression","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_collect-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect the query results to finalize piped expression — tdb_collect,tiledb_array-method","text":"","code":"# S4 method for class 'tiledb_array' tdb_collect(x, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_collect-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect the query results to finalize piped expression — tdb_collect,tiledb_array-method","text":"x tiledb_array object first argument, permitting piping ... Ignored","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_collect-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect the query results to finalize piped expression — tdb_collect,tiledb_array-method","text":"object returning tiledb_array query (type can set via return preference mechanism, see help \"[\" accessor)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_filter-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter from array for query via logical conditions — tdb_filter,tiledb_array-method","title":"Filter from array for query via logical conditions — tdb_filter,tiledb_array-method","text":"Filter array query via logical conditions","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_filter-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter from array for query via logical conditions — tdb_filter,tiledb_array-method","text":"","code":"# S4 method for class 'tiledb_array' tdb_filter(x, ..., strict = TRUE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_filter-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter from array for query via logical conditions — tdb_filter,tiledb_array-method","text":"x tiledb_array object first argument, permitting piping ... One expressions parsed query_condition objects strict boolean toogle , set, errors non-existing attribute selected filtered , defaults 'TRUE'; 'FALSE' warning shown execution proceeds.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_filter-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter from array for query via logical conditions — tdb_filter,tiledb_array-method","text":"tiledb_array object, permitting piping","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_select-tiledb_array-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Select attributes from array for query — tdb_select,tiledb_array-method","title":"Select attributes from array for query — tdb_select,tiledb_array-method","text":"Select attributes array query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_select-tiledb_array-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select attributes from array for query — tdb_select,tiledb_array-method","text":"","code":"# S4 method for class 'tiledb_array' tdb_select(x, ...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_select-tiledb_array-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select attributes from array for query — tdb_select,tiledb_array-method","text":"x tiledb_array object first argument, permitting piping ... One attributes query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tdb_select-tiledb_array-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select attributes from array for query — tdb_select,tiledb_array-method","text":"tiledb_array object, permitting piping","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tile-tiledb_dim-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the tiledb_dim tile extent — tile,tiledb_dim-method","title":"Return the tiledb_dim tile extent — tile,tiledb_dim-method","text":"Return tiledb_dim tile extent","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tile-tiledb_dim-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the tiledb_dim tile extent — tile,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' tile(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tile-tiledb_dim-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the tiledb_dim tile extent — tile,tiledb_dim-method","text":"object tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tile-tiledb_dim-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the tiledb_dim tile extent — tile,tiledb_dim-method","text":"scalar tile extent","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tile-tiledb_dim-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the tiledb_dim tile extent — tile,tiledb_dim-method","text":"","code":"d1 <- tiledb_dim(\"d1\", domain = c(5L, 10L), tile = 2L) tile(d1) #> [1] 2"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tile_order-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the tile layout string associated with the tiledb_array_schema — tile_order,tiledb_array_schema-method","title":"Returns the tile layout string associated with the tiledb_array_schema — tile_order,tiledb_array_schema-method","text":"Returns tile layout string associated tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tile_order-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the tile layout string associated with the tiledb_array_schema — tile_order,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' tile_order(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tile_order-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the tile layout string associated with the tiledb_array_schema — tile_order,tiledb_array_schema-method","text":"object tiledb object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tiledb - Interface to the TileDB Storage Manager API — tiledb-package","title":"tiledb - Interface to the TileDB Storage Manager API — tiledb-package","text":"efficient multi-dimensional array management system 'TileDB' introduces novel -disk format can effectively store reads. features excellent compression, efficient parallel /O system also scales well, bindings multiple languages.","code":""},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tiledb - Interface to the TileDB Storage Manager API — tiledb-package","text":"Maintainer: Dirk Eddelbuettel dirk@tiledb.com Authors: TileDB, Inc. [copyright holder]","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB Array — tiledb_array-class","title":"An S4 class for a TileDB Array — tiledb_array-class","text":"class replaces earlier (now removed) tiledb_dense tiledb_sparse provides equivalent functionality based refactored implementation utilising newer TileDB features.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB Array — tiledb_array-class","text":"ctx TileDB context object uri character despription array URI .sparse logical value whether array sparse attrs character vector select particular column ‘attributes’; default empty character vector implying ‘’ columns, special value NA_character_ opposite effect selects ‘none’. extended logical value, defaults TRUE, indicating whether index columns returned well. selected_ranges optional list matrices matrix describes (min,max) pair ranges dimension selected_points optional list vectors vector describes selected points dimension query_layout optional character value datetimes_as_int64 logical value encryption_key character value query_condition Query Condition object timestamp_start POSIXct datetime variable inclusive interval start timestamp_end POSIXct datetime variable inclusive interval start return_as character value desired tiledb_array conversion, permitted values ‘asis’ (default, returning list columns), ‘array’, ‘matrix’,‘data.frame’, ‘data.table’ ‘tibble’, ‘arrow_table’ ‘arrow’ (last two synomyms); note ‘data.table’, ‘tibble’ ‘arrow’ require respective packages installed. query_statistics logical value, defaults ‘FALSE’; ‘TRUE’ query statistics returned (JSON string) via attribute ‘query_statistics’ return object. sil optional internal list object schema information, used parsing queries. dumpbuffers optional character variable directory name (relative /dev/shm) writing results buffers (internal use / testing) buffers optional list full pathnames shared memory buffers read data strings_as_factors optional logical convert character columns factor type keep_open optional logical close read write ptr External pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_array object backed by a persisted tiledb array uri — tiledb_array","title":"Constructs a tiledb_array object backed by a persisted tiledb array uri — tiledb_array","text":"tiledb_array returns new object. class experimental.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_array object backed by a persisted tiledb array uri — tiledb_array","text":"","code":"tiledb_array(   uri,   query_type = c(\"READ\", \"WRITE\"),   is.sparse = NA,   attrs = character(),   extended = TRUE,   selected_ranges = list(),   selected_points = list(),   query_layout = character(),   datetimes_as_int64 = FALSE,   encryption_key = character(),   query_condition = new(\"tiledb_query_condition\"),   timestamp_start = as.POSIXct(double(), origin = \"1970-01-01\"),   timestamp_end = as.POSIXct(double(), origin = \"1970-01-01\"),   return_as = get_return_as_preference(),   query_statistics = FALSE,   strings_as_factors = getOption(\"stringsAsFactors\", FALSE),   keep_open = FALSE,   sil = list(),   dumpbuffers = character(),   buffers = list(),   ctx = tiledb_get_context(),   as.data.frame = FALSE )  tiledb_dense(...)  tiledb_sparse(...)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_array object backed by a persisted tiledb array uri — tiledb_array","text":"uri uri path tiledb dense array query_type optionally loads array \"READ\" \"WRITE\" modes. .sparse optional logical switch, defaults \"NA\" letting array determine attrs optional character vector select attributes, default empty implying selected, special value NA_character_ opposite effect implies attributes returned. extended optional logical switch selecting wide ‘data.frame’ format, defaults TRUE selected_ranges optional list matrices matrix describes (min,max) pair ranges selected dimension selected_points optional list vectors vector describes points selected dimension query_layout optional value TileDB query layout, defaults empty character variable indicating special layout set datetimes_as_int64 optional logical value selecting date datetime value representation ‘raw’ integer64 Date, POSIXct nanotime objects. encryption_key optional character value AES-256 encryption key case array written encryption. query_condition optional tiledb_query_condition object, default uninitialized without condition; functionality requires TileDB 2.3.0 later timestamp_start optional POSIXct Datetime value determining inclusive time point array openened. fragments written earlier considered. timestamp_end optional POSIXct Datetime value determining inclusive time point array openened. fragments written earlier later considered. return_as optional character value desired tiledb_array conversion, permitted values ‘asis’ (default, returning list columns), ‘array’, ‘matrix’,‘data.frame’, ‘data.table’, ‘tibble’, ‘arrow_table’, ‘arrow’ (alias ‘arrow_table’; ‘data.table’, ‘tibble’ ‘arrow’ require respective packages installed. existing .* arguments take precedent . query_statistics optional logical value, defaults ‘FALSE’; ‘TRUE’ query statistics returned (JSON string) via attribute ‘query_statistics’ return object. strings_as_factors optional logical convert character columns factor type; defaults value getOption(\"stringsAsFactors\", FALSE). keep_open optional logical close read write sil optional list, default empty store schema information query objects parsed. dumpbuffers optional character variable directory name (relative /dev/shm) writing results buffers (internal use / testing) buffers optional list full pathnames shared memory buffers read data ctx optional tiledb_ctx .data.frame optional deprecated alternative return_as=\"data.frame\" deprecated removed, still used one BioConductor package; argument removed updated package released. ... Used pass-tiledb_dense tiledb_sparse aliasing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a tiledb_array object backed by a persisted tiledb array uri — tiledb_array","text":"tiledb_array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_apply_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an aggregate query on the given (sparse) array and attribute — tiledb_array_apply_aggregate","title":"Run an aggregate query on the given (sparse) array and attribute — tiledb_array_apply_aggregate","text":"dense arrays, use tiledb_query_apply_aggregate setting appropriate subarray.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_apply_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an aggregate query on the given (sparse) array and attribute — tiledb_array_apply_aggregate","text":"","code":"tiledb_array_apply_aggregate(   array,   attrname,   operation = c(\"Count\", \"NullCount\", \"Min\", \"Max\", \"Mean\", \"Sum\"),   nullable = TRUE )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_apply_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an aggregate query on the given (sparse) array and attribute — tiledb_array_apply_aggregate","text":"array TileDB Array object attrname name attribute operation name aggregation operation nullable boolean toggle whether attribute nullable","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_apply_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an aggregate query on the given (sparse) array and attribute — tiledb_array_apply_aggregate","text":"value aggregation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_close.html","id":null,"dir":"Reference","previous_headings":"","what":"Close a TileDB Array — tiledb_array_close","title":"Close a TileDB Array — tiledb_array_close","text":"Close TileDB Array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_close.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close a TileDB Array — tiledb_array_close","text":"","code":"tiledb_array_close(arr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_close.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close a TileDB Array — tiledb_array_close","text":"arr TileDB Array object example returned tiledb_array()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_close.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Close a TileDB Array — tiledb_array_close","text":"TileDB Array object closed","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a new TileDB array given an input schema. — tiledb_array_create","title":"Creates a new TileDB array given an input schema. — tiledb_array_create","text":"Creates new TileDB array given input schema.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a new TileDB array given an input schema. — tiledb_array_create","text":"","code":"tiledb_array_create(uri, schema, encryption_key)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a new TileDB array given an input schema. — tiledb_array_create","text":"uri URI specifying path create TileDB array object schema tiledb_array_schema object encryption_key optional character value AES-256 encryption key case array encryption.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a new TileDB array given an input schema. — tiledb_array_create","text":"","code":"if (FALSE) { # \\dontrun{ pth <- tempdir() dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 10L), type = \"INT32\"))) sch <- tiledb_array_schema(dom, attrs = c(tiledb_attr(\"a1\", type = \"INT32\"))) tiledb_array_create(pth, sch) tiledb_object_type(pth) } # }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_delete_fragments.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete fragments written between the start and end times given — tiledb_array_delete_fragments","title":"Delete fragments written between the start and end times given — tiledb_array_delete_fragments","text":"Delete fragments written start end times given","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_delete_fragments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete fragments written between the start and end times given — tiledb_array_delete_fragments","text":"","code":"tiledb_array_delete_fragments(   arr,   ts_start,   ts_end,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_delete_fragments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete fragments written between the start and end times given — tiledb_array_delete_fragments","text":"arr TileDB Array object example returned tiledb_array() ts_start Datetime object converted millisecond granularity ts_end Datetime object converted millisecond granularity ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_delete_fragments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete fragments written between the start and end times given — tiledb_array_delete_fragments","text":"boolean indicating success","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_delete_fragments_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete fragments written given by their URIs — tiledb_array_delete_fragments_list","title":"Delete fragments written given by their URIs — tiledb_array_delete_fragments_list","text":"Delete fragments written given URIs","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_delete_fragments_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete fragments written given by their URIs — tiledb_array_delete_fragments_list","text":"","code":"tiledb_array_delete_fragments_list(arr, fragments, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_delete_fragments_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete fragments written given by their URIs — tiledb_array_delete_fragments_list","text":"arr TileDB Array object example returned tiledb_array() fragments character vector fragment URIs ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_delete_fragments_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete fragments written given by their URIs — tiledb_array_delete_fragments_list","text":"boolean indicating success","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_get_non_empty_domain_from_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the non-empty domain from a TileDB Array by index — tiledb_array_get_non_empty_domain_from_index","title":"Get the non-empty domain from a TileDB Array by index — tiledb_array_get_non_empty_domain_from_index","text":"functions works fixed- variable-sized dimensions switches internally.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_get_non_empty_domain_from_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the non-empty domain from a TileDB Array by index — tiledb_array_get_non_empty_domain_from_index","text":"","code":"tiledb_array_get_non_empty_domain_from_index(arr, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_get_non_empty_domain_from_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the non-empty domain from a TileDB Array by index — tiledb_array_get_non_empty_domain_from_index","text":"arr TileDB Array idx integer index one number dimensions","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_get_non_empty_domain_from_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the non-empty domain from a TileDB Array by index — tiledb_array_get_non_empty_domain_from_index","text":"two-element object returned describing domain selected dimension; either numeric vector case fixed-size fixed-sized dimensions, characer vector variable-sized one.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_get_non_empty_domain_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the non-empty domain from a TileDB Array by name — tiledb_array_get_non_empty_domain_from_name","title":"Get the non-empty domain from a TileDB Array by name — tiledb_array_get_non_empty_domain_from_name","text":"functions works fixed- variable-sized dimensions switches internally.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_get_non_empty_domain_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the non-empty domain from a TileDB Array by name — tiledb_array_get_non_empty_domain_from_name","text":"","code":"tiledb_array_get_non_empty_domain_from_name(arr, name)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_get_non_empty_domain_from_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the non-empty domain from a TileDB Array by name — tiledb_array_get_non_empty_domain_from_name","text":"arr TileDB Array name character variable dimension name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_get_non_empty_domain_from_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the non-empty domain from a TileDB Array by name — tiledb_array_get_non_empty_domain_from_name","text":"two-element object returned describing domain selected dimension; either numeric vector case fixed-size fixed-sized dimensions, characer vector variable-sized one.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_has_enumeration.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Enumeration (aka Factor aka Dictionary) — tiledb_array_has_enumeration","title":"Check for Enumeration (aka Factor aka Dictionary) — tiledb_array_has_enumeration","text":"Check Enumeration (aka Factor aka Dictionary)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_has_enumeration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Enumeration (aka Factor aka Dictionary) — tiledb_array_has_enumeration","text":"","code":"tiledb_array_has_enumeration(arr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_has_enumeration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Enumeration (aka Factor aka Dictionary) — tiledb_array_has_enumeration","text":"arr TileDB Array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_has_enumeration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Enumeration (aka Factor aka Dictionary) — tiledb_array_has_enumeration","text":"boolean indicating array homogeneous domains","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_heterogeneous.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Heterogeneous Domain — tiledb_array_is_heterogeneous","title":"Check for Heterogeneous Domain — tiledb_array_is_heterogeneous","text":"Check Heterogeneous Domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_heterogeneous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Heterogeneous Domain — tiledb_array_is_heterogeneous","text":"","code":"tiledb_array_is_heterogeneous(arr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_heterogeneous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Heterogeneous Domain — tiledb_array_is_heterogeneous","text":"arr TileDB Array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_heterogeneous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Heterogeneous Domain — tiledb_array_is_heterogeneous","text":"boolean indicating array heterogenous domains","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_homogeneous.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Homogeneous Domain — tiledb_array_is_homogeneous","title":"Check for Homogeneous Domain — tiledb_array_is_homogeneous","text":"Check Homogeneous Domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_homogeneous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Homogeneous Domain — tiledb_array_is_homogeneous","text":"","code":"tiledb_array_is_homogeneous(arr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_homogeneous.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Homogeneous Domain — tiledb_array_is_homogeneous","text":"arr TileDB Array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_homogeneous.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Homogeneous Domain — tiledb_array_is_homogeneous","text":"boolean indicating array homogeneous domains","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if TileDB Array is open — tiledb_array_is_open","title":"Test if TileDB Array is open — tiledb_array_is_open","text":"Test TileDB Array open","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if TileDB Array is open — tiledb_array_is_open","text":"","code":"tiledb_array_is_open(arr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if TileDB Array is open — tiledb_array_is_open","text":"arr TileDB Array object example returned tiledb_array()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_is_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if TileDB Array is open — tiledb_array_is_open","text":"boolean indicating whether TileDB Array object open","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a TileDB Array — tiledb_array_open","title":"Open a TileDB Array — tiledb_array_open","text":"Open TileDB Array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a TileDB Array — tiledb_array_open","text":"","code":"tiledb_array_open(   arr,   type = if (tiledb_version(TRUE) >= \"2.12.0\") c(\"READ\", \"WRITE\", \"DELETE\",     \"MODIFY_EXCLUSIVE\") else c(\"READ\", \"WRITE\") )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a TileDB Array — tiledb_array_open","text":"arr TileDB Array object example returned tiledb_array() type character value must either ‘READ’, ‘WRITE’ (TileDB 2.12.0 later) ‘DELETE’ ‘MODIFY_EXCLUSIVE’","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a TileDB Array — tiledb_array_open","text":"TileDB Array object opened reading writing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_open_at.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a TileDB Array at Timestamp — tiledb_array_open_at","title":"Open a TileDB Array at Timestamp — tiledb_array_open_at","text":"Open TileDB Array Timestamp","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_open_at.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a TileDB Array at Timestamp — tiledb_array_open_at","text":"","code":"tiledb_array_open_at(arr, type = c(\"READ\", \"WRITE\"), timestamp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_open_at.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a TileDB Array at Timestamp — tiledb_array_open_at","text":"arr TileDB Array object example returned tiledb_array() type character value must either ‘READ’ ‘WRITE’ timestamp Datetime object converted millisecond granularity","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_open_at.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a TileDB Array at Timestamp — tiledb_array_open_at","text":"TileDB Array object opened reading writing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for the TileDB array schema — tiledb_array_schema-class","title":"An S4 class for the TileDB array schema — tiledb_array_schema-class","text":"S4 class TileDB array schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for the TileDB array schema — tiledb_array_schema-class","text":"ptr external pointer underlying implementation arrptr optional external pointer underlying array, NULL missing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_array_schema object — tiledb_array_schema","title":"Constructs a tiledb_array_schema object — tiledb_array_schema","text":"Constructs tiledb_array_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_array_schema object — tiledb_array_schema","text":"","code":"tiledb_array_schema(   domain,   attrs,   cell_order = \"COL_MAJOR\",   tile_order = \"COL_MAJOR\",   sparse = FALSE,   coords_filter_list = NULL,   offsets_filter_list = NULL,   validity_filter_list = NULL,   capacity = 10000L,   allows_dups = FALSE,   enumerations = NULL,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_array_schema object — tiledb_array_schema","text":"domain tiledb_domain object attrs list one tiledb_attr objects cell_order (default \"COL_MAJOR\") tile_order (default \"COL_MAJOR\") sparse (default FALSE) coords_filter_list (optional) offsets_filter_list (optional) validity_filter_list (optional) capacity (optional) allows_dups (optional, requires ‘sparse’ TRUE) enumerations (optional) named list enumerations ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs a tiledb_array_schema object — tiledb_array_schema","text":"","code":"schema <- tiledb_array_schema(               dom = tiledb_domain(                         dims = c(tiledb_dim(\"rows\", c(1L, 4L), 4L, \"INT32\"),                                  tiledb_dim(\"cols\", c(1L, 4L), 4L, \"INT32\"))),               attrs = c(tiledb_attr(\"a\", type = \"INT32\")),               cell_order = \"COL_MAJOR\",               tile_order = \"COL_MAJOR\",               sparse = FALSE) schema #> tiledb_array_schema( #>     domain=tiledb_domain(c( #>         tiledb_dim(name=\"rows\", domain=c(1L,4L), tile=4L, type=\"INT32\"), #>         tiledb_dim(name=\"cols\", domain=c(1L,4L), tile=4L, type=\"INT32\") #>     )), #>     attrs=c( #>         tiledb_attr(name=\"a\", type=\"INT32\", ncells=1, nullable=FALSE) #>     ), #>     cell_order=\"COL_MAJOR\", tile_order=\"COL_MAJOR\", capacity=10000, sparse=FALSE, allows_dups=FALSE, #>     coords_filter_list=tiledb_filter_list(c(tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",-1))), #>     offsets_filter_list=tiledb_filter_list(c(tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",-1))), #>     validity_filter_list=tiledb_filter_list(c(tiledb_filter_set_option(tiledb_filter(\"RLE\"),\"COMPRESSION_LEVEL\",-1))) #> )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the schema for correctness — schema_check","title":"Check the schema for correctness — schema_check","text":"Returns tiledb_array schema correctness","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the schema for correctness — schema_check","text":"","code":"schema_check(object)  # S4 method for class 'tiledb_array_schema' schema_check(object)  check(object)  # S4 method for class 'tiledb_array_schema' check(object)  tiledb_array_schema_check(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the schema for correctness — schema_check","text":"object array_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the schema for correctness — schema_check","text":"boolean value TRUE returned correct schema; incorrect schema error condition triggered.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB ArraySchemaEvolution object — tiledb_array_schema_evolution-class","title":"An S4 class for a TileDB ArraySchemaEvolution object — tiledb_array_schema_evolution-class","text":"S4 class TileDB ArraySchemaEvolution object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB ArraySchemaEvolution object — tiledb_array_schema_evolution-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a 'tiledb_array_schema_evolution' object — tiledb_array_schema_evolution","title":"Creates a 'tiledb_array_schema_evolution' object — tiledb_array_schema_evolution","text":"Creates 'tiledb_array_schema_evolution' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a 'tiledb_array_schema_evolution' object — tiledb_array_schema_evolution","text":"","code":"tiledb_array_schema_evolution(ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a 'tiledb_array_schema_evolution' object — tiledb_array_schema_evolution","text":"ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a 'tiledb_array_schema_evolution' object — tiledb_array_schema_evolution","text":"'array_schema_evolution' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an Attribute to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_attribute","title":"Add an Attribute to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_attribute","text":"Add Attribute TileDB Array Schema Evolution object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an Attribute to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_attribute","text":"","code":"tiledb_array_schema_evolution_add_attribute(object, attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an Attribute to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_attribute","text":"object TileDB 'array_schema_evolution' object attr TileDB attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an Attribute to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_attribute","text":"modified 'array_schema_evolution' object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_enumeration.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an Enumeration to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_enumeration","title":"Add an Enumeration to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_enumeration","text":"Add Enumeration TileDB Array Schema Evolution object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_enumeration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an Enumeration to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_enumeration","text":"","code":"tiledb_array_schema_evolution_add_enumeration(   object,   name,   enums,   ordered = FALSE,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_enumeration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an Enumeration to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_enumeration","text":"object TileDB 'array_schema_evolution' object name character value name Enumeration enums character vector ordered (optional) boolean switch whether enumeration ordered ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_enumeration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an Enumeration to a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_add_enumeration","text":"modified 'array_schema_evolution' object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_enumeration_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Evolve an Array Schema by adding an empty Enumeration — tiledb_array_schema_evolution_add_enumeration_empty","title":"Evolve an Array Schema by adding an empty Enumeration — tiledb_array_schema_evolution_add_enumeration_empty","text":"Evolve Array Schema adding empty Enumeration","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_enumeration_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evolve an Array Schema by adding an empty Enumeration — tiledb_array_schema_evolution_add_enumeration_empty","text":"","code":"tiledb_array_schema_evolution_add_enumeration_empty(   ase,   enum_name,   type_str = \"ASCII\",   cell_val_num = NA_integer_,   ordered = FALSE,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_add_enumeration_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evolve an Array Schema by adding an empty Enumeration — tiledb_array_schema_evolution_add_enumeration_empty","text":"ase ArraySchemaEvolution object enum_name character value Enumeration name type_str character value TileDB type, defaults ‘ASCII’ cell_val_num integer number values per cell, defaults NA_integer_ flag NA value use character values ordered logical value indicating standard factor (FALSE, default) ordered (TRUE) ctx Optional tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_array_evolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Evolve an Array Schema — tiledb_array_schema_evolution_array_evolve","title":"Evolve an Array Schema — tiledb_array_schema_evolution_array_evolve","text":"Evolve Array Schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_array_evolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evolve an Array Schema — tiledb_array_schema_evolution_array_evolve","text":"","code":"tiledb_array_schema_evolution_array_evolve(object, uri)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_array_evolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evolve an Array Schema — tiledb_array_schema_evolution_array_evolve","text":"object TileDB 'array_schema_evolution' object uri character variable URI","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_array_evolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evolve an Array Schema — tiledb_array_schema_evolution_array_evolve","text":"modified 'array_schema_evolution' object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_drop_attribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop an attribute given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_attribute","title":"Drop an attribute given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_attribute","text":"Drop attribute given name TileDB Array Schema Evolution object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_drop_attribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop an attribute given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_attribute","text":"","code":"tiledb_array_schema_evolution_drop_attribute(object, attrname)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_drop_attribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop an attribute given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_attribute","text":"object TileDB 'array_schema_evolution' object attrname character variable attribute name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_drop_attribute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop an attribute given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_attribute","text":"modified 'array_schema_evolution' object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_drop_enumeration.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop an Enumeration given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_enumeration","title":"Drop an Enumeration given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_enumeration","text":"Drop Enumeration given name TileDB Array Schema Evolution object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_drop_enumeration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop an Enumeration given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_enumeration","text":"","code":"tiledb_array_schema_evolution_drop_enumeration(object, attrname)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_drop_enumeration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop an Enumeration given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_enumeration","text":"object TileDB 'array_schema_evolution' object attrname character variable attribute name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_drop_enumeration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop an Enumeration given by name from a TileDB Array Schema Evolution object — tiledb_array_schema_evolution_drop_enumeration","text":"modified 'array_schema_evolution' object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_expand_current_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand an the Current Domain of an Array via Array Schema Evolution — tiledb_array_schema_evolution_expand_current_domain","title":"Expand an the Current Domain of an Array via Array Schema Evolution — tiledb_array_schema_evolution_expand_current_domain","text":"Expand Current Domain Array via Array Schema Evolution","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_expand_current_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand an the Current Domain of an Array via Array Schema Evolution — tiledb_array_schema_evolution_expand_current_domain","text":"","code":"tiledb_array_schema_evolution_expand_current_domain(ase, cd)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_expand_current_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand an the Current Domain of an Array via Array Schema Evolution — tiledb_array_schema_evolution_expand_current_domain","text":"ase ArraySchemaEvolution object cd CurrentDomain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_expand_current_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand an the Current Domain of an Array via Array Schema Evolution — tiledb_array_schema_evolution_expand_current_domain","text":"modified ArraySchemaEvolution object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_extend_enumeration.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend an Evolution via Array Schema Evolution — tiledb_array_schema_evolution_extend_enumeration","title":"Extend an Evolution via Array Schema Evolution — tiledb_array_schema_evolution_extend_enumeration","text":"Extend Evolution via Array Schema Evolution","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_extend_enumeration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend an Evolution via Array Schema Evolution — tiledb_array_schema_evolution_extend_enumeration","text":"","code":"tiledb_array_schema_evolution_extend_enumeration(   ase,   array,   enum_name,   new_values,   nullable = FALSE,   ordered = FALSE,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_extend_enumeration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend an Evolution via Array Schema Evolution — tiledb_array_schema_evolution_extend_enumeration","text":"ase ArraySchemaEvolution object array TileDB Array object enum_name character value Enumeration name new_values character vector new Enumeration values nullable logical value indicating Enumeration can contain missing values (default FALSE) ordered logical value indicating standard factor (FALSE, default) ordered (TRUE) ctx Optional tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_evolution_extend_enumeration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend an Evolution via Array Schema Evolution — tiledb_array_schema_evolution_extend_enumeration","text":"modified ArraySchemaEvolution object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_allows_dups.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns logical value whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups","title":"Returns logical value whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups","text":"Returns logical value whether array schema allows duplicate values . valid sparse arrays.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_allows_dups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns logical value whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups","text":"","code":"allows_dups(x)  # S4 method for class 'tiledb_array_schema' allows_dups(x)  tiledb_array_schema_get_allows_dups(x)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_allows_dups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns logical value whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups","text":"x tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_allows_dups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns logical value whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups","text":"logical value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_capacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve schema capacity (for sparse fragments) — capacity","title":"Retrieve schema capacity (for sparse fragments) — capacity","text":"Returns tiledb_array schema tile capacity sparse fragments.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_capacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve schema capacity (for sparse fragments) — capacity","text":"","code":"capacity(object)  # S4 method for class 'tiledb_array_schema' capacity(object)  tiledb_array_schema_get_capacity(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_capacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve schema capacity (for sparse fragments) — capacity","text":"object array_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_capacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve schema capacity (for sparse fragments) — capacity","text":"tile capacity value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_current_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Current Domain of an Array Schema — tiledb_array_schema_get_current_domain","title":"Get the Current Domain of an Array Schema — tiledb_array_schema_get_current_domain","text":"Note 'CurrendDomain' object may empty.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_current_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Current Domain of an Array Schema — tiledb_array_schema_get_current_domain","text":"","code":"tiledb_array_schema_get_current_domain(schema, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_current_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Current Domain of an Array Schema — tiledb_array_schema_get_current_domain","text":"schema Array Schema ctx Optional tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_get_current_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Current Domain of an Array Schema — tiledb_array_schema_get_current_domain","text":"'CurrendDomain' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_allows_dups.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets toggle whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups<-","title":"Sets toggle whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups<-","text":"Sets toggle whether array schema allows duplicate values . valid sparse arrays.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_allows_dups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets toggle whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups<-","text":"","code":"allows_dups(x) <- value  # S4 method for class 'tiledb_array_schema' allows_dups(x) <- value  tiledb_array_schema_set_allows_dups(x, value)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_allows_dups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets toggle whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups<-","text":"x tiledb_array_schema value logical value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_allows_dups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets toggle whether the array schema allows duplicate values or not. This is only valid for sparse arrays. — allows_dups<-","text":"tiledb_array_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_capacity.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets the schema capacity (for sparse fragments) — capacity<-","title":"Sets the schema capacity (for sparse fragments) — capacity<-","text":"Sets tiledb_array schema tile capacity sparse fragments.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_capacity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets the schema capacity (for sparse fragments) — capacity<-","text":"","code":"capacity(x) <- value  # S4 method for class 'tiledb_array_schema' capacity(x) <- value  tiledb_array_schema_set_capacity(x, value)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_capacity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets the schema capacity (for sparse fragments) — capacity<-","text":"x array_schema object value integer numeric value new tile capacity","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_capacity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sets the schema capacity (for sparse fragments) — capacity<-","text":"modified array_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_coords_filter_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a Filter List for Coordinate of a TileDB Schema — tiledb_array_schema_set_coords_filter_list","title":"Set a Filter List for Coordinate of a TileDB Schema — tiledb_array_schema_set_coords_filter_list","text":"Set Filter List Coordinate TileDB Schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_coords_filter_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a Filter List for Coordinate of a TileDB Schema — tiledb_array_schema_set_coords_filter_list","text":"","code":"tiledb_array_schema_set_coords_filter_list(sch, fl)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_coords_filter_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a Filter List for Coordinate of a TileDB Schema — tiledb_array_schema_set_coords_filter_list","text":"sch TileDB Array Schema object fl TileDB Filter List object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_coords_filter_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a Filter List for Coordinate of a TileDB Schema — tiledb_array_schema_set_coords_filter_list","text":"modified Array Schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_current_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a Current Domain of an Array Schema — tiledb_array_schema_set_current_domain","title":"Set a Current Domain of an Array Schema — tiledb_array_schema_set_current_domain","text":"Set Current Domain Array Schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_current_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a Current Domain of an Array Schema — tiledb_array_schema_set_current_domain","text":"","code":"tiledb_array_schema_set_current_domain(schema, cd, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_current_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a Current Domain of an Array Schema — tiledb_array_schema_set_current_domain","text":"schema Array Schema cd CurrendDomain object ctx Optional tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_current_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a Current Domain of an Array Schema — tiledb_array_schema_set_current_domain","text":"Nothing returned function (error, occur reported)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_enumeration_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an empty Enumeration to a Schema — tiledb_array_schema_set_enumeration_empty","title":"Add an empty Enumeration to a Schema — tiledb_array_schema_set_enumeration_empty","text":"Add empty Enumeration Schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_enumeration_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an empty Enumeration to a Schema — tiledb_array_schema_set_enumeration_empty","text":"","code":"tiledb_array_schema_set_enumeration_empty(   schema,   attr,   enum_name,   type_str = \"ASCII\",   cell_val_num = NA_integer_,   ordered = FALSE,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_enumeration_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an empty Enumeration to a Schema — tiledb_array_schema_set_enumeration_empty","text":"schema Array Schema attr Attribute empty Enumeration added enum_name character value Enumeration name type_str character value TileDB type, defaults ‘ASCII’ cell_val_num integer number values per cell, defaults NA_integer_ flag NA value use character values ordered logical value indicated standard factor (FALSE, default) ordered (TRUE) ctx Optional tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_offsets_filter_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a Filter List for Variable-Sized Offsets of a TileDB Schema — tiledb_array_schema_set_offsets_filter_list","title":"Set a Filter List for Variable-Sized Offsets of a TileDB Schema — tiledb_array_schema_set_offsets_filter_list","text":"Set Filter List Variable-Sized Offsets TileDB Schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_offsets_filter_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a Filter List for Variable-Sized Offsets of a TileDB Schema — tiledb_array_schema_set_offsets_filter_list","text":"","code":"tiledb_array_schema_set_offsets_filter_list(sch, fl)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_offsets_filter_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a Filter List for Variable-Sized Offsets of a TileDB Schema — tiledb_array_schema_set_offsets_filter_list","text":"sch TileDB Array Schema object fl TileDB Filter List object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_offsets_filter_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a Filter List for Variable-Sized Offsets of a TileDB Schema — tiledb_array_schema_set_offsets_filter_list","text":"modified Array Schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_validity_filter_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a Filter List for Validity of a TileDB Schema — tiledb_array_schema_set_validity_filter_list","title":"Set a Filter List for Validity of a TileDB Schema — tiledb_array_schema_set_validity_filter_list","text":"Set Filter List Validity TileDB Schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_validity_filter_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a Filter List for Validity of a TileDB Schema — tiledb_array_schema_set_validity_filter_list","text":"","code":"tiledb_array_schema_set_validity_filter_list(sch, fl)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_validity_filter_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a Filter List for Validity of a TileDB Schema — tiledb_array_schema_set_validity_filter_list","text":"sch TileDB Array Schema object fl TileDB Filter List object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_set_validity_filter_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a Filter List for Validity of a TileDB Schema — tiledb_array_schema_set_validity_filter_list","text":"modified Array Schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the version of the array schema — tiledb_array_schema_version","title":"Check the version of the array schema — tiledb_array_schema_version","text":"Returns (internal) version tiledb_array schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the version of the array schema — tiledb_array_schema_version","text":"","code":"tiledb_array_schema_version(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the version of the array schema — tiledb_array_schema_version","text":"object array_schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_schema_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the version of the array schema — tiledb_array_schema_version","text":"integer value describing internal schema format version","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_upgrade_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Upgrade an Array to the current TileDB Array Schema Format — tiledb_array_upgrade_version","title":"Upgrade an Array to the current TileDB Array Schema Format — tiledb_array_upgrade_version","text":"Upgrade Array current TileDB Array Schema Format","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_upgrade_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upgrade an Array to the current TileDB Array Schema Format — tiledb_array_upgrade_version","text":"","code":"tiledb_array_upgrade_version(array, config = NULL, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_upgrade_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upgrade an Array to the current TileDB Array Schema Format — tiledb_array_upgrade_version","text":"array TileDB Array object config TileDB Configuration (optional, default NULL) ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_array_upgrade_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upgrade an Array to the current TileDB Array Schema Format — tiledb_array_upgrade_version","text":"Nothing returned function invoked side effect","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_arrow_array_ptr.html","id":null,"dir":"Reference","previous_headings":"","what":"(Deprecated) Allocate (or Release) Arrow Array and Schema Pointers — tiledb_arrow_array_ptr","title":"(Deprecated) Allocate (or Release) Arrow Array and Schema Pointers — tiledb_arrow_array_ptr","text":"functions allocate (free) appropriate pointer objects , respectively, Arrow array schema objects. functions deprecated removed, recommended rely directly nanoarrow replacements.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_arrow_array_ptr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"(Deprecated) Allocate (or Release) Arrow Array and Schema Pointers — tiledb_arrow_array_ptr","text":"","code":"tiledb_arrow_array_ptr()  tiledb_arrow_schema_ptr()  tiledb_arrow_array_del(ptr)  tiledb_arrow_schema_del(ptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_arrow_array_ptr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"(Deprecated) Allocate (or Release) Arrow Array and Schema Pointers — tiledb_arrow_array_ptr","text":"ptr external pointer object previously allocated functions","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_arrow_array_ptr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"(Deprecated) Allocate (or Release) Arrow Array and Schema Pointers — tiledb_arrow_array_ptr","text":"allocating functions return requested pointer","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attr-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB attribute — tiledb_attr-class","title":"An S4 class for a TileDB attribute — tiledb_attr-class","text":"S4 class TileDB attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attr-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB attribute — tiledb_attr-class","text":"ptr External pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_attr object — tiledb_attr","title":"Constructs a tiledb_attr object — tiledb_attr","text":"Constructs tiledb_attr object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_attr object — tiledb_attr","text":"","code":"tiledb_attr(   name,   type,   filter_list = tiledb_filter_list(),   ncells = 1,   nullable = FALSE,   enumeration = NULL,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_attr object — tiledb_attr","text":"name dimension name / label string; missing default \"\" used. type tiledb_attr TileDB datatype string; missing user alerted required parameter. filter_list (default filter_list(\"NONE\")) optional tiledb_filter_list object ncells (default 1) number cells, use NA signal variable length nullable (default FALSE) logical switch whether attribute can missing values enumeration (default NULL) character vector dictionary values ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a tiledb_attr object — tiledb_attr","text":"tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs a tiledb_attr object — tiledb_attr","text":"","code":"flt <- tiledb_filter_list(list(tiledb_filter(\"GZIP\"))) attr <- tiledb_attr(name = \"a1\", type = \"INT32\",                     filter_list = flt) attr #> tiledb_attr(name=\"a1\", type=\"INT32\", ncells=1, nullable=FALSE, filter_list=tiledb_filter_list(c(tiledb_filter_set_option(tiledb_filter(\"GZIP\"),\"COMPRESSION_LEVEL\",-1))))"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the TileDB Attribute cell size — tiledb_attribute_get_cell_size","title":"Get the TileDB Attribute cell size — tiledb_attribute_get_cell_size","text":"Get TileDB Attribute cell size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the TileDB Attribute cell size — tiledb_attribute_get_cell_size","text":"","code":"tiledb_attribute_get_cell_size(attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the TileDB Attribute cell size — tiledb_attribute_get_cell_size","text":"attr TileDB Attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the TileDB Attribute cell size — tiledb_attribute_get_cell_size","text":"numeric value cell size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_val_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of scalar values per attribute cell — cell_val_num","title":"Return the number of scalar values per attribute cell — cell_val_num","text":"Return number scalar values per attribute cell","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_val_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of scalar values per attribute cell — cell_val_num","text":"","code":"cell_val_num(object)  # S4 method for class 'tiledb_attr' cell_val_num(object)  tiledb_attribute_get_cell_val_num(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_val_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of scalar values per attribute cell — cell_val_num","text":"object tiledb_attr object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_val_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of scalar values per attribute cell — cell_val_num","text":"integer number cells","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_cell_val_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the number of scalar values per attribute cell — cell_val_num","text":"","code":"a1 <- tiledb_attr(\"a1\", type = \"FLOAT64\", ncells = 1) cell_val_num(a1) #> [1] 1"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_enumeration.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the TileDB Attribute Enumeration — tiledb_attribute_get_enumeration","title":"Get the TileDB Attribute Enumeration — tiledb_attribute_get_enumeration","text":"Get TileDB Attribute Enumeration","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_enumeration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the TileDB Attribute Enumeration — tiledb_attribute_get_enumeration","text":"","code":"tiledb_attribute_get_enumeration(attr, arr, ctx = tiledb_get_context())  tiledb_attribute_get_enumeration_ptr(attr, arrptr, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_enumeration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the TileDB Attribute Enumeration — tiledb_attribute_get_enumeration","text":"attr TileDB Attribute object arr Tiledb Array object ctx Tiledb Context object (optional) arrptr Tiledb Array object pointer","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_enumeration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the TileDB Attribute Enumeration — tiledb_attribute_get_enumeration","text":"character vector enumeration (length zero none)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_fill_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the fill value for a TileDB Attribute — tiledb_attribute_get_fill_value","title":"Get the fill value for a TileDB Attribute — tiledb_attribute_get_fill_value","text":"Get fill value TileDB Attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_fill_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the fill value for a TileDB Attribute — tiledb_attribute_get_fill_value","text":"","code":"tiledb_attribute_get_fill_value(attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_fill_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the fill value for a TileDB Attribute — tiledb_attribute_get_fill_value","text":"attr TileDB Attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_fill_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the fill value for a TileDB Attribute — tiledb_attribute_get_fill_value","text":"fill value attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_nullable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the TileDB Attribute Nullable flag value — tiledb_attribute_get_nullable","title":"Get the TileDB Attribute Nullable flag value — tiledb_attribute_get_nullable","text":"Get TileDB Attribute Nullable flag value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_nullable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the TileDB Attribute Nullable flag value — tiledb_attribute_get_nullable","text":"","code":"tiledb_attribute_get_nullable(attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_nullable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the TileDB Attribute Nullable flag value — tiledb_attribute_get_nullable","text":"attr TileDB Attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_get_nullable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the TileDB Attribute Nullable flag value — tiledb_attribute_get_nullable","text":"boolean value ‘Nullable’ status","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_has_enumeration.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if TileDB Attribute has an Enumeration — tiledb_attribute_has_enumeration","title":"Test if TileDB Attribute has an Enumeration — tiledb_attribute_has_enumeration","text":"Test TileDB Attribute Enumeration","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_has_enumeration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if TileDB Attribute has an Enumeration — tiledb_attribute_has_enumeration","text":"","code":"tiledb_attribute_has_enumeration(attr, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_has_enumeration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if TileDB Attribute has an Enumeration — tiledb_attribute_has_enumeration","text":"attr TileDB Attribute object ctx Tiledb Context object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_has_enumeration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if TileDB Attribute has an Enumeration — tiledb_attribute_has_enumeration","text":"logical value indicating attribute enumeration","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_is_ordered_enumeration_ptr.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if TileDB Attribute Enumeration is Ordered — tiledb_attribute_is_ordered_enumeration_ptr","title":"Check if TileDB Attribute Enumeration is Ordered — tiledb_attribute_is_ordered_enumeration_ptr","text":"Check TileDB Attribute Enumeration Ordered","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_is_ordered_enumeration_ptr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if TileDB Attribute Enumeration is Ordered — tiledb_attribute_is_ordered_enumeration_ptr","text":"","code":"tiledb_attribute_is_ordered_enumeration_ptr(   attr,   arrptr,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_is_ordered_enumeration_ptr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if TileDB Attribute Enumeration is Ordered — tiledb_attribute_is_ordered_enumeration_ptr","text":"attr Tiledb Array object arrptr Tiledb Array object pointer ctx Tiledb Context object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_is_ordered_enumeration_ptr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if TileDB Attribute Enumeration is Ordered — tiledb_attribute_is_ordered_enumeration_ptr","text":"character vector enumeration (length zero none)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_is_variable_sized.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether TileDB Attribute is variable-sized — tiledb_attribute_is_variable_sized","title":"Check whether TileDB Attribute is variable-sized — tiledb_attribute_is_variable_sized","text":"Check whether TileDB Attribute variable-sized","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_is_variable_sized.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether TileDB Attribute is variable-sized — tiledb_attribute_is_variable_sized","text":"","code":"tiledb_attribute_is_variable_sized(attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_is_variable_sized.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether TileDB Attribute is variable-sized — tiledb_attribute_is_variable_sized","text":"attr TileDB Attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_is_variable_sized.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether TileDB Attribute is variable-sized — tiledb_attribute_is_variable_sized","text":"boolean value indicating variable-size ","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_cell_val_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the number of scalar values per attribute cell — cell_val_num<-","title":"Set the number of scalar values per attribute cell — cell_val_num<-","text":"Set number scalar values per attribute cell","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_cell_val_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the number of scalar values per attribute cell — cell_val_num<-","text":"","code":"cell_val_num(x) <- value  # S4 method for class 'tiledb_attr' cell_val_num(x) <- value  tiledb_attribute_set_cell_val_num(x, value)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_cell_val_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the number of scalar values per attribute cell — cell_val_num<-","text":"x TileDB Attribute object value integer value number cells","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_cell_val_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the number of scalar values per attribute cell — cell_val_num<-","text":"modified attribute returned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_enumeration_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a TileDB Attribute Enumeration Name — tiledb_attribute_set_enumeration_name","title":"Set a TileDB Attribute Enumeration Name — tiledb_attribute_set_enumeration_name","text":"Set TileDB Attribute Enumeration Name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_enumeration_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a TileDB Attribute Enumeration Name — tiledb_attribute_set_enumeration_name","text":"","code":"tiledb_attribute_set_enumeration_name(   attr,   enum_name,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_enumeration_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a TileDB Attribute Enumeration Name — tiledb_attribute_set_enumeration_name","text":"attr TileDB Attribute object enum_name character value enumeration value ctx Tiledb Context object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_enumeration_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a TileDB Attribute Enumeration Name — tiledb_attribute_set_enumeration_name","text":"modified TileDB Attribute object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_fill_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the fill value for a TileDB Attribute — tiledb_attribute_set_fill_value","title":"Set the fill value for a TileDB Attribute — tiledb_attribute_set_fill_value","text":"Set fill value TileDB Attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_fill_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the fill value for a TileDB Attribute — tiledb_attribute_set_fill_value","text":"","code":"tiledb_attribute_set_fill_value(attr, value)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_fill_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the fill value for a TileDB Attribute — tiledb_attribute_set_fill_value","text":"attr TileDB Attribute object value fill value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_fill_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the fill value for a TileDB Attribute — tiledb_attribute_set_fill_value","text":"NULL returned invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_nullable.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the TileDB Attribute Nullable flags — tiledb_attribute_set_nullable","title":"Set the TileDB Attribute Nullable flags — tiledb_attribute_set_nullable","text":"Set TileDB Attribute Nullable flags","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_nullable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the TileDB Attribute Nullable flags — tiledb_attribute_set_nullable","text":"","code":"tiledb_attribute_set_nullable(attr, flag)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_nullable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the TileDB Attribute Nullable flags — tiledb_attribute_set_nullable","text":"attr TileDB Attribute object flag boolean flag turn ‘Nullable’ ","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_attribute_set_nullable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the TileDB Attribute Nullable flags — tiledb_attribute_set_nullable","text":"Nothing returned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB configuration — tiledb_config-class","title":"An S4 class for a TileDB configuration — tiledb_config-class","text":"S4 class TileDB configuration","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB configuration — tiledb_config-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a tiledb_config object — tiledb_config","title":"Creates a tiledb_config object — tiledb_config","text":"Note actually setting persistent values, (altered) config object needs used create (update) tiledb_ctx object. Similarly, check whether values set, one use config method tiledb_ctx object. Examples ctx <- tiledb_ctx(limitTileDBCores()) use updated configuration values create context object, cfg <- config(ctx) retrieve .","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a tiledb_config object — tiledb_config","text":"","code":"tiledb_config(config = NA_character_)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a tiledb_config object — tiledb_config","text":"config (optional) character vector config parameter names, values","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a tiledb_config object — tiledb_config","text":"tiledb_config object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a tiledb_config object — tiledb_config","text":"","code":"cfg <- tiledb_config() cfg[\"sm.tile_cache_size\"] #> NA  #> NA   # set tile cache size to custom value cfg <- tiledb_config(c(\"sm.tile_cache_size\" = \"100\")) cfg[\"sm.tile_cache_size\"] #> sm.tile_cache_size  #>              \"100\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_as_built_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the 'AsBuilt' JSON string — tiledb_config_as_built_json","title":"Return the 'AsBuilt' JSON string — tiledb_config_as_built_json","text":"Return 'AsBuilt' JSON string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_as_built_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the 'AsBuilt' JSON string — tiledb_config_as_built_json","text":"","code":"tiledb_config_as_built_json()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_as_built_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the 'AsBuilt' JSON string — tiledb_config_as_built_json","text":"JSON string containing 'AsBuilt' information","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_as_built_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the 'AsBuilt' JSON string — tiledb_config_as_built_json","text":"","code":"if (tiledb_version(TRUE) > \"2.17\")     txt <- tiledb::tiledb_config_as_built_json() ## now eg either one of ##   sapply(jsonlite::fromJSON(txt)$as_built$parameters$storage_backends, \\(x) x[[1]]) ##   sapply(RcppSimdJson::fparse(txt)$as_built$parameters$storage_backends, \\(x) x[[1]]) ## will return a named vector such as ##   c(azure = FALSE, gcs = FALSE, hdfs = FALSE, s3 = TRUE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_as_built_show.html","id":null,"dir":"Reference","previous_headings":"","what":"Display the 'AsBuilt' JSON string — tiledb_config_as_built_show","title":"Display the 'AsBuilt' JSON string — tiledb_config_as_built_show","text":"Display 'AsBuilt' JSON string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_as_built_show.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display the 'AsBuilt' JSON string — tiledb_config_as_built_show","text":"","code":"tiledb_config_as_built_show()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_as_built_show.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display the 'AsBuilt' JSON string — tiledb_config_as_built_show","text":"Nothing returned side-effect 'AsBuilt' string displayed","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a saved tiledb_config file from disk — tiledb_config_load","title":"Load a saved tiledb_config file from disk — tiledb_config_load","text":"Load saved tiledb_config file disk","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a saved tiledb_config file from disk — tiledb_config_load","text":"","code":"tiledb_config_load(path)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a saved tiledb_config file from disk — tiledb_config_load","text":"path path config file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_load.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a saved tiledb_config file from disk — tiledb_config_load","text":"","code":"tmp <- tempfile() cfg <- tiledb_config(c(\"sm.tile_cache_size\" = \"10\")) pth <- tiledb_config_save(cfg, tmp) cfg <- tiledb_config_load(pth) cfg[\"sm.tile_cache_size\"] #> sm.tile_cache_size  #>               \"10\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a tiledb_config object ot a local text file — tiledb_config_save","title":"Save a tiledb_config object ot a local text file — tiledb_config_save","text":"Save tiledb_config object ot local text file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a tiledb_config object ot a local text file — tiledb_config_save","text":"","code":"tiledb_config_save(config, path)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a tiledb_config object ot a local text file — tiledb_config_save","text":"config tiledb_config object path path config file created","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a tiledb_config object ot a local text file — tiledb_config_save","text":"path created config file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a tiledb_config object ot a local text file — tiledb_config_save","text":"","code":"tmp <- tempfile() cfg <- tiledb_config(c(\"sm.tile_cache_size\" = \"10\")) pth <- tiledb_config_save(cfg, tmp)  cat(readLines(pth), sep = \"\\n\") #> config.env_var_prefix TILEDB_ #> config.logging_format DEFAULT #> config.logging_level 0 #> filestore.buffer_size 104857600 #> rest.capnp_traversal_limit 2147483648 #> rest.curl.buffer_size 524288 #> rest.curl.retry_errors true #> rest.curl.verbose false #> rest.http_compressor any #> rest.load_enumerations_on_array_open true #> rest.load_metadata_on_array_open true #> rest.load_non_empty_domain_on_array_open true #> rest.retry_count 25 #> rest.retry_delay_factor 1.25 #> rest.retry_http_codes 503 #> rest.retry_initial_delay_ms 500 #> rest.server_address https://api.tiledb.com #> rest.server_serialization_format CAPNP #> rest.use_refactored_array_open true #> rest.use_refactored_array_open_and_query_submit true #> sm.allow_separate_attribute_writes false #> sm.allow_updates_experimental false #> sm.check_coord_dups true #> sm.check_coord_oob true #> sm.check_global_order true #> sm.compute_concurrency_level 16 #> sm.consolidation.amplification 1.0 #> sm.consolidation.buffer_size 50000000 #> sm.consolidation.max_fragment_size 18446744073709551615 #> sm.consolidation.mode fragments #> sm.consolidation.purge_deleted_cells false #> sm.consolidation.step_max_frags 4294967295 #> sm.consolidation.step_min_frags 4294967295 #> sm.consolidation.step_size_ratio 0.0 #> sm.consolidation.steps 4294967295 #> sm.consolidation.timestamp_end 18446744073709551615 #> sm.consolidation.timestamp_start 0 #> sm.dedup_coords false #> sm.enable_signal_handlers true #> sm.encryption_type NO_ENCRYPTION #> sm.enumerations_max_size 10485760 #> sm.enumerations_max_total_size 52428800 #> sm.fragment_info.preload_mbrs false #> sm.group.timestamp_end 18446744073709551615 #> sm.group.timestamp_start 0 #> sm.io_concurrency_level 16 #> sm.max_tile_overlap_size 314572800 #> sm.mem.consolidation.buffers_weight 1 #> sm.mem.consolidation.reader_weight 3 #> sm.mem.consolidation.writer_weight 2 #> sm.mem.malloc_trim true #> sm.mem.reader.sparse_global_order.ratio_array_data 0.1 #> sm.mem.reader.sparse_global_order.ratio_coords 0.5 #> sm.mem.reader.sparse_global_order.ratio_tile_ranges 0.1 #> sm.mem.reader.sparse_unordered_with_dups.ratio_array_data 0.1 #> sm.mem.reader.sparse_unordered_with_dups.ratio_coords 0.5 #> sm.mem.reader.sparse_unordered_with_dups.ratio_tile_ranges 0.1 #> sm.mem.tile_upper_memory_limit 1073741824 #> sm.mem.total_budget 10737418240 #> sm.memory_budget 5368709120 #> sm.memory_budget_var 10737418240 #> sm.merge_overlapping_ranges_experimental true #> sm.partial_tile_offsets_loading false #> sm.query.dense.qc_coords_mode false #> sm.query.dense.reader refactored #> sm.query.sparse_global_order.reader refactored #> sm.query.sparse_unordered_with_dups.reader refactored #> sm.read_range_oob warn #> sm.skip_checksum_validation false #> sm.skip_est_size_partitioning false #> sm.skip_unary_partitioning_budget_check false #> sm.tile_cache_size 10 #> sm.vacuum.mode fragments #> sm.var_offsets.bitsize 64 #> sm.var_offsets.extra_element false #> sm.var_offsets.mode bytes #> ssl.verify true #> vfs.azure.block_list_block_size 5242880 #> vfs.azure.max_parallel_ops 16 #> vfs.azure.max_retries 5 #> vfs.azure.max_retry_delay_ms 60000 #> vfs.azure.retry_delay_ms 800 #> vfs.azure.use_block_list_upload true #> vfs.file.posix_directory_permissions 755 #> vfs.file.posix_file_permissions 644 #> vfs.gcs.max_direct_upload_size 10737418240 #> vfs.gcs.max_parallel_ops 16 #> vfs.gcs.multi_part_size 5242880 #> vfs.gcs.request_timeout_ms 3000 #> vfs.gcs.use_multi_part_upload true #> vfs.max_batch_size 104857600 #> vfs.min_batch_gap 512000 #> vfs.min_batch_size 20971520 #> vfs.min_parallel_size 10485760 #> vfs.read_ahead_cache_size 10485760 #> vfs.read_ahead_size 102400 #> vfs.s3.bucket_canned_acl NOT_SET #> vfs.s3.config_source auto #> vfs.s3.connect_max_tries 5 #> vfs.s3.connect_scale_factor 25 #> vfs.s3.connect_timeout_ms 10800 #> vfs.s3.install_sigpipe_handler true #> vfs.s3.logging_level Off #> vfs.s3.max_parallel_ops 16 #> vfs.s3.multipart_part_size 5242880 #> vfs.s3.no_sign_request false #> vfs.s3.object_canned_acl NOT_SET #> vfs.s3.proxy_port 0 #> vfs.s3.proxy_scheme http #> vfs.s3.region us-east-1 #> vfs.s3.request_timeout_ms 3000 #> vfs.s3.requester_pays false #> vfs.s3.scheme https #> vfs.s3.skip_init false #> vfs.s3.storage_class NOT_SET #> vfs.s3.use_multipart_upload true #> vfs.s3.use_virtual_addressing true #> vfs.s3.verify_ssl true"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_unset.html","id":null,"dir":"Reference","previous_headings":"","what":"Unset a TileDB Config parameter to its default value — tiledb_config_unset","title":"Unset a TileDB Config parameter to its default value — tiledb_config_unset","text":"Unset TileDB Config parameter default value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_unset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unset a TileDB Config parameter to its default value — tiledb_config_unset","text":"","code":"tiledb_config_unset(config, param)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_unset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unset a TileDB Config parameter to its default value — tiledb_config_unset","text":"config TileDB Config object param character variable parameter name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_config_unset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unset a TileDB Config parameter to its default value — tiledb_config_unset","text":"modified TileDB Config object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB context — tiledb_ctx-class","title":"An S4 class for a TileDB context — tiledb_ctx-class","text":"S4 class TileDB context","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB context — tiledb_ctx-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a tiledb_ctx object — tiledb_ctx","title":"Creates a tiledb_ctx object — tiledb_ctx","text":"Creates tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a tiledb_ctx object — tiledb_ctx","text":"","code":"tiledb_ctx(config = NULL, cached = TRUE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a tiledb_ctx object — tiledb_ctx","text":"config (optional) character vector config parameter names, values cached (optional) logical switch force new creation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a tiledb_ctx object — tiledb_ctx","text":"tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a tiledb_ctx object — tiledb_ctx","text":"","code":"# default configuration ctx <- tiledb_ctx()  # optionally set config parameters ctx <- tiledb_ctx(c(\"sm.tile_cache_size\" = \"100\"))"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_set_default_tags.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets default context tags — tiledb_ctx_set_default_tags","title":"Sets default context tags — tiledb_ctx_set_default_tags","text":"Sets default context tags","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_set_default_tags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets default context tags — tiledb_ctx_set_default_tags","text":"","code":"tiledb_ctx_set_default_tags(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_set_default_tags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets default context tags — tiledb_ctx_set_default_tags","text":"object tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_set_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a string:string ","title":"Sets a string:string ","text":"Sets string:string \"tag\" Ctx","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_set_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a string:string ","text":"","code":"tiledb_ctx_set_tag(object, key, value)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_set_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a string:string ","text":"object tiledb_ctx object key string value string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_set_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sets a string:string ","text":"","code":"ctx <- tiledb_ctx(c(\"sm.tile_cache_size\" = \"10\")) cfg <- tiledb_ctx_set_tag(ctx, \"tag\", \"value\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Return context statistics as a JSON string — tiledb_ctx_stats","title":"Return context statistics as a JSON string — tiledb_ctx_stats","text":"Return context statistics JSON string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return context statistics as a JSON string — tiledb_ctx_stats","text":"","code":"tiledb_ctx_stats(object = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return context statistics as a JSON string — tiledb_ctx_stats","text":"object tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ctx_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return context statistics as a JSON string — tiledb_ctx_stats","text":"JSON-formatted string context statistics","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB CurrentDomain object — tiledb_current_domain-class","title":"An S4 class for a TileDB CurrentDomain object — tiledb_current_domain-class","text":"S4 class TileDB CurrentDomain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB CurrentDomain object — tiledb_current_domain-class","text":"ptr external pointer underlying CurrentDomain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a tiledb_current_domain object — tiledb_current_domain","title":"Creates a tiledb_current_domain object — tiledb_current_domain","text":"Creates tiledb_current_domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a tiledb_current_domain object — tiledb_current_domain","text":"","code":"tiledb_current_domain(ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a tiledb_current_domain object — tiledb_current_domain","text":"ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a tiledb_current_domain object — tiledb_current_domain","text":"tiledb_current_domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a tiledb_current_domain object — tiledb_current_domain","text":"","code":"if (tiledb_version(TRUE) >= \"2.25.0\") {    cd <-tiledb_current_domain() }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_get_ndrectangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a tiledb_ndrectangle from a tiledb_current_domain object — tiledb_current_domain_get_ndrectangle","title":"Get a tiledb_ndrectangle from a tiledb_current_domain object — tiledb_current_domain_get_ndrectangle","text":"Get tiledb_ndrectangle tiledb_current_domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_get_ndrectangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a tiledb_ndrectangle from a tiledb_current_domain object — tiledb_current_domain_get_ndrectangle","text":"","code":"tiledb_current_domain_get_ndrectangle(cd)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_get_ndrectangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a tiledb_ndrectangle from a tiledb_current_domain object — tiledb_current_domain_get_ndrectangle","text":"cd TileDB CurrentDomain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_get_ndrectangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a tiledb_ndrectangle from a tiledb_current_domain object — tiledb_current_domain_get_ndrectangle","text":"corresponding TileDB NDRectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_get_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tiledb_current_domain data type as string — tiledb_current_domain_get_type","title":"Get tiledb_current_domain data type as string — tiledb_current_domain_get_type","text":"Get tiledb_current_domain data type string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_get_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tiledb_current_domain data type as string — tiledb_current_domain_get_type","text":"","code":"tiledb_current_domain_get_type(cd)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_get_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tiledb_current_domain data type as string — tiledb_current_domain_get_type","text":"cd TileDB CurrentDomain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_get_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tiledb_current_domain data type as string — tiledb_current_domain_get_type","text":"datatype (string) tiledb_current_domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Test tiledb_current_domain object for being empty — tiledb_current_domain_is_empty","title":"Test tiledb_current_domain object for being empty — tiledb_current_domain_is_empty","text":"Test tiledb_current_domain object empty","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test tiledb_current_domain object for being empty — tiledb_current_domain_is_empty","text":"","code":"tiledb_current_domain_is_empty(cd)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test tiledb_current_domain object for being empty — tiledb_current_domain_is_empty","text":"cd TileDB CurrentDomain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_is_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test tiledb_current_domain object for being empty — tiledb_current_domain_is_empty","text":"boolean indicating whether object empty ","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_set_ndrectangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a tiledb_ndrectangle in a tiledb_current_domain object — tiledb_current_domain_set_ndrectangle","title":"Set a tiledb_ndrectangle in a tiledb_current_domain object — tiledb_current_domain_set_ndrectangle","text":"Set tiledb_ndrectangle tiledb_current_domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_set_ndrectangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a tiledb_ndrectangle in a tiledb_current_domain object — tiledb_current_domain_set_ndrectangle","text":"","code":"tiledb_current_domain_set_ndrectangle(cd, ndr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_set_ndrectangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a tiledb_ndrectangle in a tiledb_current_domain object — tiledb_current_domain_set_ndrectangle","text":"cd TileDB CurrentDomain object ndr TileDB NDRectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_current_domain_set_ndrectangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a tiledb_ndrectangle in a tiledb_current_domain object — tiledb_current_domain_set_ndrectangle","text":"modifiled TileDB CurrendDomain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_datatype_R_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Map from TileDB type to R datatype — tiledb_datatype_R_type","title":"Map from TileDB type to R datatype — tiledb_datatype_R_type","text":"function maps TileDB types (fewer) key datatypes R. can lossy TileDB integers range (signed unsigned) 8 64 bit whereas R (signed) 32 bit values. Similarly, R 64 bit doubles whereas TileDB 32 64 bit floating point types. TileDB also character encodings, full range (NumPy) date time types.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_datatype_R_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map from TileDB type to R datatype — tiledb_datatype_R_type","text":"","code":"tiledb_datatype_R_type(datatype)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_datatype_R_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map from TileDB type to R datatype — tiledb_datatype_R_type","text":"datatype string describing one TileDB datatype","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_datatype_R_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map from TileDB type to R datatype — tiledb_datatype_R_type","text":"string describing closest match R datatype","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_delete_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a TileDB Array Metadata object given by key — tiledb_delete_metadata","title":"Delete a TileDB Array Metadata object given by key — tiledb_delete_metadata","text":"Delete TileDB Array Metadata object given key","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_delete_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a TileDB Array Metadata object given by key — tiledb_delete_metadata","text":"","code":"tiledb_delete_metadata(arr, key)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_delete_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a TileDB Array Metadata object given by key — tiledb_delete_metadata","text":"arr TileDB Array object key character value describing metadata key","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_delete_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a TileDB Array Metadata object given by key — tiledb_delete_metadata","text":"boolean indicating success","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dense-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB dense array — tiledb_dense-class","title":"An S4 class for a TileDB dense array — tiledb_dense-class","text":"S4 class TileDB dense array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dense-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB dense array — tiledb_dense-class","text":"ctx TileDB context object uri character despription .data.frame logical value attrs character vector extended logical value ptr External pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dense-class.html","id":"planned-deprecation","dir":"Reference","previous_headings":"","what":"Planned Deprecation","title":"An S4 class for a TileDB dense array — tiledb_dense-class","text":"plan deprecate tiledb_dense array type future release. exact timelines finalised, advised tiledb_array dense sparse arrays going forward.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB dimension object — tiledb_dim-class","title":"An S4 class for a TileDB dimension object — tiledb_dim-class","text":"S4 class TileDB dimension object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB dimension object — tiledb_dim-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_dim object — tiledb_dim","title":"Constructs a tiledb_dim object — tiledb_dim","text":"Constructs tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_dim object — tiledb_dim","text":"","code":"tiledb_dim(   name,   domain,   tile,   type,   filter_list = tiledb_filter_list(),   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_dim object — tiledb_dim","text":"name dimension name / label string.  argument required. domain dimension (inclusive) domain. domain dimension defined (lower bound, upper bound) vector. type ASCII, NULL expected. tile tile dimension tile extent. type ASCII, NULL expected. type dimension TileDB datatype string. filter_list optional tiledb_filter_list object, default filter ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a tiledb_dim object — tiledb_dim","text":"tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs a tiledb_dim object — tiledb_dim","text":"","code":"tiledb_dim(name = \"d1\", domain = c(1L, 10L), tile = 5L, type = \"INT32\") #> tiledb_dim(name=\"d1\", domain=c(1L,10L), tile=5L, type=\"INT32\")"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim_get_cell_val_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of scalar values per dimension cell — cell_val_num,tiledb_dim-method","title":"Return the number of scalar values per dimension cell — cell_val_num,tiledb_dim-method","text":"Return number scalar values per dimension cell","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim_get_cell_val_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of scalar values per dimension cell — cell_val_num,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' cell_val_num(object)  tiledb_dim_get_cell_val_num(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim_get_cell_val_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of scalar values per dimension cell — cell_val_num,tiledb_dim-method","text":"object tiledb_dim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_dim_get_cell_val_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of scalar values per dimension cell — cell_val_num,tiledb_dim-method","text":"integer number cells","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB domain — tiledb_domain-class","title":"An S4 class for a TileDB domain — tiledb_domain-class","text":"S4 class TileDB domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB domain — tiledb_domain-class","text":"ptr External pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_domain object — tiledb_domain","title":"Constructs a tiledb_domain object — tiledb_domain","text":"tiledb_dim must TileDB type.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_domain object — tiledb_domain","text":"","code":"tiledb_domain(dims, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_domain object — tiledb_domain","text":"dims list() tiledb_dim objects ctx tiledb_ctx (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a tiledb_domain object — tiledb_domain","text":"tiledb_domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs a tiledb_domain object — tiledb_domain","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"),                               tiledb_dim(\"d2\", c(1L, 50L), type = \"INT32\")))"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_get_dimension_from_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a Dimension indicated by index for the given TileDB Domain — tiledb_domain_get_dimension_from_index","title":"Returns a Dimension indicated by index for the given TileDB Domain — tiledb_domain_get_dimension_from_index","text":"Returns Dimension indicated index given TileDB Domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_get_dimension_from_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a Dimension indicated by index for the given TileDB Domain — tiledb_domain_get_dimension_from_index","text":"","code":"tiledb_domain_get_dimension_from_index(domain, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_get_dimension_from_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a Dimension indicated by index for the given TileDB Domain — tiledb_domain_get_dimension_from_index","text":"domain TileDB Domain object idx Integer index selected dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_get_dimension_from_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a Dimension indicated by index for the given TileDB Domain — tiledb_domain_get_dimension_from_index","text":"TileDB Dimension object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_get_dimension_from_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a Dimension indicated by name for the given TileDB Domain — tiledb_domain_get_dimension_from_name","title":"Returns a Dimension indicated by name for the given TileDB Domain — tiledb_domain_get_dimension_from_name","text":"Returns Dimension indicated name given TileDB Domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_get_dimension_from_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a Dimension indicated by name for the given TileDB Domain — tiledb_domain_get_dimension_from_name","text":"","code":"tiledb_domain_get_dimension_from_name(domain, name)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_get_dimension_from_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a Dimension indicated by name for the given TileDB Domain — tiledb_domain_get_dimension_from_name","text":"domain TileDB Domain object name character variable dimension name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_get_dimension_from_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a Dimension indicated by name for the given TileDB Domain — tiledb_domain_get_dimension_from_name","text":"TileDB Dimension object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_has_dimension.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a domain for a given dimension name — tiledb_domain_has_dimension","title":"Check a domain for a given dimension name — tiledb_domain_has_dimension","text":"Check domain given dimension name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_has_dimension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a domain for a given dimension name — tiledb_domain_has_dimension","text":"","code":"tiledb_domain_has_dimension(domain, name)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_has_dimension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a domain for a given dimension name — tiledb_domain_has_dimension","text":"domain domain TileDB Array schema name character variable dimension name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_domain_has_dimension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a domain for a given dimension name — tiledb_domain_has_dimension","text":"boolean value indicating dimension exists domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_error_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the error message for a given context — tiledb_error_message","title":"Return the error message for a given context — tiledb_error_message","text":"Note function requires actual error occurred.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_error_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the error message for a given context — tiledb_error_message","text":"","code":"tiledb_error_message(ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_error_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the error message for a given context — tiledb_error_message","text":"ctx tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_error_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the error message for a given context — tiledb_error_message","text":"character variable error message","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_buffer_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export from a TileDB Filestore to a character variable — tiledb_filestore_buffer_export","title":"Export from a TileDB Filestore to a character variable — tiledb_filestore_buffer_export","text":"Export TileDB Filestore character variable","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_buffer_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export from a TileDB Filestore to a character variable — tiledb_filestore_buffer_export","text":"","code":"tiledb_filestore_buffer_export(   filestore_uri,   offset,   bytes,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_buffer_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export from a TileDB Filestore to a character variable — tiledb_filestore_buffer_export","text":"filestore_uri Character TileDB Array Schema URI offset (optional) Numeric variable offset beginnig, default zero bytes (optional) Numeric variable number bytes read, default zero ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_buffer_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export from a TileDB Filestore to a character variable — tiledb_filestore_buffer_export","text":"character variable containing filestore content (subject offset bytes) returned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_buffer_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import size bytes from a string into a TileDB Filestore — tiledb_filestore_buffer_import","title":"Import size bytes from a string into a TileDB Filestore — tiledb_filestore_buffer_import","text":"Import size bytes string TileDB Filestore","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_buffer_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import size bytes from a string into a TileDB Filestore — tiledb_filestore_buffer_import","text":"","code":"tiledb_filestore_buffer_import(   filestore_uri,   buf,   bytes,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_buffer_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import size bytes from a string into a TileDB Filestore — tiledb_filestore_buffer_import","text":"filestore_uri Character TileDB Array Schema URI buf Character variable content imported bytes Number bytes import, defaults length buf ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_buffer_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import size bytes from a string into a TileDB Filestore — tiledb_filestore_buffer_import","text":"boolean returned indicate successful completion","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_schema_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an array schema from a given URI with schema — tiledb_filestore_schema_create","title":"Create an array schema from a given URI with schema — tiledb_filestore_schema_create","text":"Create array schema given URI schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_schema_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an array schema from a given URI with schema — tiledb_filestore_schema_create","text":"","code":"tiledb_filestore_schema_create(uri = NULL, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_schema_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an array schema from a given URI with schema — tiledb_filestore_schema_create","text":"uri Character TileDB Array Schema URI, missing NULL default schema returned ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_schema_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an array schema from a given URI with schema — tiledb_filestore_schema_create","text":"ArraySchema object corresponding supplied schema, default missing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Return (uncompressed) TileDB Filestore size — tiledb_filestore_size","title":"Return (uncompressed) TileDB Filestore size — tiledb_filestore_size","text":"Return (uncompressed) TileDB Filestore size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return (uncompressed) TileDB Filestore size — tiledb_filestore_size","text":"","code":"tiledb_filestore_size(filestore_uri, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return (uncompressed) TileDB Filestore size — tiledb_filestore_size","text":"filestore_uri Character TileDB Array Schema URI ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return (uncompressed) TileDB Filestore size — tiledb_filestore_size","text":"numeric size returned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_uri_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export a file from a TileDB Filestore — tiledb_filestore_uri_export","title":"Export a file from a TileDB Filestore — tiledb_filestore_uri_export","text":"Export file TileDB Filestore","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_uri_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export a file from a TileDB Filestore — tiledb_filestore_uri_export","text":"","code":"tiledb_filestore_uri_export(   file_uri,   filestore_uri,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_uri_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export a file from a TileDB Filestore — tiledb_filestore_uri_export","text":"file_uri Character file URI filestore_uri Character TileDB Array Schema URI ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_uri_export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export a file from a TileDB Filestore — tiledb_filestore_uri_export","text":"boolean returned indicate successful completion","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_uri_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Import a file into a TileDB Filestore — tiledb_filestore_uri_import","title":"Import a file into a TileDB Filestore — tiledb_filestore_uri_import","text":"Import file TileDB Filestore","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_uri_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import a file into a TileDB Filestore — tiledb_filestore_uri_import","text":"","code":"tiledb_filestore_uri_import(   filestore_uri,   file_uri,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_uri_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import a file into a TileDB Filestore — tiledb_filestore_uri_import","text":"filestore_uri Character TileDB Array Schema URI file_uri Character file URI ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filestore_uri_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import a file into a TileDB Filestore — tiledb_filestore_uri_import","text":"boolean returned indicate successful completion","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB filter — tiledb_filter-class","title":"An S4 class for a TileDB filter — tiledb_filter-class","text":"S4 class TileDB filter","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB filter — tiledb_filter-class","text":"ptr External pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_filter object — tiledb_filter","title":"Constructs a tiledb_filter object — tiledb_filter","text":"Available filters: \"NONE\" \"GZIP\" \"ZSTD\" \"LZ4\" \"RLE\" \"BZIP2\" \"DOUBLE_DELTA\" \"BIT_WIDTH_REDUCTION\" \"BITSHUFFLE\" \"BYTESHUFFLE\" \"POSITIVE_DELTA\" \"CHECKSUM_MD5\" \"CHECKSUM_SHA256\" \"DICTIONARY\" \"SCALE_FLOAT\"  (TileDB 2.11.0 later) \"FILTER_XOR\"   (TileDB 2.12.0 later)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_filter object — tiledb_filter","text":"","code":"tiledb_filter(name = \"NONE\", ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_filter object — tiledb_filter","text":"name (default \"NONE\") TileDB filter name string ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a tiledb_filter object — tiledb_filter","text":"tiledb_filter object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Constructs a tiledb_filter object — tiledb_filter","text":"Valid compression options vary depending filter used, consult TileDB docs information.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs a tiledb_filter object — tiledb_filter","text":"","code":"tiledb_filter(\"ZSTD\") #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",-1)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_get_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the filter's option — tiledb_filter_get_option","title":"Returns the filter's option — tiledb_filter_get_option","text":"Returns filter's option","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_get_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the filter's option — tiledb_filter_get_option","text":"","code":"tiledb_filter_get_option(object, option)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_get_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the filter's option — tiledb_filter_get_option","text":"object tiledb_filter option string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_get_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the filter's option — tiledb_filter_get_option","text":"Integer value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_get_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the filter's option — tiledb_filter_get_option","text":"","code":"c <- tiledb_filter(\"ZSTD\") tiledb_filter_set_option(c,\"COMPRESSION_LEVEL\", 5) #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)  tiledb_filter_get_option(c, \"COMPRESSION_LEVEL\") #> [1] 5"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB filter list — tiledb_filter_list-class","title":"An S4 class for a TileDB filter list — tiledb_filter_list-class","text":"S4 class TileDB filter list","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB filter list — tiledb_filter_list-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_filter_list object — tiledb_filter_list","title":"Constructs a tiledb_filter_list object — tiledb_filter_list","text":"Constructs tiledb_filter_list object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_filter_list object — tiledb_filter_list","text":"","code":"tiledb_filter_list(filters = c(), ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_filter_list object — tiledb_filter_list","text":"filters optional list one tiledb_filter_list objects ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a tiledb_filter_list object — tiledb_filter_list","text":"tiledb_filter_list object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructs a tiledb_filter_list object — tiledb_filter_list","text":"","code":"flt <- tiledb_filter(\"ZSTD\") tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 5) #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)  filter_list <- tiledb_filter_list(c(flt)) filter_list #> tiledb_filter_list(c(tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)))"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_get_max_chunk_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the filter_list's max_chunk_size — max_chunk_size","title":"Returns the filter_list's max_chunk_size — max_chunk_size","text":"Returns filter_list's max_chunk_size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_get_max_chunk_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the filter_list's max_chunk_size — max_chunk_size","text":"","code":"max_chunk_size(object)  # S4 method for class 'tiledb_filter_list' max_chunk_size(object)  tiledb_filter_list_get_max_chunk_size(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_get_max_chunk_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the filter_list's max_chunk_size — max_chunk_size","text":"object tiledb_filter_list","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_get_max_chunk_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the filter_list's max_chunk_size — max_chunk_size","text":"integer max_chunk_size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_get_max_chunk_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the filter_list's max_chunk_size — max_chunk_size","text":"","code":"flt <- tiledb_filter(\"ZSTD\") tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 5) #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)  filter_list <- tiledb_filter_list(c(flt)) max_chunk_size(filter_list) #> [1] 65536"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_set_max_chunk_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the filter_list's max_chunk_size — set_max_chunk_size","title":"Set the filter_list's max_chunk_size — set_max_chunk_size","text":"Set filter_list's max_chunk_size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_set_max_chunk_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the filter_list's max_chunk_size — set_max_chunk_size","text":"","code":"set_max_chunk_size(object, value)  # S4 method for class 'tiledb_filter_list,numeric' set_max_chunk_size(object, value)  tiledb_filter_list_set_max_chunk_size(object, value)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_set_max_chunk_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the filter_list's max_chunk_size — set_max_chunk_size","text":"object tiledb_filter_list value numeric value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_list_set_max_chunk_size.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the filter_list's max_chunk_size — set_max_chunk_size","text":"","code":"flt <- tiledb_filter(\"ZSTD\") tiledb_filter_set_option(flt, \"COMPRESSION_LEVEL\", 5) #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)  filter_list <- tiledb_filter_list(c(flt)) set_max_chunk_size(filter_list, 10)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_set_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the option for a filter — tiledb_filter_set_option","title":"Set the option for a filter — tiledb_filter_set_option","text":"Set option filter","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_set_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the option for a filter — tiledb_filter_set_option","text":"","code":"tiledb_filter_set_option(object, option, value)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_set_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the option for a filter — tiledb_filter_set_option","text":"object tiledb_filter option string value int","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_set_option.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the option for a filter — tiledb_filter_set_option","text":"modified filter object returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_set_option.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the option for a filter — tiledb_filter_set_option","text":"","code":"c <- tiledb_filter(\"ZSTD\") tiledb_filter_set_option(c,\"COMPRESSION_LEVEL\", 5) #> tiledb_filter_set_option(tiledb_filter(\"ZSTD\"),\"COMPRESSION_LEVEL\",5)  tiledb_filter_get_option(c, \"COMPRESSION_LEVEL\") #> [1] 5"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the type of the filter used — tiledb_filter_type","title":"Returns the type of the filter used — tiledb_filter_type","text":"Returns type filter used","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the type of the filter used — tiledb_filter_type","text":"","code":"tiledb_filter_type(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the type of the filter used — tiledb_filter_type","text":"object tiledb_filter","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the type of the filter used — tiledb_filter_type","text":"TileDB filter type string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_filter_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the type of the filter used — tiledb_filter_type","text":"","code":"c <- tiledb_filter(\"ZSTD\") tiledb_filter_type(c) #> [1] \"ZSTD\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB fragment info object — tiledb_fragment_info-class","title":"An S4 class for a TileDB fragment info object — tiledb_fragment_info-class","text":"S4 class TileDB fragment info object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB fragment info object — tiledb_fragment_info-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_fragment_info object — tiledb_fragment_info","title":"Constructs a tiledb_fragment_info object — tiledb_fragment_info","text":"Constructs tiledb_fragment_info object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_fragment_info object — tiledb_fragment_info","text":"","code":"tiledb_fragment_info(uri, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_fragment_info object — tiledb_fragment_info","text":"uri character variable URI array fragment info request ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a tiledb_fragment_info object — tiledb_fragment_info","text":"tiledb_fragment_info object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_dense.html","id":null,"dir":"Reference","previous_headings":"","what":"Return if a fragment info index is dense — tiledb_fragment_info_dense","title":"Return if a fragment info index is dense — tiledb_fragment_info_dense","text":"Return fragment info index dense","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_dense.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return if a fragment info index is dense — tiledb_fragment_info_dense","text":"","code":"tiledb_fragment_info_dense(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_dense.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return if a fragment info index is dense — tiledb_fragment_info_dense","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_dense.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return if a fragment info index is dense — tiledb_fragment_info_dense","text":"logical value indicating fragment dense","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_dump.html","id":null,"dir":"Reference","previous_headings":"","what":"Dump the fragment info to console — tiledb_fragment_info_dump","title":"Dump the fragment info to console — tiledb_fragment_info_dump","text":"Dump fragment info console","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_dump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dump the fragment info to console — tiledb_fragment_info_dump","text":"","code":"tiledb_fragment_info_dump(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_dump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dump the fragment info to console — tiledb_fragment_info_dump","text":"object TileDB fragment info object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_dump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dump the fragment info to console — tiledb_fragment_info_dump","text":"Nothing returned, side effect fragment info displayed","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_cell_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info number of cells for a given fragment index — tiledb_fragment_info_get_cell_num","title":"Return a fragment info number of cells for a given fragment index — tiledb_fragment_info_get_cell_num","text":"Return fragment info number cells given fragment index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_cell_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info number of cells for a given fragment index — tiledb_fragment_info_get_cell_num","text":"","code":"tiledb_fragment_info_get_cell_num(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_cell_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info number of cells for a given fragment index — tiledb_fragment_info_get_cell_num","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_cell_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info number of cells for a given fragment index — tiledb_fragment_info_get_cell_num","text":"numeric value number cells","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info non-empty domain from index — tiledb_fragment_info_get_non_empty_domain_index","title":"Return a fragment info non-empty domain from index — tiledb_fragment_info_get_non_empty_domain_index","text":"TODO: Rework type information","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info non-empty domain from index — tiledb_fragment_info_get_non_empty_domain_index","text":"","code":"tiledb_fragment_info_get_non_empty_domain_index(object, fid, did, typestr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info non-empty domain from index — tiledb_fragment_info_get_non_empty_domain_index","text":"object TileDB fragment info object fid fragment object index domain index typestr optional character variable describing data type accessed schema missing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info non-empty domain from index — tiledb_fragment_info_get_non_empty_domain_index","text":"TileDB Domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info non-empty domain from name — tiledb_fragment_info_get_non_empty_domain_name","title":"Return a fragment info non-empty domain from name — tiledb_fragment_info_get_non_empty_domain_name","text":"TODO: Rework type information","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info non-empty domain from name — tiledb_fragment_info_get_non_empty_domain_name","text":"","code":"tiledb_fragment_info_get_non_empty_domain_name(object, fid, dim_name, typestr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info non-empty domain from name — tiledb_fragment_info_get_non_empty_domain_name","text":"object TileDB fragment info object fid fragment object index dim_name character variable dimension name typestr optional character variable describing data type accessed schema missinh","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info non-empty domain from name — tiledb_fragment_info_get_non_empty_domain_name","text":"TileDB Domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_var_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info non-empty domain variable from index — tiledb_fragment_info_get_non_empty_domain_var_index","title":"Return a fragment info non-empty domain variable from index — tiledb_fragment_info_get_non_empty_domain_var_index","text":"Return fragment info non-empty domain variable index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_var_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info non-empty domain variable from index — tiledb_fragment_info_get_non_empty_domain_var_index","text":"","code":"tiledb_fragment_info_get_non_empty_domain_var_index(object, fid, did)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_var_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info non-empty domain variable from index — tiledb_fragment_info_get_non_empty_domain_var_index","text":"object TileDB fragment info object fid fragment object index domain index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_var_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info non-empty domain variable from index — tiledb_fragment_info_get_non_empty_domain_var_index","text":"character vector two elements","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_var_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info non-empty domain variable from name — tiledb_fragment_info_get_non_empty_domain_var_name","title":"Return a fragment info non-empty domain variable from name — tiledb_fragment_info_get_non_empty_domain_var_name","text":"Return fragment info non-empty domain variable name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_var_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info non-empty domain variable from name — tiledb_fragment_info_get_non_empty_domain_var_name","text":"","code":"tiledb_fragment_info_get_non_empty_domain_var_name(object, fid, dim_name)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_var_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info non-empty domain variable from name — tiledb_fragment_info_get_non_empty_domain_var_name","text":"object TileDB fragment info object fid fragment object index dim_name character variable dimension name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_non_empty_domain_var_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info non-empty domain variable from name — tiledb_fragment_info_get_non_empty_domain_var_name","text":"character vector two elements","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info number of fragments — tiledb_fragment_info_get_num","title":"Return a fragment info number of fragments — tiledb_fragment_info_get_num","text":"Return fragment info number fragments","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info number of fragments — tiledb_fragment_info_get_num","text":"","code":"tiledb_fragment_info_get_num(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info number of fragments — tiledb_fragment_info_get_num","text":"object TileDB fragment info object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info number of fragments — tiledb_fragment_info_get_num","text":"numeric variable number fragments","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info fragment size for a given fragment index — tiledb_fragment_info_get_size","title":"Return a fragment info fragment size for a given fragment index — tiledb_fragment_info_get_size","text":"Return fragment info fragment size given fragment index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info fragment size for a given fragment index — tiledb_fragment_info_get_size","text":"","code":"tiledb_fragment_info_get_size(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info fragment size for a given fragment index — tiledb_fragment_info_get_size","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info fragment size for a given fragment index — tiledb_fragment_info_get_size","text":"numeric variable number fragments","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_timestamp_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info timestamp range for a given fragment index — tiledb_fragment_info_get_timestamp_range","title":"Return a fragment info timestamp range for a given fragment index — tiledb_fragment_info_get_timestamp_range","text":"Return fragment info timestamp range given fragment index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_timestamp_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info timestamp range for a given fragment index — tiledb_fragment_info_get_timestamp_range","text":"","code":"tiledb_fragment_info_get_timestamp_range(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_timestamp_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info timestamp range for a given fragment index — tiledb_fragment_info_get_timestamp_range","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_timestamp_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info timestamp range for a given fragment index — tiledb_fragment_info_get_timestamp_range","text":"Datetime vector two elements range","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_to_vacuum_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of fragment info elements to be vacuumed — tiledb_fragment_info_get_to_vacuum_num","title":"Return the number of fragment info elements to be vacuumed — tiledb_fragment_info_get_to_vacuum_num","text":"Return number fragment info elements vacuumed","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_to_vacuum_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of fragment info elements to be vacuumed — tiledb_fragment_info_get_to_vacuum_num","text":"","code":"tiledb_fragment_info_get_to_vacuum_num(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_to_vacuum_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of fragment info elements to be vacuumed — tiledb_fragment_info_get_to_vacuum_num","text":"object TileDB fragment info object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_to_vacuum_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of fragment info elements to be vacuumed — tiledb_fragment_info_get_to_vacuum_num","text":"numeric value number vacuumed fragments","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_to_vacuum_uri.html","id":null,"dir":"Reference","previous_headings":"","what":"Return fragment info URI of the to be vacuumed index — tiledb_fragment_info_get_to_vacuum_uri","title":"Return fragment info URI of the to be vacuumed index — tiledb_fragment_info_get_to_vacuum_uri","text":"Return fragment info URI vacuumed index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_to_vacuum_uri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return fragment info URI of the to be vacuumed index — tiledb_fragment_info_get_to_vacuum_uri","text":"","code":"tiledb_fragment_info_get_to_vacuum_uri(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_to_vacuum_uri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return fragment info URI of the to be vacuumed index — tiledb_fragment_info_get_to_vacuum_uri","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_to_vacuum_uri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return fragment info URI of the to be vacuumed index — tiledb_fragment_info_get_to_vacuum_uri","text":"character variable URI vacuumed index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_unconsolidated_metadata_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Return fragment info number of unconsolidated metadata — tiledb_fragment_info_get_unconsolidated_metadata_num","title":"Return fragment info number of unconsolidated metadata — tiledb_fragment_info_get_unconsolidated_metadata_num","text":"Return fragment info number unconsolidated metadata","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_unconsolidated_metadata_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return fragment info number of unconsolidated metadata — tiledb_fragment_info_get_unconsolidated_metadata_num","text":"","code":"tiledb_fragment_info_get_unconsolidated_metadata_num(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_unconsolidated_metadata_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return fragment info number of unconsolidated metadata — tiledb_fragment_info_get_unconsolidated_metadata_num","text":"object TileDB fragment info object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_unconsolidated_metadata_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return fragment info number of unconsolidated metadata — tiledb_fragment_info_get_unconsolidated_metadata_num","text":"numeric value number unconsolidated metadata","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info version for a given fragment index — tiledb_fragment_info_get_version","title":"Return a fragment info version for a given fragment index — tiledb_fragment_info_get_version","text":"Return fragment info version given fragment index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info version for a given fragment index — tiledb_fragment_info_get_version","text":"","code":"tiledb_fragment_info_get_version(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info version for a given fragment index — tiledb_fragment_info_get_version","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_get_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info version for a given fragment index — tiledb_fragment_info_get_version","text":"integer value value version","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_has_consolidated_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Return if a fragment info index has consolidated metadata — tiledb_fragment_info_has_consolidated_metadata","title":"Return if a fragment info index has consolidated metadata — tiledb_fragment_info_has_consolidated_metadata","text":"Return fragment info index consolidated metadata","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_has_consolidated_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return if a fragment info index has consolidated metadata — tiledb_fragment_info_has_consolidated_metadata","text":"","code":"tiledb_fragment_info_has_consolidated_metadata(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_has_consolidated_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return if a fragment info index has consolidated metadata — tiledb_fragment_info_has_consolidated_metadata","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_has_consolidated_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return if a fragment info index has consolidated metadata — tiledb_fragment_info_has_consolidated_metadata","text":"logical value indicating consolidated metadata","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Return if a fragment info index is sparse — tiledb_fragment_info_sparse","title":"Return if a fragment info index is sparse — tiledb_fragment_info_sparse","text":"Return fragment info index sparse","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return if a fragment info index is sparse — tiledb_fragment_info_sparse","text":"","code":"tiledb_fragment_info_sparse(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return if a fragment info index is sparse — tiledb_fragment_info_sparse","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_sparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return if a fragment info index is sparse — tiledb_fragment_info_sparse","text":"logical value indicating fragment sparse","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_uri.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a fragment info URI given its index — tiledb_fragment_info_uri","title":"Return a fragment info URI given its index — tiledb_fragment_info_uri","text":"Return fragment info URI given index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_uri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a fragment info URI given its index — tiledb_fragment_info_uri","text":"","code":"tiledb_fragment_info_uri(object, fid)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_uri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a fragment info URI given its index — tiledb_fragment_info_uri","text":"object TileDB fragment info object fid fragment object index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_fragment_info_uri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a fragment info URI given its index — tiledb_fragment_info_uri","text":"character variable URI","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_all_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Return all TileDB Array Metadata objects as a named list — tiledb_get_all_metadata","title":"Return all TileDB Array Metadata objects as a named list — tiledb_get_all_metadata","text":"Return TileDB Array Metadata objects named list","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_all_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return all TileDB Array Metadata objects as a named list — tiledb_get_all_metadata","text":"","code":"tiledb_get_all_metadata(arr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_all_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return all TileDB Array Metadata objects as a named list — tiledb_get_all_metadata","text":"arr TileDB Array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_all_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return all TileDB Array Metadata objects as a named list — tiledb_get_all_metadata","text":"named list Metadata objects indexed given key","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a TileDB context object from the package cache — tiledb_get_context","title":"Retrieve a TileDB context object from the package cache — tiledb_get_context","text":"Retrieve TileDB context object package cache","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a TileDB context object from the package cache — tiledb_get_context","text":"","code":"tiledb_get_context()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a TileDB context object from the package cache — tiledb_get_context","text":"TileDB context object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a TileDB Array Metadata object given by key — tiledb_get_metadata","title":"Return a TileDB Array Metadata object given by key — tiledb_get_metadata","text":"Return TileDB Array Metadata object given key","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a TileDB Array Metadata object given by key — tiledb_get_metadata","text":"","code":"tiledb_get_metadata(arr, key)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a TileDB Array Metadata object given by key — tiledb_get_metadata","text":"arr TileDB Array object key character value describing metadata key","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a TileDB Array Metadata object given by key — tiledb_get_metadata","text":"object stored Metadata given key, ‘NULL’ none found.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_query_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the cached status of the last finalized query — tiledb_get_query_status","title":"Retrieve the cached status of the last finalized query — tiledb_get_query_status","text":"function accesses status last query without requiring query object.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_query_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the cached status of the last finalized query — tiledb_get_query_status","text":"","code":"tiledb_get_query_status()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_query_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the cached status of the last finalized query — tiledb_get_query_status","text":"status last query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_vfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a TileDB VFS object from the package environment and cache — tiledb_get_vfs","title":"Retrieve a TileDB VFS object from the package environment and cache — tiledb_get_vfs","text":"Retrieve TileDB VFS object package environment cache","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_vfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a TileDB VFS object from the package environment and cache — tiledb_get_vfs","text":"","code":"tiledb_get_vfs()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_get_vfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a TileDB VFS object from the package environment and cache — tiledb_get_vfs","text":"TileDB VFS object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB Group object — tiledb_group-class","title":"An S4 class for a TileDB Group object — tiledb_group-class","text":"S4 class TileDB Group object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB Group object — tiledb_group-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a 'tiledb_group' object — tiledb_group","title":"Creates a 'tiledb_group' object — tiledb_group","text":"Creates 'tiledb_group' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a 'tiledb_group' object — tiledb_group","text":"","code":"tiledb_group(   uri,   type = c(\"READ\", \"WRITE\"),   ctx = tiledb_get_context(),   cfg = NULL )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a 'tiledb_group' object — tiledb_group","text":"uri Character variable URI new group object type Character variable query type value: one “READ” “WRITE” ctx (optional) TileDB Context object; supplied default context object retrieved cfg (optional) TileConfig object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a 'tiledb_group' object — tiledb_group","text":"'group' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_add_member.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Member to TileDB Group — tiledb_group_add_member","title":"Add Member to TileDB Group — tiledb_group_add_member","text":"Add Member TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_add_member.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Member to TileDB Group — tiledb_group_add_member","text":"","code":"tiledb_group_add_member(grp, uri, relative, name = NULL)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_add_member.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Member to TileDB Group — tiledb_group_add_member","text":"grp TileDB Group object example returned tiledb_group() uri character value new URI relative logical value indicating whether URI relative group name optional character providing name object, defaults NULL","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_add_member.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Member to TileDB Group — tiledb_group_add_member","text":"TileDB Group object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_close.html","id":null,"dir":"Reference","previous_headings":"","what":"Close a TileDB Group — tiledb_group_close","title":"Close a TileDB Group — tiledb_group_close","text":"Close TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_close.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close a TileDB Group — tiledb_group_close","text":"","code":"tiledb_group_close(grp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_close.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close a TileDB Group — tiledb_group_close","text":"grp TileDB Group object example returned tiledb_group()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_close.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Close a TileDB Group — tiledb_group_close","text":"TileDB Group object closed reading writing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a TileDB Group at the given path — tiledb_group_create","title":"Create a TileDB Group at the given path — tiledb_group_create","text":"Create TileDB Group given path","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a TileDB Group at the given path — tiledb_group_create","text":"","code":"tiledb_group_create(uri, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a TileDB Group at the given path — tiledb_group_create","text":"uri Character variable URI new group ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a TileDB Group at the given path — tiledb_group_create","text":"uri path, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a TileDB Group at the given path — tiledb_group_create","text":"","code":"if (FALSE) { # \\dontrun{ pth <- tempdir() tiledb_group_create(pth) tiledb_object_type(pth) } # }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes all written data from a 'tiledb_group' object — tiledb_group_delete","title":"Deletes all written data from a 'tiledb_group' object — tiledb_group_delete","text":"group must opened ‘MODIFY_EXCLUSIVE’ mode, otherwise function error .","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletes all written data from a 'tiledb_group' object — tiledb_group_delete","text":"","code":"tiledb_group_delete(grp, uri, recursive = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deletes all written data from a 'tiledb_group' object — tiledb_group_delete","text":"grp TileDB Group object example returned tiledb_group() uri Character variable URI group item deleted recursive logical value indicating whether data iniside group delet","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletes all written data from a 'tiledb_group' object — tiledb_group_delete","text":"Nothing returned, function invoked side-effect group data removal.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_delete_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Deletes Metadata from a TileDB Group — tiledb_group_delete_metadata","title":"Deletes Metadata from a TileDB Group — tiledb_group_delete_metadata","text":"Deletes Metadata TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_delete_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deletes Metadata from a TileDB Group — tiledb_group_delete_metadata","text":"","code":"tiledb_group_delete_metadata(grp, key)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_delete_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deletes Metadata from a TileDB Group — tiledb_group_delete_metadata","text":"grp TileDB Group object example returned tiledb_group() key character value index data written","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_delete_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deletes Metadata from a TileDB Group — tiledb_group_delete_metadata","text":"TileDB Group object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_all_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Return all Metadata from a TileDB Group — tiledb_group_get_all_metadata","title":"Return all Metadata from a TileDB Group — tiledb_group_get_all_metadata","text":"Return Metadata TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_all_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return all Metadata from a TileDB Group — tiledb_group_get_all_metadata","text":"","code":"tiledb_group_get_all_metadata(grp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_all_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return all Metadata from a TileDB Group — tiledb_group_get_all_metadata","text":"grp TileDB Group object example returned tiledb_group()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_all_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return all Metadata from a TileDB Group — tiledb_group_get_all_metadata","text":"named List Metadata objects index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a TileDB Config from a TileDB Group — tiledb_group_get_config","title":"Get a TileDB Config from a TileDB Group — tiledb_group_get_config","text":"Get TileDB Config TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a TileDB Config from a TileDB Group — tiledb_group_get_config","text":"","code":"tiledb_group_get_config(grp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a TileDB Config from a TileDB Group — tiledb_group_get_config","text":"grp TileDB Group object example returned tiledb_group()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a TileDB Config from a TileDB Group — tiledb_group_get_config","text":"TileDB Config object TileDB Group object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Accesses Metadata from a TileDB Group — tiledb_group_get_metadata","title":"Accesses Metadata from a TileDB Group — tiledb_group_get_metadata","text":"Accesses Metadata TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accesses Metadata from a TileDB Group — tiledb_group_get_metadata","text":"","code":"tiledb_group_get_metadata(grp, key)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accesses Metadata from a TileDB Group — tiledb_group_get_metadata","text":"grp TileDB Group object example returned tiledb_group() key character value key metadata object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accesses Metadata from a TileDB Group — tiledb_group_get_metadata","text":"requested object, NULL found","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_metadata_from_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Accesses Metadata by Index from a TileDB Group — tiledb_group_get_metadata_from_index","title":"Accesses Metadata by Index from a TileDB Group — tiledb_group_get_metadata_from_index","text":"Accesses Metadata Index TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_metadata_from_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accesses Metadata by Index from a TileDB Group — tiledb_group_get_metadata_from_index","text":"","code":"tiledb_group_get_metadata_from_index(grp, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_metadata_from_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accesses Metadata by Index from a TileDB Group — tiledb_group_get_metadata_from_index","text":"grp TileDB Group object example returned tiledb_group() idx numeric value index metadata object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_get_metadata_from_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accesses Metadata by Index from a TileDB Group — tiledb_group_get_metadata_from_index","text":"requested object, NULL found","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_has_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for Metadata in a TileDB Group — tiledb_group_has_metadata","title":"Checks for Metadata in a TileDB Group — tiledb_group_has_metadata","text":"Checks Metadata TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_has_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for Metadata in a TileDB Group — tiledb_group_has_metadata","text":"","code":"tiledb_group_has_metadata(grp, key)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_has_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for Metadata in a TileDB Group — tiledb_group_has_metadata","text":"grp TileDB Group object example returned tiledb_group() key character value index data written","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_has_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for Metadata in a TileDB Group — tiledb_group_has_metadata","text":"boolean value indicating object present","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_is_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if TileDB Group is open — tiledb_group_is_open","title":"Test if TileDB Group is open — tiledb_group_is_open","text":"Test TileDB Group open","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_is_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if TileDB Group is open — tiledb_group_is_open","text":"","code":"tiledb_group_is_open(grp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_is_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if TileDB Group is open — tiledb_group_is_open","text":"grp TileDB Group object example returned tiledb_group()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_is_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if TileDB Group is open — tiledb_group_is_open","text":"boolean indicating whether TileDB Group object open","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_is_relative.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if a Named Group is Using a Relative URI — tiledb_group_is_relative","title":"Test if a Named Group is Using a Relative URI — tiledb_group_is_relative","text":"Test Named Group Using Relative URI","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_is_relative.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if a Named Group is Using a Relative URI — tiledb_group_is_relative","text":"","code":"tiledb_group_is_relative(grp, name)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_is_relative.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if a Named Group is Using a Relative URI — tiledb_group_is_relative","text":"grp TileDB Group object example returned tiledb_group() name character value group name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_is_relative.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if a Named Group is Using a Relative URI — tiledb_group_is_relative","text":"boolean indicating whether group uses relative URI ","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Member (Description) by Index from TileDB Group — tiledb_group_member","title":"Get a Member (Description) by Index from TileDB Group — tiledb_group_member","text":"function returns three-element character vector member object translated character, uri, optional name.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Member (Description) by Index from TileDB Group — tiledb_group_member","text":"","code":"tiledb_group_member(grp, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Member (Description) by Index from TileDB Group — tiledb_group_member","text":"grp TileDB Group object example returned tiledb_group() idx numeric value index metadata object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Member (Description) by Index from TileDB Group — tiledb_group_member","text":"character vector three elements: member type, uri, name (\"\" member unnamed).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Member Count from TileDB Group — tiledb_group_member_count","title":"Get Member Count from TileDB Group — tiledb_group_member_count","text":"Get Member Count TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Member Count from TileDB Group — tiledb_group_member_count","text":"","code":"tiledb_group_member_count(grp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Member Count from TileDB Group — tiledb_group_member_count","text":"grp TileDB Group object example returned tiledb_group()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Member Count from TileDB Group — tiledb_group_member_count","text":"Count Members TileDB Group object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member_dump.html","id":null,"dir":"Reference","previous_headings":"","what":"Dump the TileDB Group to String — tiledb_group_member_dump","title":"Dump the TileDB Group to String — tiledb_group_member_dump","text":"Dump TileDB Group String","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member_dump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dump the TileDB Group to String — tiledb_group_member_dump","text":"","code":"tiledb_group_member_dump(grp, recursive = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member_dump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dump the TileDB Group to String — tiledb_group_member_dump","text":"grp TileDB Group object example returned tiledb_group() recursive logical value indicating whether recursive dump desired, defaults ‘FALSE’. Note recursive listings remote object may expensive slow operation.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_member_dump.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dump the TileDB Group to String — tiledb_group_member_dump","text":"character string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_metadata_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns Number of Metadata Objects a TileDB Group — tiledb_group_metadata_num","title":"Returns Number of Metadata Objects a TileDB Group — tiledb_group_metadata_num","text":"Returns Number Metadata Objects TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_metadata_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns Number of Metadata Objects a TileDB Group — tiledb_group_metadata_num","text":"","code":"tiledb_group_metadata_num(grp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_metadata_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns Number of Metadata Objects a TileDB Group — tiledb_group_metadata_num","text":"grp TileDB Group object example returned tiledb_group()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_metadata_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns Number of Metadata Objects a TileDB Group — tiledb_group_metadata_num","text":"numeric value number metadata objects","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a TileDB Group — tiledb_group_open","title":"Open a TileDB Group — tiledb_group_open","text":"Open TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a TileDB Group — tiledb_group_open","text":"","code":"tiledb_group_open(grp, type = c(\"READ\", \"WRITE\", \"MODIFY_EXCLUSIVE\"))"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a TileDB Group — tiledb_group_open","text":"grp TileDB Group object example returned tiledb_group() type character value must either ‘READ’, ‘WRITE’ ‘MODIFY_EXCLUSIVE’","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a TileDB Group — tiledb_group_open","text":"TileDB Group object opened reading writing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_put_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Metadata to a TileDB Group — tiledb_group_put_metadata","title":"Write Metadata to a TileDB Group — tiledb_group_put_metadata","text":"Write Metadata TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_put_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Metadata to a TileDB Group — tiledb_group_put_metadata","text":"","code":"tiledb_group_put_metadata(grp, key, val)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_put_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Metadata to a TileDB Group — tiledb_group_put_metadata","text":"grp TileDB Group object example returned tiledb_group() key character value index data written val R object (numeric, int, char vector) stored","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_put_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Metadata to a TileDB Group — tiledb_group_put_metadata","text":"success boolean ‘TRUE’ returned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_query_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a TileDB Group query type — tiledb_group_query_type","title":"Return a TileDB Group query type — tiledb_group_query_type","text":"Return TileDB Group query type","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_query_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a TileDB Group query type — tiledb_group_query_type","text":"","code":"tiledb_group_query_type(grp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_query_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a TileDB Group query type — tiledb_group_query_type","text":"grp TileDB Group object example returned tiledb_group()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_query_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a TileDB Group query type — tiledb_group_query_type","text":"character value query type .e. one “READ” “WRITE”.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_remove_member.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Member from TileDB Group — tiledb_group_remove_member","title":"Remove Member from TileDB Group — tiledb_group_remove_member","text":"Remove Member TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_remove_member.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Member from TileDB Group — tiledb_group_remove_member","text":"","code":"tiledb_group_remove_member(grp, uri)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_remove_member.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Member from TileDB Group — tiledb_group_remove_member","text":"grp TileDB Group object example returned tiledb_group() uri character value URI member removed, (added name) name member","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_remove_member.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Member from TileDB Group — tiledb_group_remove_member","text":"TileDB Group object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_set_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a TileDB Config for a TileDB Group — tiledb_group_set_config","title":"Set a TileDB Config for a TileDB Group — tiledb_group_set_config","text":"Set TileDB Config TileDB Group","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_set_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a TileDB Config for a TileDB Group — tiledb_group_set_config","text":"","code":"tiledb_group_set_config(grp, cfg)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_set_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a TileDB Config for a TileDB Group — tiledb_group_set_config","text":"grp TileDB Group object example returned tiledb_group() cfg TileDB Config object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_set_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a TileDB Config for a TileDB Group — tiledb_group_set_config","text":"TileDB Group object added Config","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_uri.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a TileDB Group URI — tiledb_group_uri","title":"Return a TileDB Group URI — tiledb_group_uri","text":"Return TileDB Group URI","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_uri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a TileDB Group URI — tiledb_group_uri","text":"","code":"tiledb_group_uri(grp)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_uri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a TileDB Group URI — tiledb_group_uri","text":"grp TileDB Group object example returned tiledb_group()","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_group_uri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a TileDB Group URI — tiledb_group_uri","text":"character value URI","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_has_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if TileDB Array has Metadata — tiledb_has_metadata","title":"Test if TileDB Array has Metadata — tiledb_has_metadata","text":"Test TileDB Array Metadata","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_has_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if TileDB Array has Metadata — tiledb_has_metadata","text":"","code":"tiledb_has_metadata(arr, key)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_has_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if TileDB Array has Metadata — tiledb_has_metadata","text":"arr TileDB Array object key character value describing metadata key","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_has_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if TileDB Array has Metadata — tiledb_has_metadata","text":"logical value indicating given key exists metdata given array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_is_supported_fs.html","id":null,"dir":"Reference","previous_headings":"","what":"Query if a TileDB backend is supported — tiledb_is_supported_fs","title":"Query if a TileDB backend is supported — tiledb_is_supported_fs","text":"scheme corresponds URI scheme TileDB resouces.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_is_supported_fs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query if a TileDB backend is supported — tiledb_is_supported_fs","text":"","code":"tiledb_is_supported_fs(scheme, object = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_is_supported_fs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query if a TileDB backend is supported — tiledb_is_supported_fs","text":"scheme URI string scheme (\"file\", \"hdfs\", \"s3\") object tiledb_ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_is_supported_fs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query if a TileDB backend is supported — tiledb_is_supported_fs","text":"TRUE tiledb backend supported, FALSE otherwise","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_is_supported_fs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query if a TileDB backend is supported — tiledb_is_supported_fs","text":"Ex: {file}:///path//file {hdfs}:///path//file {s3}://hostname:port/path//file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_is_supported_fs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query if a TileDB backend is supported — tiledb_is_supported_fs","text":"","code":"tiledb_is_supported_fs(\"file\") #> [1] TRUE tiledb_is_supported_fs(\"s3\") #> [1] TRUE"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_array_schema-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the number of dimensions associated with the tiledb_array_schema — tiledb_ndim,tiledb_array_schema-method","title":"Return the number of dimensions associated with the tiledb_array_schema — tiledb_ndim,tiledb_array_schema-method","text":"Return number dimensions associated tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_array_schema-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the number of dimensions associated with the tiledb_array_schema — tiledb_ndim,tiledb_array_schema-method","text":"","code":"# S4 method for class 'tiledb_array_schema' tiledb_ndim(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_array_schema-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the number of dimensions associated with the tiledb_array_schema — tiledb_ndim,tiledb_array_schema-method","text":"object tiledb_array_schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_array_schema-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the number of dimensions associated with the tiledb_array_schema — tiledb_ndim,tiledb_array_schema-method","text":"integer number dimensions","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_array_schema-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the number of dimensions associated with the tiledb_array_schema — tiledb_ndim,tiledb_array_schema-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(1L, 10L), type = \"INT32\"))) sch <- tiledb_array_schema(dom, attrs = c(tiledb_attr(\"a1\", type = \"INT32\"),                                           tiledb_attr(\"a2\", type = \"FLOAT64\"))) tiledb_ndim(sch) #> [1] 1"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_dim-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the number of dimensions for a tiledb domain object — tiledb_ndim,tiledb_dim-method","title":"Returns the number of dimensions for a tiledb domain object — tiledb_ndim,tiledb_dim-method","text":"Returns number dimensions tiledb domain object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_dim-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the number of dimensions for a tiledb domain object — tiledb_ndim,tiledb_dim-method","text":"","code":"# S4 method for class 'tiledb_dim' tiledb_ndim(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_dim-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the number of dimensions for a tiledb domain object — tiledb_ndim,tiledb_dim-method","text":"object tiledb_ndim object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_dim-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the number of dimensions for a tiledb domain object — tiledb_ndim,tiledb_dim-method","text":"1L","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_dim-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the number of dimensions for a tiledb domain object — tiledb_ndim,tiledb_dim-method","text":"","code":"d1 <- tiledb_dim(\"d1\", c(1L, 10L), 10L) tiledb_ndim(d1) #> [1] 1"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_domain-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the number of dimensions of the tiledb_domain — tiledb_ndim,tiledb_domain-method","title":"Returns the number of dimensions of the tiledb_domain — tiledb_ndim,tiledb_domain-method","text":"Returns number dimensions tiledb_domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_domain-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the number of dimensions of the tiledb_domain — tiledb_ndim,tiledb_domain-method","text":"","code":"# S4 method for class 'tiledb_domain' tiledb_ndim(object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_domain-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the number of dimensions of the tiledb_domain — tiledb_ndim,tiledb_domain-method","text":"object tiledb_domain","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_domain-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the number of dimensions of the tiledb_domain — tiledb_ndim,tiledb_domain-method","text":"integer number dimensions","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndim-tiledb_domain-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the number of dimensions of the tiledb_domain — tiledb_ndim,tiledb_domain-method","text":"","code":"dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(0.5, 100.0), type = \"FLOAT64\"))) tiledb_ndim(dom) #> [1] 1 dom <- tiledb_domain(dims = c(tiledb_dim(\"d1\", c(0.5, 100.0), type = \"FLOAT64\"),                                    tiledb_dim(\"d2\", c(0.5, 100.0), type = \"FLOAT64\"))) tiledb_ndim(dom) #> [1] 2"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB NDRectangle object — tiledb_ndrectangle-class","title":"An S4 class for a TileDB NDRectangle object — tiledb_ndrectangle-class","text":"S4 class TileDB NDRectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB NDRectangle object — tiledb_ndrectangle-class","text":"ptr external pointer underlying NDRectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a tiledb_ndrectangle object — tiledb_ndrectangle","title":"Creates a tiledb_ndrectangle object — tiledb_ndrectangle","text":"Creates tiledb_ndrectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a tiledb_ndrectangle object — tiledb_ndrectangle","text":"","code":"tiledb_ndrectangle(dom, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a tiledb_ndrectangle object — tiledb_ndrectangle","text":"dom TileDB Domain object NDRectangle object created ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a tiledb_ndrectangle object — tiledb_ndrectangle","text":"tiledb_ndrectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a tiledb_ndrectangle object — tiledb_ndrectangle","text":"","code":"if (tiledb_version(TRUE) >= \"2.25.0\") {    dom <-tiledb_domain(dim = tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"))    ndr <- tiledb_ndrectangle(dom) }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the datatype of a named tiledb_ndrectangle dimension — tiledb_ndrectangle_datatype","title":"Get the datatype of a named tiledb_ndrectangle dimension — tiledb_ndrectangle_datatype","text":"Get datatype named tiledb_ndrectangle dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the datatype of a named tiledb_ndrectangle dimension — tiledb_ndrectangle_datatype","text":"","code":"tiledb_ndrectangle_datatype(ndr, dimname)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the datatype of a named tiledb_ndrectangle dimension — tiledb_ndrectangle_datatype","text":"ndr TileDB NDRectangle object dimname character variable dimension get datatype","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the datatype of a named tiledb_ndrectangle dimension — tiledb_ndrectangle_datatype","text":"tiledb_ndrectangle dimension datatype character","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the datatype of a named tiledb_ndrectangle dimension — tiledb_ndrectangle_datatype","text":"","code":"if (tiledb_version(TRUE) >= \"2.26.0\") {    dom <- tiledb_domain(dim = tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"))    ndr <- tiledb_ndrectangle(dom)    tiledb_ndrectangle_datatype(ndr, \"d1\") } #> [1] \"INT32\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype_by_ind.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the datatype of a tiledb_ndrectangle dimension by index — tiledb_ndrectangle_datatype_by_ind","title":"Get the datatype of a tiledb_ndrectangle dimension by index — tiledb_ndrectangle_datatype_by_ind","text":"Get datatype tiledb_ndrectangle dimension index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype_by_ind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the datatype of a tiledb_ndrectangle dimension by index — tiledb_ndrectangle_datatype_by_ind","text":"","code":"tiledb_ndrectangle_datatype_by_ind(ndr, dim)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype_by_ind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the datatype of a tiledb_ndrectangle dimension by index — tiledb_ndrectangle_datatype_by_ind","text":"ndr TileDB NDRectangle object dim integer value dimension get datatype","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype_by_ind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the datatype of a tiledb_ndrectangle dimension by index — tiledb_ndrectangle_datatype_by_ind","text":"tiledb_ndrectangle dimension datatype character","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_datatype_by_ind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the datatype of a tiledb_ndrectangle dimension by index — tiledb_ndrectangle_datatype_by_ind","text":"","code":"if (tiledb_version(TRUE) >= \"2.26.0\") {    dom <- tiledb_domain(dim = tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"))    ndr <- tiledb_ndrectangle(dom)    tiledb_ndrectangle_datatype_by_ind(ndr, 0) } #> [1] \"INT32\""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_dim_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the number of dimensions for tiledb_ndrectangle object — tiledb_ndrectangle_dim_num","title":"Get the number of dimensions for tiledb_ndrectangle object — tiledb_ndrectangle_dim_num","text":"Get number dimensions tiledb_ndrectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_dim_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the number of dimensions for tiledb_ndrectangle object — tiledb_ndrectangle_dim_num","text":"","code":"tiledb_ndrectangle_dim_num(ndr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_dim_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the number of dimensions for tiledb_ndrectangle object — tiledb_ndrectangle_dim_num","text":"ndr TileDB NDRectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_dim_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the number of dimensions for tiledb_ndrectangle object — tiledb_ndrectangle_dim_num","text":"number dimentiones tiledb_ndrectangle","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_dim_num.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the number of dimensions for tiledb_ndrectangle object — tiledb_ndrectangle_dim_num","text":"","code":"if (tiledb_version(TRUE) >= \"2.26.0\") {    dom <- tiledb_domain(dim = tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"))    ndr <- tiledb_ndrectangle(dom)    tiledb_ndrectangle_dim_num(ndr) } #> [1] 1"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_get_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a range from a tiledb_ndrectangle object — tiledb_ndrectangle_get_range","title":"Get a range from a tiledb_ndrectangle object — tiledb_ndrectangle_get_range","text":"Get range tiledb_ndrectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_get_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a range from a tiledb_ndrectangle object — tiledb_ndrectangle_get_range","text":"","code":"tiledb_ndrectangle_get_range(ndr, dimname)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_get_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a range from a tiledb_ndrectangle object — tiledb_ndrectangle_get_range","text":"ndr TileDB NDRectangle object dimname character variable dimension get range","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_get_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a range from a tiledb_ndrectangle object — tiledb_ndrectangle_get_range","text":"tiledb_ndrectangle range two-element vector","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_get_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a range from a tiledb_ndrectangle object — tiledb_ndrectangle_get_range","text":"","code":"if (tiledb_version(TRUE) >= \"2.26.0\") {    dom <- tiledb_domain(dim = tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"))    ndr <- tiledb_ndrectangle(dom)    ndr <- tiledb_ndrectangle_set_range(ndr, \"d1\", 50, 500)    tiledb_ndrectangle_get_range(ndr, \"d1\") } #> [1]  50 500"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_set_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a range on a tiledb_ndrectangle object — tiledb_ndrectangle_set_range","title":"Set a range on a tiledb_ndrectangle object — tiledb_ndrectangle_set_range","text":"Set range tiledb_ndrectangle object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_set_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a range on a tiledb_ndrectangle object — tiledb_ndrectangle_set_range","text":"","code":"tiledb_ndrectangle_set_range(ndr, dimname, start, end)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_set_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a range on a tiledb_ndrectangle object — tiledb_ndrectangle_set_range","text":"ndr TileDB NDRectangle object dimname character variable dimension set range start lower end range set end upper end range set","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_set_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a range on a tiledb_ndrectangle object — tiledb_ndrectangle_set_range","text":"modified tiledb_ndrectangle object Start end values data type type selected dimension. set allowed type includes different integer types well string dimensions.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_ndrectangle_set_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a range on a tiledb_ndrectangle object — tiledb_ndrectangle_set_range","text":"","code":"if (tiledb_version(TRUE) >= \"2.26.0\") {    dom <-tiledb_domain(dim = tiledb_dim(\"d1\", c(1L, 100L), type = \"INT32\"))    ndr <- tiledb_ndrectangle(dom)    ndr <- tiledb_ndrectangle_set_range(ndr, \"d1\", 50, 500) }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_num_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Return count of TileDB Array Metadata objects — tiledb_num_metadata","title":"Return count of TileDB Array Metadata objects — tiledb_num_metadata","text":"Return count TileDB Array Metadata objects","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_num_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return count of TileDB Array Metadata objects — tiledb_num_metadata","text":"","code":"tiledb_num_metadata(arr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_num_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return count of TileDB Array Metadata objects — tiledb_num_metadata","text":"arr TileDB Array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_num_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return count of TileDB Array Metadata objects — tiledb_num_metadata","text":"integer variable number Metadata objects","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"List TileDB resources at a given root URI path — tiledb_object_ls","title":"List TileDB resources at a given root URI path — tiledb_object_ls","text":"List TileDB resources given root URI path","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List TileDB resources at a given root URI path — tiledb_object_ls","text":"","code":"tiledb_object_ls(uri, filter = NULL, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List TileDB resources at a given root URI path — tiledb_object_ls","text":"uri uri path walk filter optional filtering argument, default \"NULL\", currently unused ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List TileDB resources at a given root URI path — tiledb_object_ls","text":"dataframe object type, object uri string columns","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_mv.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a TileDB resource to new uri path — tiledb_object_mv","title":"Move a TileDB resource to new uri path — tiledb_object_mv","text":"Raises error either uri invalid, old uri resource tiledb object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_mv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a TileDB resource to new uri path — tiledb_object_mv","text":"","code":"tiledb_object_mv(old_uri, new_uri, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_mv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a TileDB resource to new uri path — tiledb_object_mv","text":"old_uri old uri existing tiledb resource new_uri new uri move tiledb resource ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_mv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move a TileDB resource to new uri path — tiledb_object_mv","text":"new uri moved tiledb resource","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes a TileDB resource — tiledb_object_rm","title":"Removes a TileDB resource — tiledb_object_rm","text":"Raises error uri invalid, uri resource tiledb object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes a TileDB resource — tiledb_object_rm","text":"","code":"tiledb_object_rm(uri, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes a TileDB resource — tiledb_object_rm","text":"uri path TileDB resource ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_rm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes a TileDB resource — tiledb_object_rm","text":"uri removed TileDB resource","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the TileDB object type string of a TileDB resource — tiledb_object_type","title":"Return the TileDB object type string of a TileDB resource — tiledb_object_type","text":"Object types: \"ARRAY\", dense sparse TileDB array \"GROUP\", TileDB group `\"INVALID\"“, TileDB resource","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the TileDB object type string of a TileDB resource — tiledb_object_type","text":"","code":"tiledb_object_type(uri, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the TileDB object type string of a TileDB resource — tiledb_object_type","text":"uri path TileDB resource ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the TileDB object type string of a TileDB resource — tiledb_object_type","text":"TileDB object type string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_walk.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively discover TileDB resources at a given root URI path — tiledb_object_walk","title":"Recursively discover TileDB resources at a given root URI path — tiledb_object_walk","text":"Recursively discover TileDB resources given root URI path","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_walk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively discover TileDB resources at a given root URI path — tiledb_object_walk","text":"","code":"tiledb_object_walk(   uri,   order = c(\"PREORDER\", \"POSTORDER\"),   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_walk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively discover TileDB resources at a given root URI path — tiledb_object_walk","text":"uri root uri path walk order traversal order, one \"PREORDER\" \"POSTORDER\" (default \"PREORDER\") ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_object_walk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively discover TileDB resources at a given root URI path — tiledb_object_walk","text":"dataframe object type, object uri string columns","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_put_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Store an object in TileDB Array Metadata under given key — tiledb_put_metadata","title":"Store an object in TileDB Array Metadata under given key — tiledb_put_metadata","text":"Store object TileDB Array Metadata given key","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_put_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store an object in TileDB Array Metadata under given key — tiledb_put_metadata","text":"","code":"tiledb_put_metadata(arr, key, val)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_put_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store an object in TileDB Array Metadata under given key — tiledb_put_metadata","text":"arr TileDB Array object key character value describing metadata key val object stored","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_put_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store an object in TileDB Array Metadata under given key — tiledb_put_metadata","text":"boolean value indicating success","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB Query object — tiledb_query-class","title":"An S4 class for a TileDB Query object — tiledb_query-class","text":"S4 class TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB Query object — tiledb_query-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a 'tiledb_query' object — tiledb_query","title":"Creates a 'tiledb_query' object — tiledb_query","text":"Creates 'tiledb_query' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a 'tiledb_query' object — tiledb_query","text":"","code":"tiledb_query(   array,   type = if (tiledb_version(TRUE) >= \"2.12.0\") c(\"READ\", \"WRITE\", \"DELETE\",     \"MODIFY_EXCLUSIVE\") else c(\"READ\", \"WRITE\"),   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a 'tiledb_query' object — tiledb_query","text":"array TileDB Array object type character value must one 'READ', 'WRITE', 'DELETE' (TileDB >= 2.12.0) ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a 'tiledb_query' object — tiledb_query","text":"'tiledb_query' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_add_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a range for a given query — tiledb_query_add_range","title":"Set a range for a given query — tiledb_query_add_range","text":"Set range given query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_add_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a range for a given query — tiledb_query_add_range","text":"","code":"tiledb_query_add_range(query, schema, attr, lowval, highval, stride = NULL)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_add_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a range for a given query — tiledb_query_add_range","text":"query TileDB Query object schema TileDB Schema object attr character variable dimension name range set lowval lower value range set highval higher value range set stride optional stride value range set","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_add_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a range for a given query — tiledb_query_add_range","text":"query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_add_range_with_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a range for a given query, also supplying type — tiledb_query_add_range_with_type","title":"Set a range for a given query, also supplying type — tiledb_query_add_range_with_type","text":"Set range given query, also supplying type","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_add_range_with_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a range for a given query, also supplying type — tiledb_query_add_range_with_type","text":"","code":"tiledb_query_add_range_with_type(   query,   idx,   datatype,   lowval,   highval,   stride = NULL )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_add_range_with_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a range for a given query, also supplying type — tiledb_query_add_range_with_type","text":"query TileDB Query object idx integer index, zero based, dimensions datatype character value containing data type lowval lower value range set highval highre value range set stride optional stride value range set","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_add_range_with_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a range for a given query, also supplying type — tiledb_query_add_range_with_type","text":"query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_alloc_buffer_ptr_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocate a Query buffer for reading a character attribute — tiledb_query_alloc_buffer_ptr_char","title":"Allocate a Query buffer for reading a character attribute — tiledb_query_alloc_buffer_ptr_char","text":"Allocate Query buffer reading character attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_alloc_buffer_ptr_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocate a Query buffer for reading a character attribute — tiledb_query_alloc_buffer_ptr_char","text":"","code":"tiledb_query_alloc_buffer_ptr_char(sizeoffsets, sizedata, nullable = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_alloc_buffer_ptr_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocate a Query buffer for reading a character attribute — tiledb_query_alloc_buffer_ptr_char","text":"sizeoffsets numeric value size offsets vector sizedata numeric value size data string nullable optional boolean indicating whether column can NULLs","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_alloc_buffer_ptr_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocate a Query buffer for reading a character attribute — tiledb_query_alloc_buffer_ptr_char","text":"external pointer allocated buffer object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_apply_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an aggregate oprtation on the given query attribute — tiledb_query_apply_aggregate","title":"Run an aggregate oprtation on the given query attribute — tiledb_query_apply_aggregate","text":"Run aggregate oprtation given query attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_apply_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an aggregate oprtation on the given query attribute — tiledb_query_apply_aggregate","text":"","code":"tiledb_query_apply_aggregate(   query,   attrname,   operation = c(\"Count\", \"NullCount\", \"Min\", \"Max\", \"Mean\", \"Sum\"),   nullable = TRUE )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_apply_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an aggregate oprtation on the given query attribute — tiledb_query_apply_aggregate","text":"query TileDB Query object attrname name attribute operation name aggregation operation nullable boolean toggle whether attribute nullable","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_apply_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an aggregate oprtation on the given query attribute — tiledb_query_apply_aggregate","text":"value aggregation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_buffer_alloc_ptr.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocate a Query buffer for a given type — tiledb_query_buffer_alloc_ptr","title":"Allocate a Query buffer for a given type — tiledb_query_buffer_alloc_ptr","text":"function allocates query buffer given data type.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_buffer_alloc_ptr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocate a Query buffer for a given type — tiledb_query_buffer_alloc_ptr","text":"","code":"tiledb_query_buffer_alloc_ptr(   query,   datatype,   ncells,   nullable = FALSE,   varnum = 1 )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_buffer_alloc_ptr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocate a Query buffer for a given type — tiledb_query_buffer_alloc_ptr","text":"query TileDB Query object datatype character value containing data type ncells number elements (bytes) nullable Optional boolean parameter indicating whether missing values allowed (another column allocated), default FALSE varnum Option intgeter parameter number elemements per variable, default one","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_buffer_alloc_ptr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocate a Query buffer for a given type — tiledb_query_buffer_alloc_ptr","text":"external pointer allocated buffer object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB QueryCondition object — tiledb_query_condition-class","title":"An S4 class for a TileDB QueryCondition object — tiledb_query_condition-class","text":"S4 class TileDB QueryCondition object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB QueryCondition object — tiledb_query_condition-class","text":"ptr external pointer underlying implementation init logical variable tracking query condition object initialized","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a 'tiledb_query_condition' object — tiledb_query_condition","title":"Creates a 'tiledb_query_condition' object — tiledb_query_condition","text":"Creates 'tiledb_query_condition' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a 'tiledb_query_condition' object — tiledb_query_condition","text":"","code":"tiledb_query_condition(ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a 'tiledb_query_condition' object — tiledb_query_condition","text":"ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a 'tiledb_query_condition' object — tiledb_query_condition","text":"'tiledb_query_condition' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine two 'tiledb_query_condition' objects — tiledb_query_condition_combine","title":"Combine two 'tiledb_query_condition' objects — tiledb_query_condition_combine","text":"Combines two query condition object using relatiional operator. Support operator '' generally available, '' operator available TileDB 2.10 newer used.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine two 'tiledb_query_condition' objects — tiledb_query_condition_combine","text":"","code":"tiledb_query_condition_combine(lhs, rhs, op)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine two 'tiledb_query_condition' objects — tiledb_query_condition_combine","text":"lhs 'tiledb_query_condition' object left-hand side relation rhs 'tiledb_query_condition' object left-hand side relation op character value relation, must one '', '' ''.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine two 'tiledb_query_condition' objects — tiledb_query_condition_combine","text":"combined 'tiledb_query_condition' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a query condition for vector 'IN' and 'NOT_IN' operations — tiledb_query_condition_create","title":"Create a query condition for vector 'IN' and 'NOT_IN' operations — tiledb_query_condition_create","text":"Uses ‘’ ‘NOT_IN’ operators given attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a query condition for vector 'IN' and 'NOT_IN' operations — tiledb_query_condition_create","text":"","code":"tiledb_query_condition_create(   name,   values,   op = \"IN\",   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a query condition for vector 'IN' and 'NOT_IN' operations — tiledb_query_condition_create","text":"name character value scheme attribute name values vector wiith given values, supported types integer, double, integer64 charactor op (optional) character value chosen set operation, must one ‘’ ‘NOT_IN’; default ‘’ ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a query condition for vector 'IN' and 'NOT_IN' operations — tiledb_query_condition_create","text":"query condition object returned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_init.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a 'tiledb_query_condition' object — tiledb_query_condition_init","title":"Initialize a 'tiledb_query_condition' object — tiledb_query_condition_init","text":"Initializes (possibly allocates) query condition object using triplet attribute name, comparison value, operator.  Six types conditions supported, take single scalar comparison argument attribute compare . present integer numeric attribute comparisons implemented.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_init.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a 'tiledb_query_condition' object — tiledb_query_condition_init","text":"","code":"tiledb_query_condition_init(   attr,   value,   dtype,   op,   qc = tiledb_query_condition() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_init.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a 'tiledb_query_condition' object — tiledb_query_condition_init","text":"attr character value scheme attribute name value scalar value attribute compared dtype character value TileDB data type attribute column, example 'FLOAT64' 'INT32' op character value comparison operation, must one 'LT', 'LE', 'GT', 'GE', 'EQ', 'NE'. qc (optional) 'tiledb_query_condition' object initialized call, none given new one allocated.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_init.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initialize a 'tiledb_query_condition' object — tiledb_query_condition_init","text":"initialized 'tiledb_query_condition' object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_set_use_enumeration.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable use of enumeration in query condition — tiledb_query_condition_set_use_enumeration","title":"Enable use of enumeration in query condition — tiledb_query_condition_set_use_enumeration","text":"Set boolean toggle signal use enumeration query condtion (TileDB 2.17 later)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_set_use_enumeration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable use of enumeration in query condition — tiledb_query_condition_set_use_enumeration","text":"","code":"tiledb_query_condition_set_use_enumeration(   qc,   use_enum,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_set_use_enumeration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable use of enumeration in query condition — tiledb_query_condition_set_use_enumeration","text":"qc 'tiledb_query_condition' object use_enum boolean set (TRUE) unset (FALSE) enumeration use ctx (optional) TileDB Ctx object; supplied default context object retrieved","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_condition_set_use_enumeration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable use of enumeration in query condition — tiledb_query_condition_set_use_enumeration","text":"Nothing retuned, function invoked side effect","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_create_buffer_ptr.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocate and populate a Query buffer for a given object of a given data type. — tiledb_query_create_buffer_ptr","title":"Allocate and populate a Query buffer for a given object of a given data type. — tiledb_query_create_buffer_ptr","text":"function allocates query buffer given data object given type assigns object content buffer.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_create_buffer_ptr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocate and populate a Query buffer for a given object of a given data type. — tiledb_query_create_buffer_ptr","text":"","code":"tiledb_query_create_buffer_ptr(query, datatype, object)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_create_buffer_ptr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocate and populate a Query buffer for a given object of a given data type. — tiledb_query_create_buffer_ptr","text":"query TileDB Query object datatype character value containing data type object vector object given type","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_create_buffer_ptr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocate and populate a Query buffer for a given object of a given data type. — tiledb_query_create_buffer_ptr","text":"external pointer allocated buffer object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_create_buffer_ptr_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Allocate and populate a Query buffer for writing the given char vector — tiledb_query_create_buffer_ptr_char","title":"Allocate and populate a Query buffer for writing the given char vector — tiledb_query_create_buffer_ptr_char","text":"Allocate populate Query buffer writing given char vector","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_create_buffer_ptr_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allocate and populate a Query buffer for writing the given char vector — tiledb_query_create_buffer_ptr_char","text":"","code":"tiledb_query_create_buffer_ptr_char(query, varvec)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_create_buffer_ptr_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allocate and populate a Query buffer for writing the given char vector — tiledb_query_create_buffer_ptr_char","text":"query TileDB Query object varvec vector strings","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_create_buffer_ptr_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Allocate and populate a Query buffer for writing the given char vector — tiledb_query_create_buffer_ptr_char","text":"external pointer allocated buffer object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_ctx.html","id":null,"dir":"Reference","previous_headings":"","what":"Return query context object — tiledb_query_ctx","title":"Return query context object — tiledb_query_ctx","text":"Return query context object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_ctx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return query context object — tiledb_query_ctx","text":"","code":"tiledb_query_ctx(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_ctx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return query context object — tiledb_query_ctx","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_ctx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return query context object — tiledb_query_ctx","text":"TileDB Context object retrieved query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_export_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Query Buffer to Pair of Arrow IO Pointers — tiledb_query_export_buffer","title":"Export Query Buffer to Pair of Arrow IO Pointers — tiledb_query_export_buffer","text":"function exports named buffer ‘READ’ query two Arrow C pointers.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_export_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Query Buffer to Pair of Arrow IO Pointers — tiledb_query_export_buffer","text":"","code":"tiledb_query_export_buffer(query, name, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_export_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Query Buffer to Pair of Arrow IO Pointers — tiledb_query_export_buffer","text":"query TileDB Query object name character variable identifying buffer ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_export_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Query Buffer to Pair of Arrow IO Pointers — tiledb_query_export_buffer","text":"nanoarrow object (external pointer Arrow Array Arrow Schema stored external pointer tag) classed S3 object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_finalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Finalize TileDB Query — tiledb_query_finalize","title":"Finalize TileDB Query — tiledb_query_finalize","text":"Finalize TileDB Query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_finalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finalize TileDB Query — tiledb_query_finalize","text":"","code":"tiledb_query_finalize(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_finalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finalize TileDB Query — tiledb_query_finalize","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_finalize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finalize TileDB Query — tiledb_query_finalize","text":"character value, either 'READ' 'WRITE'","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_buffer_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve content from a Query character buffer — tiledb_query_get_buffer_char","title":"Retrieve content from a Query character buffer — tiledb_query_get_buffer_char","text":"function uses query buffer character attribute dimension returns content.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_buffer_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve content from a Query character buffer — tiledb_query_get_buffer_char","text":"","code":"tiledb_query_get_buffer_char(bufptr, sizeoffsets = 0, sizestring = 0)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_buffer_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve content from a Query character buffer — tiledb_query_get_buffer_char","text":"bufptr external pointer query buffer sizeoffsets optional argument length internal offsets vector sizestring optional argument length internal string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_buffer_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve content from a Query character buffer — tiledb_query_get_buffer_char","text":"R object resulting query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_buffer_ptr.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve content from a Query buffer — tiledb_query_get_buffer_ptr","title":"Retrieve content from a Query buffer — tiledb_query_get_buffer_ptr","text":"function uses query buffer returns content.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_buffer_ptr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve content from a Query buffer — tiledb_query_get_buffer_ptr","text":"","code":"tiledb_query_get_buffer_ptr(bufptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_buffer_ptr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve content from a Query buffer — tiledb_query_get_buffer_ptr","text":"bufptr external pointer query buffer","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_buffer_ptr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve content from a Query buffer — tiledb_query_get_buffer_ptr","text":"R object resulting query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_est_result_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the estimated result size for a query and attribute — tiledb_query_get_est_result_size","title":"Retrieve the estimated result size for a query and attribute — tiledb_query_get_est_result_size","text":"reading sparse arrays, one know beforehand big result (unless one actually executes query). function offers way get estimated result size given attribute. TileDB actually execute query, getting estimated result fast.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_est_result_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the estimated result size for a query and attribute — tiledb_query_get_est_result_size","text":"","code":"tiledb_query_get_est_result_size(query, name)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_est_result_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the estimated result size for a query and attribute — tiledb_query_get_est_result_size","text":"query TileDB Query object name variable attribute name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_est_result_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the estimated result size for a query and attribute — tiledb_query_get_est_result_size","text":"estimate query result size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_est_result_size_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the estimated result size for a query and variable-sized attribute — tiledb_query_get_est_result_size_var","title":"Retrieve the estimated result size for a query and variable-sized attribute — tiledb_query_get_est_result_size_var","text":"reading variable-length attributes either dense sparse arrays, one know beforehand big result (unless one actually executes query). function offers way get estimated result size given attribute. TileDB actually execute query, getting estimated result fast.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_est_result_size_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the estimated result size for a query and variable-sized attribute — tiledb_query_get_est_result_size_var","text":"","code":"tiledb_query_get_est_result_size_var(query, name)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_est_result_size_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the estimated result size for a query and variable-sized attribute — tiledb_query_get_est_result_size_var","text":"query TileDB Query object name variable attribute name","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_est_result_size_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the estimated result size for a query and variable-sized attribute — tiledb_query_get_est_result_size_var","text":"estimate query result size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the Number of Fragments for Query — tiledb_query_get_fragment_num","title":"Retrieve the Number of Fragments for Query — tiledb_query_get_fragment_num","text":"function applicable ‘WRITE’ queries.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the Number of Fragments for Query — tiledb_query_get_fragment_num","text":"","code":"tiledb_query_get_fragment_num(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the Number of Fragments for Query — tiledb_query_get_fragment_num","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the Number of Fragments for Query — tiledb_query_get_fragment_num","text":"integer number fragments given query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_timestamp_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the timestamp range for a given Query Fragment — tiledb_query_get_fragment_timestamp_range","title":"Retrieve the timestamp range for a given Query Fragment — tiledb_query_get_fragment_timestamp_range","text":"function applicable ‘WRITE’ queries. time resolution TileDB millseconds since epoch R Datetime vector returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_timestamp_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the timestamp range for a given Query Fragment — tiledb_query_get_fragment_timestamp_range","text":"","code":"tiledb_query_get_fragment_timestamp_range(query, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_timestamp_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the timestamp range for a given Query Fragment — tiledb_query_get_fragment_timestamp_range","text":"query TileDB Query object idx integer (numeric) index ranging zero number fragments minus 1","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_timestamp_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the timestamp range for a given Query Fragment — tiledb_query_get_fragment_timestamp_range","text":"two-element datetime vector start end time fragment write.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_uri.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the URI for a given Query Fragment — tiledb_query_get_fragment_uri","title":"Retrieve the URI for a given Query Fragment — tiledb_query_get_fragment_uri","text":"function applicable ‘WRITE’ queries.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_uri.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the URI for a given Query Fragment — tiledb_query_get_fragment_uri","text":"","code":"tiledb_query_get_fragment_uri(query, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_uri.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the URI for a given Query Fragment — tiledb_query_get_fragment_uri","text":"query TileDB Query object idx integer (numeric) index ranging zero number fragments minus 1","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_fragment_uri.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the URI for a given Query Fragment — tiledb_query_get_fragment_uri","text":"character value fragment URI","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Get TileDB Query layout — tiledb_query_get_layout","title":"Get TileDB Query layout — tiledb_query_get_layout","text":"Get TileDB Query layout","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get TileDB Query layout — tiledb_query_get_layout","text":"","code":"tiledb_query_get_layout(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get TileDB Query layout — tiledb_query_get_layout","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get TileDB Query layout — tiledb_query_get_layout","text":"TileDB Query layout string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the query range for a query dimension and range index — tiledb_query_get_range","title":"Retrieve the query range for a query dimension and range index — tiledb_query_get_range","text":"Retrieve query range query dimension range index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the query range for a query dimension and range index — tiledb_query_get_range","text":"","code":"tiledb_query_get_range(query, dimidx, rngidx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the query range for a query dimension and range index — tiledb_query_get_range","text":"query TileDB Query object dimidx integer numeric index selecting dimension rngidx integer numeric index selection given range dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the query range for a query dimension and range index — tiledb_query_get_range","text":"integer vector elements start, end stride query range given dimension range index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range_num.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the number of ranges for a query dimension — tiledb_query_get_range_num","title":"Retrieve the number of ranges for a query dimension — tiledb_query_get_range_num","text":"Retrieve number ranges query dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range_num.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the number of ranges for a query dimension — tiledb_query_get_range_num","text":"","code":"tiledb_query_get_range_num(query, idx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range_num.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the number of ranges for a query dimension — tiledb_query_get_range_num","text":"query TileDB Query object idx integer numeric index selecting dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range_num.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the number of ranges for a query dimension — tiledb_query_get_range_num","text":"integer number query range given dimensions","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the query range for a variable-sized query dimension and range index — tiledb_query_get_range_var","title":"Retrieve the query range for a variable-sized query dimension and range index — tiledb_query_get_range_var","text":"Retrieve query range variable-sized query dimension range index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the query range for a variable-sized query dimension and range index — tiledb_query_get_range_var","text":"","code":"tiledb_query_get_range_var(query, dimidx, rngidx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the query range for a variable-sized query dimension and range index — tiledb_query_get_range_var","text":"query TileDB Query object dimidx integer index selecting variable-sized dimension rngidx integer index selection given range dimension","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_get_range_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the query range for a variable-sized query dimension and range index — tiledb_query_get_range_var","text":"string vector elements start end query range given dimension range index","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_import_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Import to Query Buffer from Pair of Arrow IO Pointers — tiledb_query_import_buffer","title":"Import to Query Buffer from Pair of Arrow IO Pointers — tiledb_query_import_buffer","text":"function imports named buffer ‘WRITE’ query two Arrow exerternal pointers.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_import_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import to Query Buffer from Pair of Arrow IO Pointers — tiledb_query_import_buffer","text":"","code":"tiledb_query_import_buffer(   query,   name,   nanoarrowptr,   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_import_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import to Query Buffer from Pair of Arrow IO Pointers — tiledb_query_import_buffer","text":"query TileDB Query object name character variable identifying buffer nanoarrowptr nanoarrow object (external pointer Arrow Array Arrow Schema stored external pointer tag) classed S3 object ctx tiledb_ctx object (optional)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_import_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import to Query Buffer from Pair of Arrow IO Pointers — tiledb_query_import_buffer","text":"update Query external pointer returned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements.html","id":null,"dir":"Reference","previous_headings":"","what":"Get TileDB Query result buffer element size — tiledb_query_result_buffer_elements","title":"Get TileDB Query result buffer element size — tiledb_query_result_buffer_elements","text":"underlying library functions returns pair values vector length two. first number number element offsets variable size attributes (always zero fixed-sized attributes coordinates). second number elements data buffer. variable-sized attributes first number number cells read (hence number offsets), second number number elements data buffer.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get TileDB Query result buffer element size — tiledb_query_result_buffer_elements","text":"","code":"tiledb_query_result_buffer_elements(query, attr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get TileDB Query result buffer element size — tiledb_query_result_buffer_elements","text":"query TileDB Query object attr character value containing attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get TileDB Query result buffer element size — tiledb_query_result_buffer_elements","text":"integer number elements results buffer given attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get TileDB Query result buffer element size — tiledb_query_result_buffer_elements","text":"function first made available scalar (corresponding second result) returned, still return value.","code":""},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"Get TileDB Query result buffer element size pair as vector — tiledb_query_result_buffer_elements_vec","title":"Get TileDB Query result buffer element size pair as vector — tiledb_query_result_buffer_elements_vec","text":"underlying library functions returns pair values vector length two. first number number element offsets variable size attributes (always zero fixed-sized attributes coordinates). second number elements data buffer. variable-sized attributes first number number cells read (hence number offsets), second number number elements data buffer. case nullable attribute, third element returned size validity buffer.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get TileDB Query result buffer element size pair as vector — tiledb_query_result_buffer_elements_vec","text":"","code":"tiledb_query_result_buffer_elements_vec(query, attr, nullable = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get TileDB Query result buffer element size pair as vector — tiledb_query_result_buffer_elements_vec","text":"query TileDB Query object attr character value containing attribute nullable logical variable ‘TRUE’ signal attribute nullable, ‘FALSE’ otherwise","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_result_buffer_elements_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get TileDB Query result buffer element size pair as vector — tiledb_query_result_buffer_elements_vec","text":"vector number elements offsets buffer (zero fixed-size attribute dimensions), number elements results buffer given attribute, (nullable) third element validity buffer size.","code":""},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer.html","id":null,"dir":"Reference","previous_headings":"","what":"Set TileDB Query buffer — tiledb_query_set_buffer","title":"Set TileDB Query buffer — tiledb_query_set_buffer","text":"function allocates query buffers directly R vectors case types match: integer, double, logical. general types see tiledb_query_buffer_alloc_ptr tiledb_query_buffer_assign_ptr","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set TileDB Query buffer — tiledb_query_set_buffer","text":"","code":"tiledb_query_set_buffer(query, attr, buffer)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set TileDB Query buffer — tiledb_query_set_buffer","text":"query TileDB Query object attr character value containing attribute buffer vector providing query buffer","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set TileDB Query buffer — tiledb_query_set_buffer","text":"modified query object, invisisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer_ptr.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigns to a Query buffer for a given attribute — tiledb_query_set_buffer_ptr","title":"Assigns to a Query buffer for a given attribute — tiledb_query_set_buffer_ptr","text":"function assigns given query buffer query.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer_ptr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigns to a Query buffer for a given attribute — tiledb_query_set_buffer_ptr","text":"","code":"tiledb_query_set_buffer_ptr(query, attr, bufptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer_ptr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigns to a Query buffer for a given attribute — tiledb_query_set_buffer_ptr","text":"query TileDB Query object attr character value containing attribute bufptr external pointer query buffer","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer_ptr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assigns to a Query buffer for a given attribute — tiledb_query_set_buffer_ptr","text":"modified query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer_ptr_char.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign a buffer to a Query attribute — tiledb_query_set_buffer_ptr_char","title":"Assign a buffer to a Query attribute — tiledb_query_set_buffer_ptr_char","text":"Assign buffer Query attribute","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer_ptr_char.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign a buffer to a Query attribute — tiledb_query_set_buffer_ptr_char","text":"","code":"tiledb_query_set_buffer_ptr_char(query, attr, bufptr)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer_ptr_char.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign a buffer to a Query attribute — tiledb_query_set_buffer_ptr_char","text":"query TileDB Query object attr character value containing attribute bufptr external pointer query buffer","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_buffer_ptr_char.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign a buffer to a Query attribute — tiledb_query_set_buffer_ptr_char","text":"modified query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_condition.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a query combination object for a query — tiledb_query_set_condition","title":"Set a query combination object for a query — tiledb_query_set_condition","text":"Set query combination object query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_condition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a query combination object for a query — tiledb_query_set_condition","text":"","code":"tiledb_query_set_condition(query, qc)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_condition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a query combination object for a query — tiledb_query_set_condition","text":"query TileDB Query object qc TileDB Query Combination object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_condition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a query combination object for a query — tiledb_query_set_condition","text":"modified query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Set TileDB Query layout — tiledb_query_set_layout","title":"Set TileDB Query layout — tiledb_query_set_layout","text":"Set TileDB Query layout","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set TileDB Query layout — tiledb_query_set_layout","text":"","code":"tiledb_query_set_layout(   query,   layout = c(\"COL_MAJOR\", \"ROW_MAJOR\", \"GLOBAL_ORDER\", \"UNORDERED\") )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set TileDB Query layout — tiledb_query_set_layout","text":"query TileDB Query object layout character variable layout; must one \"COL_MAJOR\", \"ROW_MAJOR\", \"GLOBAL_ORDER\", \"UNORDERED\")","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set TileDB Query layout — tiledb_query_set_layout","text":"modified query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_subarray.html","id":null,"dir":"Reference","previous_headings":"","what":"Set subarray for TileDB Query object — tiledb_query_set_subarray","title":"Set subarray for TileDB Query object — tiledb_query_set_subarray","text":"Set subarray TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_subarray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set subarray for TileDB Query object — tiledb_query_set_subarray","text":"","code":"tiledb_query_set_subarray(query, subarray, type)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_subarray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set subarray for TileDB Query object — tiledb_query_set_subarray","text":"query TileDB Query object subarray subarry vector object type optional type character, missing type inferred vector.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_set_subarray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set subarray for TileDB Query object — tiledb_query_set_subarray","text":"modified query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Return query statistics as a JSON string — tiledb_query_stats","title":"Return query statistics as a JSON string — tiledb_query_stats","text":"Return query statistics JSON string","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return query statistics as a JSON string — tiledb_query_stats","text":"","code":"tiledb_query_stats(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return query statistics as a JSON string — tiledb_query_stats","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return query statistics as a JSON string — tiledb_query_stats","text":"JSON-formatted string context statistics","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get TileDB Query status — tiledb_query_status","title":"Get TileDB Query status — tiledb_query_status","text":"Get TileDB Query status","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get TileDB Query status — tiledb_query_status","text":"","code":"tiledb_query_status(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get TileDB Query status — tiledb_query_status","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get TileDB Query status — tiledb_query_status","text":"character value describing query status","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_submit.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit TileDB Query — tiledb_query_submit","title":"Submit TileDB Query — tiledb_query_submit","text":"Note query object may need finalized via tiledb_query_finalize.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_submit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit TileDB Query — tiledb_query_submit","text":"","code":"tiledb_query_submit(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_submit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit TileDB Query — tiledb_query_submit","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_submit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit TileDB Query — tiledb_query_submit","text":"modified query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_submit_async.html","id":null,"dir":"Reference","previous_headings":"","what":"Submit TileDB Query asynchronously without a callback returning immediately — tiledb_query_submit_async","title":"Submit TileDB Query asynchronously without a callback returning immediately — tiledb_query_submit_async","text":"Note query object may need finalized via tiledb_query_finalize.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_submit_async.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Submit TileDB Query asynchronously without a callback returning immediately — tiledb_query_submit_async","text":"","code":"tiledb_query_submit_async(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_submit_async.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Submit TileDB Query asynchronously without a callback returning immediately — tiledb_query_submit_async","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_submit_async.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Submit TileDB Query asynchronously without a callback returning immediately — tiledb_query_submit_async","text":"modified query object, invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Return TileDB Query type — tiledb_query_type","title":"Return TileDB Query type — tiledb_query_type","text":"Return TileDB Query type","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return TileDB Query type — tiledb_query_type","text":"","code":"tiledb_query_type(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return TileDB Query type — tiledb_query_type","text":"query TileDB Query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_query_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return TileDB Query type — tiledb_query_type","text":"character value, either 'READ' 'WRITE'","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_dim_attr_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dimension or Attribute Status — tiledb_schema_get_dim_attr_status","title":"Get Dimension or Attribute Status — tiledb_schema_get_dim_attr_status","text":"Note function unexported internal function can called using colons tiledb:::tiledb_schema_get_dim_attr_status(sch).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_dim_attr_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dimension or Attribute Status — tiledb_schema_get_dim_attr_status","text":"","code":"tiledb_schema_get_dim_attr_status(sch)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_dim_attr_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dimension or Attribute Status — tiledb_schema_get_dim_attr_status","text":"sch TileDB Schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_dim_attr_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dimension or Attribute Status — tiledb_schema_get_dim_attr_status","text":"integer vector element corresponds schema entry, value one signals dimension value two attribute.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_enumeration_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Dimension or Attribute Status — tiledb_schema_get_enumeration_status","title":"Get Dimension or Attribute Status — tiledb_schema_get_enumeration_status","text":"Note function unexported internal function can called using colons tiledb:::tiledb_schema_get_enumeration_status(sch).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_enumeration_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Dimension or Attribute Status — tiledb_schema_get_enumeration_status","text":"","code":"tiledb_schema_get_enumeration_status(sch)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_enumeration_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Dimension or Attribute Status — tiledb_schema_get_enumeration_status","text":"sch TileDB Schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_enumeration_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Dimension or Attribute Status — tiledb_schema_get_enumeration_status","text":"integer vector element corresponds schema entry, value one signals dimension value two attribute.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all Dimension and Attribute Names — tiledb_schema_get_names","title":"Get all Dimension and Attribute Names — tiledb_schema_get_names","text":"Get Dimension Attribute Names","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all Dimension and Attribute Names — tiledb_schema_get_names","text":"","code":"tiledb_schema_get_names(sch)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all Dimension and Attribute Names — tiledb_schema_get_names","text":"sch TileDB Schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all Dimension and Attribute Names — tiledb_schema_get_names","text":"character vector dimension attribute names","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all Dimension and Attribute Types — tiledb_schema_get_types","title":"Get all Dimension and Attribute Types — tiledb_schema_get_types","text":"Get Dimension Attribute Types","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all Dimension and Attribute Types — tiledb_schema_get_types","text":"","code":"tiledb_schema_get_types(sch)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all Dimension and Attribute Types — tiledb_schema_get_types","text":"sch TileDB Schema object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_get_types.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all Dimension and Attribute Types — tiledb_schema_get_types","text":"character vector dimension attribute data types","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_object.html","id":null,"dir":"Reference","previous_headings":"","what":"Succinctly describe a TileDB array schema — tiledb_schema_object","title":"Succinctly describe a TileDB array schema — tiledb_schema_object","text":"internal function exported.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Succinctly describe a TileDB array schema — tiledb_schema_object","text":"","code":"tiledb_schema_object(array)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Succinctly describe a TileDB array schema — tiledb_schema_object","text":"array TileDB Array object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_schema_object.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Succinctly describe a TileDB array schema — tiledb_schema_object","text":"list containing two data frames, one describing overall array well one descriptions dimensions attributes schema","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_set_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Store a TileDB context object in the package cache — tiledb_set_context","title":"Store a TileDB context object in the package cache — tiledb_set_context","text":"Store TileDB context object package cache","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_set_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store a TileDB context object in the package cache — tiledb_set_context","text":"","code":"tiledb_set_context(ctx)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_set_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store a TileDB context object in the package cache — tiledb_set_context","text":"ctx TileDB context object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_set_context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store a TileDB context object in the package cache — tiledb_set_context","text":"NULL, invisibly. function invoked side-effect storing VFS object.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_set_vfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Store a TileDB VFS object in the package environment — tiledb_set_vfs","title":"Store a TileDB VFS object in the package environment — tiledb_set_vfs","text":"Store TileDB VFS object package environment","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_set_vfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store a TileDB VFS object in the package environment — tiledb_set_vfs","text":"","code":"tiledb_set_vfs(vfs)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_set_vfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store a TileDB VFS object in the package environment — tiledb_set_vfs","text":"vfs TileDB VFS object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_set_vfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Store a TileDB VFS object in the package environment — tiledb_set_vfs","text":"NULL, invisibly. function invoked side-effect storing VFS object.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_sparse-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB sparse array — tiledb_sparse-class","title":"An S4 class for a TileDB sparse array — tiledb_sparse-class","text":"S4 class TileDB sparse array","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_sparse-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB sparse array — tiledb_sparse-class","text":"ctx TileDB context object uri character despription .data.frame logical value attrs character vector extended logical value ptr External pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_sparse-class.html","id":"planned-deprecation","dir":"Reference","previous_headings":"","what":"Planned Deprecation","title":"An S4 class for a TileDB sparse array — tiledb_sparse-class","text":"plan deprecate tiledb_sparse array type future release. exact timelines finalised, advised tiledb_array dense sparse arrays going forward.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_disable.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable internal TileDB statistics counters — tiledb_stats_disable","title":"Disable internal TileDB statistics counters — tiledb_stats_disable","text":"function ends collection internal statistics.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_disable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable internal TileDB statistics counters — tiledb_stats_disable","text":"","code":"tiledb_stats_disable()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_dump.html","id":null,"dir":"Reference","previous_headings":"","what":"Dumps internal TileDB statistics to file or stdout — tiledb_stats_dump","title":"Dumps internal TileDB statistics to file or stdout — tiledb_stats_dump","text":"Dumps internal TileDB statistics file stdout","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_dump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dumps internal TileDB statistics to file or stdout — tiledb_stats_dump","text":"","code":"tiledb_stats_dump(path)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_dump.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dumps internal TileDB statistics to file or stdout — tiledb_stats_dump","text":"path Character variable path stats file; empty string passed result displayed stdout.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_dump.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dumps internal TileDB statistics to file or stdout — tiledb_stats_dump","text":"","code":"pth <- tempfile() tiledb_stats_dump(pth) cat(readLines(pth)[1:10], sep = \"\\n\") #> [ #>  #> ] #> NA #> NA #> NA #> NA #> NA #> NA #> NA"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_enable.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable internal TileDB statistics counters — tiledb_stats_enable","title":"Enable internal TileDB statistics counters — tiledb_stats_enable","text":"function starts collection internal statistics.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_enable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable internal TileDB statistics counters — tiledb_stats_enable","text":"","code":"tiledb_stats_enable()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print internal TileDB statistics — tiledb_stats_print","title":"Print internal TileDB statistics — tiledb_stats_print","text":"function convenience wrapper tiledb_stats_dump.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print internal TileDB statistics — tiledb_stats_print","text":"","code":"tiledb_stats_print()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_raw_dump.html","id":null,"dir":"Reference","previous_headings":"","what":"Dumps internal TileDB statistics as JSON to a string — tiledb_stats_raw_dump","title":"Dumps internal TileDB statistics as JSON to a string — tiledb_stats_raw_dump","text":"function requires TileDB Embedded 2.0.3 later.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_raw_dump.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dumps internal TileDB statistics as JSON to a string — tiledb_stats_raw_dump","text":"","code":"tiledb_stats_raw_dump()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_raw_dump.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dumps internal TileDB statistics as JSON to a string — tiledb_stats_raw_dump","text":"","code":"txt <- tiledb_stats_raw_dump() cat(txt, \"\\n\") #> [ #>  #> ] #>"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_raw_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets internal TileDB statistics as JSON string — tiledb_stats_raw_get","title":"Gets internal TileDB statistics as JSON string — tiledb_stats_raw_get","text":"function (now deprecated) convenience wrapper tiledb_stats_raw_dump returns result JSON string. required TileDB Embedded 2.0.3 later.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_raw_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets internal TileDB statistics as JSON string — tiledb_stats_raw_get","text":"","code":"tiledb_stats_raw_get()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_raw_print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print internal TileDB statistics as JSON — tiledb_stats_raw_print","title":"Print internal TileDB statistics as JSON — tiledb_stats_raw_print","text":"function convenience wrapper tiledb_stats_raw_dump. required TileDB Embedded 2.0.3 later.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_raw_print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print internal TileDB statistics as JSON — tiledb_stats_raw_print","text":"","code":"tiledb_stats_raw_print()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_reset.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset internal TileDB statistics counters — tiledb_stats_reset","title":"Reset internal TileDB statistics counters — tiledb_stats_reset","text":"function resets counters internal statistics.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_stats_reset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset internal TileDB statistics counters — tiledb_stats_reset","text":"","code":"tiledb_stats_reset()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB Subarray — tiledb_subarray-class","title":"An S4 class for a TileDB Subarray — tiledb_subarray-class","text":"S4 class TileDB Subarray","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB Subarray — tiledb_subarray-class","text":"ptr External pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs a tiledb_subarray object from a TileDB Query — tiledb_subarray","title":"Constructs a tiledb_subarray object from a TileDB Query — tiledb_subarray","text":"Constructs tiledb_subarray object TileDB Query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs a tiledb_subarray object from a TileDB Query — tiledb_subarray","text":"","code":"tiledb_subarray(query)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs a tiledb_subarray object from a TileDB Query — tiledb_subarray","text":"query TileDB Query Object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs a tiledb_subarray object from a TileDB Query — tiledb_subarray","text":"tiledb_subarray object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray_to_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a Subarray to a Query — tiledb_subarray_to_query","title":"Apply a Subarray to a Query — tiledb_subarray_to_query","text":"Apply Subarray Query","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray_to_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a Subarray to a Query — tiledb_subarray_to_query","text":"","code":"tiledb_subarray_to_query(query, subarray)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray_to_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a Subarray to a Query — tiledb_subarray_to_query","text":"query TileDB Query Object subarray TileDB Subarray Object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_subarray_to_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a Subarray to a Query — tiledb_subarray_to_query","text":"tiledb_query object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_version.html","id":null,"dir":"Reference","previous_headings":"","what":"The version of the libtiledb library — tiledb_version","title":"The version of the libtiledb library — tiledb_version","text":"version libtiledb library","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The version of the libtiledb library — tiledb_version","text":"","code":"tiledb_version(compact = FALSE)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The version of the libtiledb library — tiledb_version","text":"compact Logical value indicating wheter compact package_version object returned","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The version of the libtiledb library — tiledb_version","text":"named int vector c(major, minor, patch), select, package_version object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The version of the libtiledb library — tiledb_version","text":"","code":"tiledb_version() #> major minor patch  #>     2    26     2  tiledb_version(compact = TRUE) #> [1] ‘2.26.2’"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a TileDB VFS object — tiledb_vfs-class","title":"An S4 class for a TileDB VFS object — tiledb_vfs-class","text":"S4 class TileDB VFS object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a TileDB VFS object — tiledb_vfs-class","text":"ptr external pointer underlying implementation","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a tiledb_vfs object — tiledb_vfs","title":"Creates a tiledb_vfs object — tiledb_vfs","text":"Creates tiledb_vfs object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a tiledb_vfs object — tiledb_vfs","text":"","code":"tiledb_vfs(config = NULL, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a tiledb_vfs object — tiledb_vfs","text":"config (optional) character vector config parameter names, values ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a tiledb_vfs object — tiledb_vfs","text":"tiledb_vfs object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a tiledb_vfs object — tiledb_vfs","text":"","code":"# default configuration vfs <- tiledb_vfs()"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_close.html","id":null,"dir":"Reference","previous_headings":"","what":"Close a TileDB VFS Filehandle — tiledb_vfs_close","title":"Close a TileDB VFS Filehandle — tiledb_vfs_close","text":"Close TileDB VFS Filehandle","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_close.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close a TileDB VFS Filehandle — tiledb_vfs_close","text":"","code":"tiledb_vfs_close(fh, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_close.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close a TileDB VFS Filehandle — tiledb_vfs_close","text":"fh TileDB VFS Filehandle external pointer returned tiledb_vfs_open ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_close.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Close a TileDB VFS Filehandle — tiledb_vfs_close","text":"result close operation returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_copy_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a file to VFS — tiledb_vfs_copy_file","title":"Copy a file to VFS — tiledb_vfs_copy_file","text":"Copy file VFS","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_copy_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a file to VFS — tiledb_vfs_copy_file","text":"","code":"tiledb_vfs_copy_file(file, uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_copy_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a file to VFS — tiledb_vfs_copy_file","text":"file Character variable local file path uri Character variable URI describing file path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_copy_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a file to VFS — tiledb_vfs_copy_file","text":"uri value removed file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_create_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a VFS Bucket — tiledb_vfs_create_bucket","title":"Create a VFS Bucket — tiledb_vfs_create_bucket","text":"Create VFS Bucket","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_create_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a VFS Bucket — tiledb_vfs_create_bucket","text":"","code":"tiledb_vfs_create_bucket(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_create_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a VFS Bucket — tiledb_vfs_create_bucket","text":"uri Character variable URI describing cloud bucket vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_create_bucket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a VFS Bucket — tiledb_vfs_create_bucket","text":"uri value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_create_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a VFS Directory — tiledb_vfs_create_dir","title":"Create a VFS Directory — tiledb_vfs_create_dir","text":"Create VFS Directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_create_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a VFS Directory — tiledb_vfs_create_dir","text":"","code":"tiledb_vfs_create_dir(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_create_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a VFS Directory — tiledb_vfs_create_dir","text":"uri Character variable URI describing diretory path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_create_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a VFS Directory — tiledb_vfs_create_dir","text":"uri value created directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_dir_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Return VFS Directory Size — tiledb_vfs_dir_size","title":"Return VFS Directory Size — tiledb_vfs_dir_size","text":"Return VFS Directory Size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_dir_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return VFS Directory Size — tiledb_vfs_dir_size","text":"","code":"tiledb_vfs_dir_size(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_dir_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return VFS Directory Size — tiledb_vfs_dir_size","text":"uri Character variable URI describing file path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_dir_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return VFS Directory Size — tiledb_vfs_dir_size","text":"size directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_empty_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"Empty a VFS Bucket — tiledb_vfs_empty_bucket","title":"Empty a VFS Bucket — tiledb_vfs_empty_bucket","text":"Empty VFS Bucket","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_empty_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empty a VFS Bucket — tiledb_vfs_empty_bucket","text":"","code":"tiledb_vfs_empty_bucket(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_empty_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empty a VFS Bucket — tiledb_vfs_empty_bucket","text":"uri Character variable URI describing cloud bucket vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_empty_bucket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empty a VFS Bucket — tiledb_vfs_empty_bucket","text":"URI value emptied","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_file_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Return VFS File Size — tiledb_vfs_file_size","title":"Return VFS File Size — tiledb_vfs_file_size","text":"Return VFS File Size","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_file_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return VFS File Size — tiledb_vfs_file_size","text":"","code":"tiledb_vfs_file_size(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_file_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return VFS File Size — tiledb_vfs_file_size","text":"uri Character variable URI describing file path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_file_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return VFS File Size — tiledb_vfs_file_size","text":"size file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for VFS Bucket — tiledb_vfs_is_bucket","title":"Check for VFS Bucket — tiledb_vfs_is_bucket","text":"Check VFS Bucket","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for VFS Bucket — tiledb_vfs_is_bucket","text":"","code":"tiledb_vfs_is_bucket(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for VFS Bucket — tiledb_vfs_is_bucket","text":"uri Character variable URI describing cloud bucket vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_bucket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for VFS Bucket — tiledb_vfs_is_bucket","text":"boolean value indicating valid bucket","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_bucket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for VFS Bucket — tiledb_vfs_is_bucket","text":"","code":"if (FALSE) { # \\dontrun{ cfg <- tiledb_config() cfg[\"vfs.s3.region\"] <- \"us-west-1\" ctx <- tiledb_ctx(cfg) vfs <- tiledb_vfs() tiledb_vfs_is_bucket(vfs, \"s3://tiledb-public-us-west-1/test-array-4x4\") } # }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for VFS Directory — tiledb_vfs_is_dir","title":"Test for VFS Directory — tiledb_vfs_is_dir","text":"Test VFS Directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for VFS Directory — tiledb_vfs_is_dir","text":"","code":"tiledb_vfs_is_dir(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for VFS Directory — tiledb_vfs_is_dir","text":"uri Character variable URI describing diretory path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for VFS Directory — tiledb_vfs_is_dir","text":"boolean value indicating directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_empty_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for empty VFS Bucket — tiledb_vfs_is_empty_bucket","title":"Check for empty VFS Bucket — tiledb_vfs_is_empty_bucket","text":"Check empty VFS Bucket","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_empty_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for empty VFS Bucket — tiledb_vfs_is_empty_bucket","text":"","code":"tiledb_vfs_is_empty_bucket(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_empty_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for empty VFS Bucket — tiledb_vfs_is_empty_bucket","text":"uri Character variable URI describing cloud bucket vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_empty_bucket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for empty VFS Bucket — tiledb_vfs_is_empty_bucket","text":"boolean value indicating empty bucket","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_empty_bucket.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for empty VFS Bucket — tiledb_vfs_is_empty_bucket","text":"","code":"if (FALSE) { # \\dontrun{ cfg <- tiledb_config() cfg[\"vfs.s3.region\"] <- \"us-west-1\" ctx <- tiledb_ctx(cfg) vfs <- tiledb_vfs() tiledb_vfs_is_empty_bucket(vfs, \"s3://tiledb-public-us-west-1/test-array-4x4\") } # }"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for VFS File — tiledb_vfs_is_file","title":"Test for VFS File — tiledb_vfs_is_file","text":"Test VFS File","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for VFS File — tiledb_vfs_is_file","text":"","code":"tiledb_vfs_is_file(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for VFS File — tiledb_vfs_is_file","text":"uri Character variable URI describing file path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_is_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for VFS File — tiledb_vfs_is_file","text":"boolean value indicating file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"Return VFS Directory Listing — tiledb_vfs_ls","title":"Return VFS Directory Listing — tiledb_vfs_ls","text":"Return VFS Directory Listing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return VFS Directory Listing — tiledb_vfs_ls","text":"","code":"tiledb_vfs_ls(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return VFS Directory Listing — tiledb_vfs_ls","text":"uri Character variable URI describing file path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return VFS Directory Listing — tiledb_vfs_ls","text":"content directory, non-recursive","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_ls_recursive.html","id":null,"dir":"Reference","previous_headings":"","what":"Recursively list objects from given URI — tiledb_vfs_ls_recursive","title":"Recursively list objects from given URI — tiledb_vfs_ls_recursive","text":"functionality currently limited S3 URIs.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_ls_recursive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recursively list objects from given URI — tiledb_vfs_ls_recursive","text":"","code":"tiledb_vfs_ls_recursive(   uri,   vfs = tiledb_get_vfs(),   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_ls_recursive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recursively list objects from given URI — tiledb_vfs_ls_recursive","text":"uri Character variable URI describing file path vfs (optiona) TileDB VFS object; default use cached value. ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_ls_recursive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recursively list objects from given URI — tiledb_vfs_ls_recursive","text":"data.frame object two columns full path object size bytes","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_move_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Move (or rename) a VFS Directory — tiledb_vfs_move_dir","title":"Move (or rename) a VFS Directory — tiledb_vfs_move_dir","text":"Move (rename) VFS Directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_move_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move (or rename) a VFS Directory — tiledb_vfs_move_dir","text":"","code":"tiledb_vfs_move_dir(olduri, newuri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_move_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move (or rename) a VFS Directory — tiledb_vfs_move_dir","text":"olduri Character variable existing URI describing directory path newuri Character variable new desired URI directory path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_move_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move (or rename) a VFS Directory — tiledb_vfs_move_dir","text":"newuri value moved directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_move_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Move (or rename) a VFS File — tiledb_vfs_move_file","title":"Move (or rename) a VFS File — tiledb_vfs_move_file","text":"Move (rename) VFS File","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_move_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move (or rename) a VFS File — tiledb_vfs_move_file","text":"","code":"tiledb_vfs_move_file(olduri, newuri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_move_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move (or rename) a VFS File — tiledb_vfs_move_file","text":"olduri Character variable existing URI describing file path newuri Character variable new desired URI file path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_move_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move (or rename) a VFS File — tiledb_vfs_move_file","text":"newuri value moved file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a TileDB VFS Filehandle for reading or writing — tiledb_vfs_open","title":"Open a TileDB VFS Filehandle for reading or writing — tiledb_vfs_open","text":"Open TileDB VFS Filehandle reading writing","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a TileDB VFS Filehandle for reading or writing — tiledb_vfs_open","text":"","code":"tiledb_vfs_open(   binfile,   mode = c(\"READ\", \"WRITE\", \"APPEND\"),   vfs = tiledb_get_vfs(),   ctx = tiledb_get_context() )"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a TileDB VFS Filehandle for reading or writing — tiledb_vfs_open","text":"binfile character variable describing (binary) file opened mode character variable value ‘READ’, ‘WRITE’ ‘APPEND’ vfs TileDB VFS object; default use cached value. ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a TileDB VFS Filehandle for reading or writing — tiledb_vfs_open","text":"TileDB VFS Filehandle object (external pointer)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read from a TileDB VFS Filehandle — tiledb_vfs_read","title":"Read from a TileDB VFS Filehandle — tiledb_vfs_read","text":"interface currently defaults reading integer vector. suitable R objects raw vector used (de)serialization can mapped easily integer vector. also possible memcpy contiguous memory integer vector (non-R) data transferred.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read from a TileDB VFS Filehandle — tiledb_vfs_read","text":"","code":"tiledb_vfs_read(fh, offset, nbytes, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read from a TileDB VFS Filehandle — tiledb_vfs_read","text":"fh TileDB VFS Filehandle external pointer returned tiledb_vfs_open offset scalar value byte offset beginning file zero. nbytes scalar value number bytes read. ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read from a TileDB VFS Filehandle — tiledb_vfs_read","text":"binary file content returned integer vector.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a VFS Bucket — tiledb_vfs_remove_bucket","title":"Remove a VFS Bucket — tiledb_vfs_remove_bucket","text":"Remove VFS Bucket","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a VFS Bucket — tiledb_vfs_remove_bucket","text":"","code":"tiledb_vfs_remove_bucket(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a VFS Bucket — tiledb_vfs_remove_bucket","text":"uri Character variable URI describing cloud bucket vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_bucket.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a VFS Bucket — tiledb_vfs_remove_bucket","text":"uri value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a VFS Directory — tiledb_vfs_remove_dir","title":"Remove a VFS Directory — tiledb_vfs_remove_dir","text":"Remove VFS Directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a VFS Directory — tiledb_vfs_remove_dir","text":"","code":"tiledb_vfs_remove_dir(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a VFS Directory — tiledb_vfs_remove_dir","text":"uri Character variable URI describing diretory path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a VFS Directory — tiledb_vfs_remove_dir","text":"uri value removed directory","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove a VFS File — tiledb_vfs_remove_file","title":"Remove a VFS File — tiledb_vfs_remove_file","text":"Remove VFS File","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove a VFS File — tiledb_vfs_remove_file","text":"","code":"tiledb_vfs_remove_file(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove a VFS File — tiledb_vfs_remove_file","text":"uri Character variable URI describing file path vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_remove_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove a VFS File — tiledb_vfs_remove_file","text":"uri value removed file","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_serialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Serialize an R Object to a VFS-accessible URI — tiledb_vfs_serialize","title":"Serialize an R Object to a VFS-accessible URI — tiledb_vfs_serialize","text":"Serialize R Object VFS-accessible URI","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_serialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serialize an R Object to a VFS-accessible URI — tiledb_vfs_serialize","text":"","code":"tiledb_vfs_serialize(obj, uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_serialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serialize an R Object to a VFS-accessible URI — tiledb_vfs_serialize","text":"obj R object passed serialize() uri Character variable URI describing file path RDS file vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_serialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serialize an R Object to a VFS-accessible URI — tiledb_vfs_serialize","text":"uri returned invisibly","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_sync.html","id":null,"dir":"Reference","previous_headings":"","what":"Sync a TileDB VFS Filehandle — tiledb_vfs_sync","title":"Sync a TileDB VFS Filehandle — tiledb_vfs_sync","text":"Sync TileDB VFS Filehandle","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_sync.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sync a TileDB VFS Filehandle — tiledb_vfs_sync","text":"","code":"tiledb_vfs_sync(fh, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_sync.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sync a TileDB VFS Filehandle — tiledb_vfs_sync","text":"fh TileDB VFS Filehandle external pointer returned tiledb_vfs_open ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_sync.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sync a TileDB VFS Filehandle — tiledb_vfs_sync","text":"result sync operation returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_touch.html","id":null,"dir":"Reference","previous_headings":"","what":"Touch a VFS URI Resource — tiledb_vfs_touch","title":"Touch a VFS URI Resource — tiledb_vfs_touch","text":"Touch VFS URI Resource","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_touch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Touch a VFS URI Resource — tiledb_vfs_touch","text":"","code":"tiledb_vfs_touch(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_touch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Touch a VFS URI Resource — tiledb_vfs_touch","text":"uri Character variable URI describing bucket, file directory vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_touch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Touch a VFS URI Resource — tiledb_vfs_touch","text":"uri value","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_unserialize.html","id":null,"dir":"Reference","previous_headings":"","what":"Unserialize an R Object from a VFS-accessible URI — tiledb_vfs_unserialize","title":"Unserialize an R Object from a VFS-accessible URI — tiledb_vfs_unserialize","text":"Unserialize R Object VFS-accessible URI","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_unserialize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unserialize an R Object from a VFS-accessible URI — tiledb_vfs_unserialize","text":"","code":"tiledb_vfs_unserialize(uri, vfs = tiledb_get_vfs())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_unserialize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unserialize an R Object from a VFS-accessible URI — tiledb_vfs_unserialize","text":"uri Character variable URI describing file path RDS file vfs TileDB VFS object; default use cached value.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_unserialize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unserialize an R Object from a VFS-accessible URI — tiledb_vfs_unserialize","text":"unserialized object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to a TileDB VFS Filehandle — tiledb_vfs_write","title":"Write to a TileDB VFS Filehandle — tiledb_vfs_write","text":"interface currently defaults using integer vector. suitable R objects raw vector result serialization can mapped easily integer vector. also possible memcpy contiguous memory integer vector (non-R) data transferred.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to a TileDB VFS Filehandle — tiledb_vfs_write","text":"","code":"tiledb_vfs_write(fh, vec, ctx = tiledb_get_context())"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to a TileDB VFS Filehandle — tiledb_vfs_write","text":"fh TileDB VFS Filehandle external pointer returned tiledb_vfs_open vec integer vector content written ctx (optional) TileDB Ctx object","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/tiledb_vfs_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write to a TileDB VFS Filehandle — tiledb_vfs_write","text":"result write operation returned.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/vfs_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a custom file connection — vfs_file","title":"Create a custom file connection — vfs_file","text":"Create custom file connection","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/vfs_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a custom file connection — vfs_file","text":"","code":"vfs_file(description, mode = \"\", verbosity = 0L)"},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/vfs_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a custom file connection — vfs_file","text":"description path filename; contrary rconnection connection object supported. mode character string. description open connection opened upon creation e.g. \"rb\". Default \"\" (empty string) means open connection creation - user must still call open(). Note: \"open\" string provided, user must still call close() otherwise contents file completely flushed connection garbage collected. verbosity integer value 0, 1, 2. Default: 0. Set 0 debugging messages, 1 high-level messages verbosity = 2 debugging messages.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/vfs_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a custom file connection — vfs_file","text":"vfs_file() connection works like file() connection R . connection works ASCII binary data, e.g. using readLines() readBin().","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/reference/vfs_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a custom file connection — vfs_file","text":"","code":"if (FALSE) { # \\dontrun{ tmp <- tempfile() dat <- as.raw(1:255) writeBin(dat, vfs_file(tmp)) readBin(vfs_file(tmp),  raw(), 1000) } # }"},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0302","dir":"Changelog","previous_headings":"","what":"tiledb 0.30.2","title":"tiledb 0.30.2","text":"release R package builds TileDB 2.26.2, also tested earlier releases well development version (#757) Fix MacOS rpath (#760) Fix “Can’t read domain dimensions type UINT16” (#758)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0301","dir":"Changelog","previous_headings":"","what":"tiledb 0.30.1","title":"tiledb 0.30.1","text":"release R package builds TileDB 2.26.1, also tested earlier releases well development version (#757)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0300","dir":"Changelog","previous_headings":"","what":"tiledb 0.30.0","title":"tiledb 0.30.0","text":"release R package builds TileDB 2.26.0, also tested earlier releases well development version (#745, #749, #750, #754, #755)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-30-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.30.0","text":"Error messages displayed mismatched external pointer detected now show expected encountered types (#740) NDRectangle objects can now instantiate domain data types (#741, #742) NDRectangle objects can now return number dimensions dimension data types (#743) FragmentInfo objects dump via << stringstream operator instead now-deprecated dump() method (#753)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"documentation-0-30-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"tiledb 0.30.0","text":"documentation website now uses favicon symbols pages rendered (#739)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-30-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.30.0","text":"nighly valgrind matrix now includes release 2.26.0 (#744) continuous integration script updated reflecting external changes (#746)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"removals-0-30-0","dir":"Changelog","previous_headings":"","what":"Removals","title":"tiledb 0.30.0","text":"Boolean arguments .data.frame, .matrix .array tiledb_array() accessor, deprecated release 0.20.0 July 2023 favor general return_as=\"...\" form, removed. (#751)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"deprecation-0-30-0","dir":"Changelog","previous_headings":"","what":"Deprecation","title":"tiledb 0.30.0","text":"BioConductor package  still relies .data.frame temporarily re-admitted argument. expected removed following upcoming 3.20 release BioConducto.r (#752)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0290","dir":"Changelog","previous_headings":"","what":"tiledb 0.29.0","title":"tiledb 0.29.0","text":"release R package builds TileDB 2.25.0, also tested earlier releases well development version (#728, #736)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-29-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.29.0","text":"Three deprecated calls dump() methods TileDB Embedded objects now use preferred streaming alternatives (#727) Two already deprecated functions removed TileDB 2.26.0 longer used (#732) vendored nanoarrow updated release 0.5.0 (#733) Fragments can now removed supplying vector fragment URIs (#734) NDRectangle CurrentDomain objects supported (2.25.0 newer) can used ArraySchema ArraySchemeEvolution domain (#735, #737)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-29-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.29.0","text":"nighly valgrind matrix now includes release 2.25.0 (#729)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0282","dir":"Changelog","previous_headings":"","what":"tiledb 0.28.2","title":"tiledb 0.28.2","text":"release R package builds TileDB 2.24.2, also tested earlier releases well development version (#725)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0281","dir":"Changelog","previous_headings":"","what":"tiledb 0.28.1","title":"tiledb 0.28.1","text":"release R package builds TileDB 2.24.1, also tested earlier releases well development version (#714, #715, #717, #724)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-28-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.28.1","text":"creating arrays fromDataFrame, start /end timestamps can now specified (#719)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-28-1","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.28.1","text":"nighly continuous integration matrix now included Core release 2.24.0 2.22.0 dropped (#721) Conda build now accomodating change #710 (#722)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0280","dir":"Changelog","previous_headings":"","what":"tiledb 0.28.0","title":"tiledb 0.28.0","text":"release R package builds TileDB 2.24.0, also tested earlier releases well development version (#714, #715, #717)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-28-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.28.0","text":"Three internal unexported helper functions now document clearly can called explicitly. (#709) Reading writing text- binary files supported VFS backend now supported. (#710)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-28-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.28.0","text":"Building TileDB Embedded source now uses tiledb install-tiledb targets single CMake step. (#711, #713) time-travel tests now uses absolute (given) timestamps writes well reads. (#716)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0270","dir":"Changelog","previous_headings":"","what":"tiledb 0.27.0","title":"tiledb 0.27.0","text":"release R package builds TileDB 2.23.0, also tested earlier releases well development version (#701, #704)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-27-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.27.0","text":"Group elements can now deleted (#702) Two error messages now show human-readable type representation instead enum counter value (#705)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-27-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.27.0","text":"test files receives minor refactoring absorbing two files (#698) nightly valgrind run updated include release 2.23.0, release 2.21 removed (#703)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"deprecations-0-27-0","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"tiledb 0.27.0","text":"Function libtiledb_array_create_with_key, accessing deprecated Core function, now src/deprecated.cpp removed later point (#699)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"removals-0-27-0","dir":"Changelog","previous_headings":"","what":"Removals","title":"tiledb 0.27.0","text":"Functions libtiledb_query_add_range_with_type libtiledb_query_add_range, deprecated release 0.17.1 January 2023, now removed (#700).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0260","dir":"Changelog","previous_headings":"","what":"tiledb 0.26.0","title":"tiledb 0.26.0","text":"release R package builds TileDB 2.22.0, also tested earlier releases well development version (#679, #686, #693, #696)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-26-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.26.0","text":"display filter_list now labeled correctly filter list (@cgiachalis #681 addressing #678) Arrow integration simplified using nanoarrow returning single nanoarrow object; unexported helper function nanoarrow2list() provided matching previous interface (#682, #685) new accessor recursive listings (currently S3-) URI now available (TileDB Core >= 2.22.0) (#691) Initial support TILEDB_GEOM_WKB TILEB_GEOM_WKT added (TileDB Core >= 2.21.0) (#692)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-26-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.26.0","text":"column headers now correspond column content two-column data.frame returns tiledb_object_walk (#684 closing #683)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-26-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.26.0","text":"configure Makevars.received minor update correcting small issues (#680) nightly valgrind run updated include release 2.22.0 (#687), release 2.19 2.20 removed (#695)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"documentation-0-26-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"tiledb 0.26.0","text":"number minor typographical grammar errors function documentation corrected (@cgiachalis #681)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"deprecations-0-26-0","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"tiledb 0.26.0","text":"Functions tiledb_arrow_array_ptr(), tiledb_arrow_schmea_ptr(), tiledb_arrow_array_del() tiledb_arrow_schema_del() deprecated (favor using corresponding nanoarrow functions) removed future release (#685) function tiledb_query_submit_async() marked deprecated (underlying C++ function) slated removal future release (#694)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0250","dir":"Changelog","previous_headings":"","what":"tiledb 0.25.0","title":"tiledb 0.25.0","text":"release R package builds TileDB 2.21.0, also tested earlier releases well development version (#661, #666, #668, #676, #677)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-25-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.25.0","text":"vendored nanoarrow sources update release 0.4.0, use facilities extended (#663) Query conditions can expressed non-existing enumeration (.e., factor) values TileDB Core 2.21.0 later used (#674) tiledb_array_upgrade_version helper function upgrade schema version now available (#675)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-25-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.25.0","text":"tiledb_get_query_range_var() accessor now correctly calls range getter variable-sized dimensions (#662) nightly valgrind check now installs require nanoarrow package (#664) Variable cell numbers can now set consistently attribute types (#670) Object walk traversal order detection corrected (#671)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-25-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.25.0","text":"nightly valgrind run updated include release 2.21 (#669) Unit tests added TileDB ‘object’ functions (#671, #672) Obsolete checks ancient Windows version removed unit tests (#673)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0240","dir":"Changelog","previous_headings":"","what":"tiledb 0.24.0","title":"tiledb 0.24.0","text":"release R package builds TileDB 2.20.0, also tested earlier releases well development version (#651,#654,#658,#659)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-24-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.24.0","text":"Factor level additions now check possible index type (#645, #646) Aggregate operations can now performed dense arrays via query object appropriate subarray settings (#650)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-24-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.24.0","text":"Factor level additions ensure factor releveled full set factors (#644) example fromDataFrame() updated, along two help files (#648) Handling temporary files one test script standardized (#653)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-24-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.24.0","text":"nightly valgrind run updated include release 2.20 (#649)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"documentation-0-24-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"tiledb 0.24.0","text":"DESCRIPTION file now contains reference documentation site URL field (#656)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0230","dir":"Changelog","previous_headings":"","what":"tiledb 0.23.0","title":"tiledb 0.23.0","text":"release R package builds TileDB 2.19.0, also tested earlier releases well development version (#641)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-23-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.23.0","text":"TileDB Array can now opened ‘keep open’ mode subsequent use without re-opening (#630) Arrays factor (ordered) variables now grow factor levels appending writes (#639) Initialization object walk order recursive mode now explicit (#640) Use TileDB Embedded upgraded release 2.18.3 (#638), 2.19.0 (#641)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-23-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.23.0","text":"read buffer now correctly sized implementing VFS serialization (#631)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-23-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.23.0","text":"Builds TileDB Core non-release tarballs now supported via new configure option (#627) Tests careful using suggested packages present (#632) building TileDB Core, shared linking now requested explicitly (#634) Nightly automated checks now include Core release-2.19 add ‘curl’ binary (#635) Builds maOS now set release 11 (‘Big Sur’) required minimum version (#636)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0220","dir":"Changelog","previous_headings":"","what":"tiledb 0.22.0","title":"tiledb 0.22.0","text":"release R package builds TileDB 2.18.0, TileDB 2.18.1, TileDB 2.18.2 also tested earlier releases well development version (#620,#621,#624)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-22-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.22.0","text":"Use TileDB Embedded upgraded release 2.18.0 (#620), 2.18.1 (#621), 2.18.2 (#624) Support Aggregates added (#623)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-22-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.22.0","text":"using serializing via VFS (added #608) filehandles now properly released (#619)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-22-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.22.0","text":"tests refactored slightly greater robustness (#618) Support download build external TileDB Core source tarball added (#622)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"documentation-0-22-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"tiledb 0.22.0","text":"README now contains badge r-universe version (addition CRAN) (#617)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0213","dir":"Changelog","previous_headings":"","what":"tiledb 0.21.3","title":"tiledb 0.21.3","text":"release R package builds TileDB 2.17.4, also tested earlier releases well development version (#611)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-21-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.21.3","text":"Query conditioning parsing now supports factor index columns standard integer type (#614)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-21-3","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.21.3","text":"nightly valgrind run updated include release 2.18 (#615)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"documentation-0-21-3","dir":"Changelog","previous_headings":"","what":"Documentation","title":"tiledb 0.21.3","text":"pkgdown documentation updated release 0.21.2 (#613) release 0.21.3 (#616)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0212","dir":"Changelog","previous_headings":"","what":"tiledb 0.21.2","title":"tiledb 0.21.2","text":"release R package builds TileDB 2.17.4, also tested earlier releases well development version (#611)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-21-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.21.2","text":"Set conditions supported query condition expressions (#597) Query conditions expression parsing via parse_query_conditions extended simmilarly (#598) Array fragment deletions uses new static method (TileDB 2.18.0 later) (#599) included nanoarrow header source file updated release 0.3.0 (#600) Query conditions expression parsing requirements stated tested clearly (#601) Use TileDB Embedded upgraded release 2.17.2 (#602) Enumeration (aka ‘factor’) support extended ‘empty’ creation subsequent extension new levelss (#605) Use TileDB Embedded upgraded release 2.17.3 (#606) Factor variables (unlikely) int64 indices supported (#607) R objects can (de-)serialized VFS paths (#608) Enumeration support extended cases supported Arrow (#609) Use TileDB Embedded upgraded release 2.17.4 (#611)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-21-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.21.2","text":"DESCRIPTION file now correctly refers macOS 10.14 (#596) (explicitly) ’batched reader now ensure correct layout sparse arrays (#610)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-21-2","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.21.2","text":"nightly valgrind run updated include release 2.17 (#603)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0211","dir":"Changelog","previous_headings":"","what":"tiledb 0.21.1","title":"tiledb 0.21.1","text":"release R package builds TileDB 2.17.1, also tested earlier releases well development version (#593)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-21-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.21.1","text":"Array schema evolution extended support enumerations (#590, #591) Conversion integer64 (nanotime) now use package RcppInt64 (#592) Use TileDB Embedded upgraded release 2.17.1 (#593)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-21-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.21.1","text":"added sorting factor levels insert reverted (#594)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0210","dir":"Changelog","previous_headings":"","what":"tiledb 0.21.0","title":"tiledb 0.21.0","text":"release R package builds TileDB 2.17.0, also tested earlier releases well development version (#583, #587)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-21-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.21.0","text":"Use TileDB Embedded upgraded release 2.17.0 (#583,#587) Built-time configuration TileDB Embedded can now accessed JSON string (#584) Enumeration types (.e. R calls factor variables) now supported (#562) Enumeration support extended ordered types (#586)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0203","dir":"Changelog","previous_headings":"","what":"tiledb 0.20.3","title":"tiledb 0.20.3","text":"release R package builds TileDB 2.16.2, also tested earlier releases well development version (#582)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-20-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.20.3","text":"Use TileDB Embedded upgraded release 2.16.2 (#581)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0202","dir":"Changelog","previous_headings":"","what":"tiledb 0.20.2","title":"tiledb 0.20.2","text":"release R package builds TileDB 2.16.1, also tested earlier releases well development version (#579)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-20-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.20.2","text":"column buffer allocation now robust container overflow sanitizer checks (#574) array schema version now accessible via function (#575) Use TileDB Embedded upgraded release 2.16.1 (#576) tile extend getter function now able access wider range possible values (#577)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-20-2","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.20.2","text":"minimal version TileDB Embedded can used R package now release 2.7.0 (#578)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0191","dir":"Changelog","previous_headings":"","what":"tiledb 0.19.1","title":"tiledb 0.19.1","text":"release R package builds TileDB 2.15.2, also tested earlier releases well development version (#534, #541).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-19-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.19.1","text":"Query conditions can now expressed attributes type UTF-8 (#529) startup message now displays operating system version (#532) Use TileDB Embedded upgraded release 2.15.1 2.15.2 (#534, #541) Group objects can opened supplying Config object 2.15.1 newer used (#535, #536) character column buffer allocations, R function now accepts nullable option (#537) standard buffer allocations, R function now accepts nullable varnum options (#538) Query conditions can now expressed boolean attributes (#540)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-19-1","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.19.1","text":"Testing Groups reflect stricter behavior config setting requiring close array (#530) use binary packages continuous integration made little robust (#531) small subset tests skipped testing older release 2.14.* (#542)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0190","dir":"Changelog","previous_headings":"","what":"tiledb 0.19.0","title":"tiledb 0.19.0","text":"release R package builds TileDB 2.15.0, also tested earlier releases well development version (#516, #521).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"breaking-changes-0-19-0","dir":"Changelog","previous_headings":"","what":"Breaking Changes","title":"tiledb 0.19.0","text":"validity map coding nullable strings corrected: validity map values one now interpreted valid/non-null full compatibility TileDB projects. Previously written arrays nullable strings can read setting config option r.legacy_validity_mode true; option also permits write older installation. conversion helper script provided scripts/legacy_validity_convert.r. (#517)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-19-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.19.0","text":"Attributes can now created, written read (explicit) UTF8 types (CHAR ASCII already behaved correctly respect utf8 data) (#510) Compilation clang++ longer complains two unused member variables (#512) Query conditions character columns can now expressed using %% operator vector values (#513) Use TileDB Embedded upgraded releases 2.14.1 2.15.0 (#516, #521) Safer checking NAs tiledb_config() support R 4.2 conditional lengths (#519) Query conditions can now combined using & | (addition && ||) (#526)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-19-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.19.0","text":"access JSON-formatted performance statistics simplified (#514)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-19-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.19.0","text":"TileDB Embedded version now used determine whether dampener needed deprecation warning (#511) One test data sets included #517 regenerated older TileDB version order test systems (#523) Documentation Metadata accessors longer states URIs strings accepted (#527)","code":""},{"path":[]},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0180","dir":"Changelog","previous_headings":"","what":"tiledb 0.18.0","title":"tiledb 0.18.0","text":"release R package builds TileDB 2.14.0, also tested earlier releases well development version (#502).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-18-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.18.0","text":"Use TileDB Embedded upgraded release 2.14.0 (#505)","code":""},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-18-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.18.0","text":"nightly valgrind job matrix updated releases 2.13 2.14 well branch (#504) nightly valgrind job show recent commit sha1 updating release branches (#507) query condition test utf8 attributes added (#507, #508)","code":""},{"path":[]},{"path":[]},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0171","dir":"Changelog","previous_headings":"","what":"tiledb 0.17.1","title":"tiledb 0.17.1","text":"release R package builds TileDB 2.13.1, also tested earlier releases well development version (#502).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-17-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.17.1","text":"Support Subarrays set ranges extended (#496) Deprecated Core API functions Array access range setting longer used (#496) TileDB Group objects now default show() method (#498, #499) Domain tile sizes int64 dimension objects now internally converted (#500) Use TileDB Embedded upgraded release 2.13.1 (#501)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-17-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.17.1","text":"Fragment info domain getters now work ASCII domains (#495) scale filter option setting corrected use proper types (#503)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-17-1","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.17.1","text":"nightly valgrind job setup updated include two new dependencies (#493) Windows setup continuous integration updated (#494)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"deprecations-0-17-1","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"tiledb 0.17.1","text":"Functions libtiledb_query_add_range{,_with_type} relying depecreated Core functionality deprecated, removed Core functions. Subarray range setters available. mostly internal change.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"removals-0-17-1","dir":"Changelog","previous_headings":"","what":"Removals","title":"tiledb 0.17.1","text":"Functions libtiledb_query_set_coordinates() libtiledb_coords() deprecated since June 2000 removed. (#497)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0170","dir":"Changelog","previous_headings":"","what":"tiledb 0.17.0","title":"tiledb 0.17.0","text":"release R package builds TileDB 2.13.0, also tested earlier releases well development version (#492).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-17-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.17.0","text":"Support testing group URIs relative added (#478) Logging support R C++ level added (#479, #487, #489) Use TileDB Embedded upgraded release 2.12.1, 2.12.2 (#480, #481) Sparse array queries via tiledb_array ‘[]’ access use UNORDERED query layout (#488) Use TileDB Embedded upgraded release 2.13.0 (#490) Support selecting dimensions discrete points added (#491)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-17-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.17.0","text":"Accomodate possible zero sized allocation estimates attributes (#482) Detect missing columns write-attempt partial data (#483)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-17-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.17.0","text":"Update check-action version three suppressing warning (#477) Code Coverage reports now generated available codecov.io (#484) Small internal changes renaming two files conditioning tests two older releases (#485)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0160","dir":"Changelog","previous_headings":"","what":"tiledb 0.16.0","title":"tiledb 0.16.0","text":"release R package builds TileDB 2.12.0, also tested earlier releases well development version (#476).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-16-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.16.0","text":"Several deprecated API entry points TileDB Embedded longer used (#452, #453) Support DELETE queries added (requires TileDB Embedded 2.12.0 later) (#455, #456) Use TileDB Embedded upgraded release 2.11.1, 2.11.2, 2.11.3 (#460, #466, #474) Support XOR filters added (#472) Support deletion fragments added (#473) Use TileDB Embedded upgraded release 2.12.0 (#475)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-16-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.16.0","text":"Treatment character columns missing values corrected (#454) Accessing encrypted arrays reverted older API accessors (#458) Int64 domain values excess int range now expressed integer64 objects (#465)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-16-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.16.0","text":"Sparse matrix conversion used mainly tests updated version 1.4-2 Matrix packages (#457) Support builds riskv64 platform adding missing link instruction (#459) test setup tweaked trigger spurious valgrind report libcrypto (#461) test setup tweaked make group comparison resilient ordering (#462) test setup refined two filter tests (#467, #468) parameterized test SCALE_FLOAT filter added (#469) test setup ensures per-session directory remains accessible (#470) Continuous integration testing Linux macOS moved GitHub Actions (#471)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0150","dir":"Changelog","previous_headings":"","what":"tiledb 0.15.0","title":"tiledb 0.15.0","text":"release R package builds TileDB 2.11.0, also tested earlier releases well development version (#451).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-15-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.15.0","text":"Support query conditions extended dense arrays (#447) Support filter lists extended data.frame helper dimension object constructor (#448) Use TileDB Embedded upgraded release 2.11.0 (#449)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-15-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.15.0","text":"Small enhancements made test suite (#450)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-15-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.15.0","text":"small enhancement made test system (#450)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0141","dir":"Changelog","previous_headings":"","what":"tiledb 0.14.1","title":"tiledb 0.14.1","text":"release R package builds TileDB 2.10.2, also tested earlier releases well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-14-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.14.1","text":"Use TileDB Embedded upgraded release 2.10.2 (#443) following earlier update 2.10.1 (#434) List columns now supported reading writing data frames extending cell variable numbers beyond one (#438, #440) Query condition support extended data types (#441) ‘SCALE_FLOAT’ filter compression floating-point attributes now supported (TileDB 2.11 later) (#445)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-14-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.14.1","text":"Unit tests refined additional conditioning envuironment variable CI present (#436) unnessary final argument dropped ‘remove member’ method (#437)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-14-1","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.14.1","text":"nightly valgrind check updated Ubuntu 22.04 (#435, #439, #442)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0140","dir":"Changelog","previous_headings":"","what":"tiledb 0.14.0","title":"tiledb 0.14.0","text":"release R package builds TileDB 2.10.0, also tested earlier releases well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-14-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.14.0","text":"Use TileDB Embedded upgraded release 2.10.0 (#432) following earlier updates 2.9.1 (#415), 2.9.2 (#419), 2.9.3 (#422), 2.9.4 (#427) 2.9.5 (#430) BOOL data type now supported (#416) Query conditions support extended support operator (#417) incomplete query result now signaled via warning message (#420) helper function added check Array open (#421) Batched queries now supported given user possibility process larger--memory result sets parts (#429) internal object creation code refactored (#431)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-14-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.14.0","text":"attr setter Attributes corrected support NA settings (#425)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-14-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.14.0","text":"Filter compression tests skipped systems lacking AVX2 support (#418) build system now checks C++17 support (#424) valgrind test upgraded release 2.9.3 2.10 release branch (#426) Tests overlapping ranges added (#428)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0130","dir":"Changelog","previous_headings":"","what":"tiledb 0.13.0","title":"tiledb 0.13.0","text":"release R package builds TileDB 2.9.0, also tested earlier releases well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-13-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.13.0","text":"Support groups added TileDB 2.8 later (#404) group member name retrieval can now also return optional group member name (#399) Allocation creation large string vector buffers refactored (#400) Support dictionary encoding compression filters added TileDB 2.9 later (#404) Support Filestore functionality added TileDB 2.9 later (#410) Support BLOB datatypes added TileDB 2.7 later (#411) Use TileDB Embedded upgraded release 2.9.0 (#413) following earlier updates 2.8.1 (#401), 2.8.2 (#403), 2.8.3 (#408)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-13-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.13.0","text":"Tests filters made robust (#407, #412)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"deprecations-0-13-0","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"tiledb 0.13.0","text":"check() function now deprecated schema_check() provided (#409)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"build-and-test-systems-0-13-0","dir":"Changelog","previous_headings":"","what":"Build and Test Systems","title":"tiledb 0.13.0","text":"Nightly valgrind checks updated use current versions (#397, #402) Following release R 4.2.0, ucrt builds supported Windows (#405)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0120","dir":"Changelog","previous_headings":"","what":"tiledb 0.12.0","title":"tiledb 0.12.0","text":"release R package builds TileDB 2.8.0, also tested earlier releases well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-12-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.12.0","text":"schedule nightly continuous action now checks current release-candidate branches TileDB R package valgrind (#387) Support Groups added (#388, #392, #395) external pointers now tagged validated compile- run-time (#389) now-redundant group-creation method removed (#391) Unit tests group member addition added updated (#393) Group members can also added removed name (#395) Use TileDB Embedded upgraded release 2.8.0 (#396) following earlier upgrades 2.7.0 (#372) 2.7.1 (#384)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-12-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.12.0","text":"detection TileDB headers library now robust cases pkg-config present know TileDB (#385) package documentation website updated (#386) fallback added external pointer creation support compilation without group support TileDB Embedded (#390) incorrectly specified function call corrected (#392) templated initialization external pointer now inlined satisfy compilers (#394)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0111","dir":"Changelog","previous_headings":"","what":"tiledb 0.11.1","title":"tiledb 0.11.1","text":"release R package builds TileDB 2.6.4, also tested earlier releases, development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-11-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.11.1","text":"Use TileDB Embedded upgraded release 2.6.4 (#384) following earlier upgrade 2.6.2 (#359) Creations arrays data.frame objects now supports mode= argument values ‘ingest’, ‘schema_only’, ‘append’ (#360) unit test continuous integration code refactored (#364, #375) Finalizer use now simplified taking advantage Rcpp change (#366) new option strings\\_as\\_factors added data.frame retrieval (#367) arrow C-level interface now uses external pointer objects following Arrow 7.0 (#368) Support memory limits extended, partial reads using iterations complete (#371) Fragment info reading now account __fragments object (#373) nightly test valgrind added; results reported slack (#382, #383) UTF-8 string metadata now supported (#377) Attribute-less arrays can now created, written, read (#378), also via higher-level accessors (#379) plugin Rcpp added (#380)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-11-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.11.1","text":"Array status now checked closing (#362) Signed unsigned int64 dimensions now mapped correctly ‘square-bracket indexing’, third dimension recognised (#365) Domain information overflow int64_t unsigned value used, now flips double (#370) Unit tests consolidation vacuuming update account __fragments (#374) unit test corrected ensure logical expressions length one (#381)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"documentation-0-11-1","dir":"Changelog","previous_headings":"","what":"Documentation","title":"tiledb 0.11.1","text":"new vignette data ingestion added (#357) new vignette installation options added (#358) vignettes now built using package simplermarkdown (#361) Help pages polished (#369)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"deprecations-0-11-1","dir":"Changelog","previous_headings":"","what":"Deprecations","title":"tiledb 0.11.1","text":"tiledb_dense tiledb_sparse functions deprecated February 2021 removed twelve-month grace period.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0110","dir":"Changelog","previous_headings":"","what":"tiledb 0.11.0","title":"tiledb 0.11.0","text":"release R package builds TileDB 2.6.1, also tested previous releases, development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-11-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.11.0","text":"Use TileDB Embedded upgraded release 2.6.1 (#354) following earlier upgrade 2.6.0 (#340) cell value getter dimension added (#341) Getter setter functions validity filter lists added (#349) Memory budget use refined via configurable budget setting (#346, #350) context getter function added query objects (#351) schema display functionality refactored extended (#342, #343, #344, #345, #352, #355) Use TILEDB_CHAR deprecated favor TILEDB_STRING_ASCII (#353)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-11-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.11.0","text":".nojekyll file added prevent unnecessary GitHub Pages builds (#339) getter fill values called TileDB 2.1.0 later (#347) GitHub Actions Windows longer install qpdf never used (#348)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0102","dir":"Changelog","previous_headings":"","what":"tiledb 0.10.2","title":"tiledb 0.10.2","text":"release R package builds TileDB 2.5.3, tested previous releases, development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-10-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.10.2","text":"stopifnot() assertions now use consistent error messages across functions (#331) helper function matching TileDB data types R types now exported (#336)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-10-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.10.2","text":"boolean variable ‘nullable’ now set default value (#329) test accessing shared memory segements now correctly checking TileDB 2.6.0 (#332)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0101","dir":"Changelog","previous_headings":"","what":"tiledb 0.10.1","title":"tiledb 0.10.1","text":"release R package builds TileDB 2.5.2, tested previous releases, development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-10-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.10.1","text":"accessor -recent error message string added (#327)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-10-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.10.1","text":"Linux, pre-made TileDB Embedded library used, lack AVX2 instructions now detected suitable build deployed (#328)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-0100","dir":"Changelog","previous_headings":"","what":"tiledb 0.10.0","title":"tiledb 0.10.0","text":"release R package builds TileDB 2.5.1, tested previous releases, development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-10-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.10.0","text":"CI tests expanded also test refactored TileDB Embedded readers (#310), now deactivated now part release 2.5.0 (#321) minimal version TileDB Embedded can used R package now release 2.0.0 (#313) package now compiles using C++17 standard just like TileDB Embedded (#314) Shared-memory interprocess communication used accelerate operation TileDB Cloud (#316) long-deprecated max_element_size function removed TileDB Embedded, R interface updated accordingly (#317, #319) extended toggle field tiledb_array() can now select dimension-less returns sparse arrays (#318) Use TileDB Embedded upgraded release 2.5.0 (#321) following earlier upgrades 2.4.2 2.4.3 (#308, #312) new quickstart example using ‘memory filesystem’ added, one another example updated (#323)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-10-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.10.0","text":"Tests time-traveling refactored now separate test file (#311) Read-queries longer call finalize() required write-queries (#309) examples updated copy/paste corrections (#317) Single-column data.frame returns work via drop=FALSE needed (#320)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-097","dir":"Changelog","previous_headings":"","what":"tiledb 0.9.7","title":"tiledb 0.9.7","text":"release R package builds TileDB 2.4.0, tested previous releases development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-9-7","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.9.7","text":"Accessors context query statistics added (returning easily parseable JSON strings) (#293). Initial support schema evolution added add drop attributes (#294). Use TileDB Embedded upgraded release 2.4.0 (#295) Windows builds GitHub Actions now also include newer UCRT variant (#296). internal memory allocation switched set_{data,offset,validity}_buffer functions (#297). convenience accessor schema information retrieving ‘dimension’ ‘attribute’ status added (#299). default array type fromDataFrame change sparse match optimizations TileDB Embedded, unit tests updated accordingly (#300). TileDB arrays can now queried expression using pipes (row-wise filtering colunb-wise selection) (#301). matrices well sparse matrices written arrays, optional row column names now supported well (#303, #304). configure script update standards autoconf 2.69 requested CRAN (#305).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-9-7","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.9.7","text":"Use set_{data,offset,validity}_buffer made conditional TileDB 2.4.0 later continue builds older versions (#298). Tests piped expressions rewritten compatible R versions earlier 4.1.0 (#302). dangling documentation link README.md corrected, another removed (#306).","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-096","dir":"Changelog","previous_headings":"","what":"tiledb 0.9.6","title":"tiledb 0.9.6","text":"release R package builds TileDB 2.3.4, tested previous releases development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-9-6","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.9.6","text":"retrieving results via [ operator, incomplete queries generate warning (#283) interface query element size queries extended (#282) query ends ‘incomplete’, warning now issue (#283) status preceding query can now accessed also using higher-level wrapper (#285) Fragment Information can accessed via high-level accessor functions (#286) preference data type TileDB array data returned can set (#288) Continuous Integration use increased test coverage installing optional package (#289) Use TileDB Embedded upgraded release 2.3.4 (#290)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-9-6","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.9.6","text":"One cast statement corrected warning longer triggered clang (#281) added unit tests conditional TileDB Embedded 2.2.* later (#284) time-comparison unit test properly respect timezones corrected (#287)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-095","dir":"Changelog","previous_headings":"","what":"tiledb 0.9.5","title":"tiledb 0.9.5","text":"release R package builds TileDB 2.3.3, also tested previous releases development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-9-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.9.5","text":"query condition parser added use standard (non-quoted) R expressions (#267) Windows UCRT builds CRAN now supported (#268) Use TileDB Embedded upgraded release 2.3.2 (#270), 2.3.3 (#280) vacuum consolidation helper functions now use time stamp support (#271) time-travel array opening support updated start end timestamps (#272) Tests vacuuming consolidation ‘time traveling’ added (#273) Nullable string string attribute support improved (#274) Ascii columns attribute support added (#276) query parser heuristic improved cover ascii strings (#277) Array opening uses improvemed array state consideration skippingg re-openings better performance (#279)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-9-5","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.9.5","text":"Domain size information gathering corrected uint32, uint64, int64 attribute domains (#266) Timesteps time-traveling unit tests adjusted trip macOS continuous integration tests (#275) String array buffer size calculation corrected also allowing -string arrays (#278)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-094","dir":"Changelog","previous_headings":"","what":"tiledb 0.9.4","title":"tiledb 0.9.4","text":"release R package builds TileDB 2.3.1, also tested previous releases development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-9-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.9.4","text":"build defaults TileDB Embedded 2.3.* (unless another version found build, explicitly selected) (#258, #264) Query condition support available TileDB 2.3.0 later, allowing (possibly multiple) numerical constraints attributes (#261) Multi-dimensional arrays can now returned (dense) arrays via new option (#263) package now natively supported Arm64 (“M1”) macOS system (#264)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-9-4","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.9.4","text":"Dense arrays two dimensions can now written (#260)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-093","dir":"Changelog","previous_headings":"","what":"tiledb 0.9.3","title":"tiledb 0.9.3","text":"release R package builds TileDB 2.2.9, also tested previous releases well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-9-3","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.9.3","text":"Continuous integration GitHub now faster suggested packages longer installed (#250) Arrays can now written incrementally via higher-level replacement function arr[] <- obj (#251) default column layout arrays written via fromDataFrame now column-order (#254)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-9-3","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.9.3","text":"call vaccum correctly calls library function vaccum instead consolidation function (#252) several columns selected via selected_ranges, potentially necessary reordering done query (#253) Dense subarrays can written tiledb_array (#256)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-092","dir":"Changelog","previous_headings":"","what":"tiledb 0.9.2","title":"tiledb 0.9.2","text":"release R package builds TileDB 2.2.9, also tested previous releases well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-9-2","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.9.2","text":"Matrix objects can now returned range selections (#247) Matrix return get turned setter / getter functions (#248)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-9-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.9.2","text":"Unit tests character columns data frames accomodate R versions prior R 4.0.0 cases (#243) Dimension reduction attribute-selected columns incorrect cases (#245) Attribute-selected columns using incorrect dimension data types cases (#246)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-091","dir":"Changelog","previous_headings":"","what":"tiledb 0.9.1","title":"tiledb 0.9.1","text":"release R package builds TileDB 2.2.9, also tested previous releases well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-9-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.9.1","text":"new vignette show use TileDB array via RMariaDB MyTile extension MariaDB (#221) Matrices can now returned directly suitable two-dimensional TileDB arrays (#225) data types supported non-empty domain accessor function (#229) DESCRIPTION, README.md pkgdown site updated (#230) Creation TileDB arrays data.frame object made robust (#238) startup, versions numbers R package TileDB Embedded library displayed (#239) pkgdown website now shows ChangeLog derived NEWS file (#240)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-9-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.9.1","text":"Two tests datetime comparisons fail one macOS system now conditional (#216) Result sets -character column now fall back estimated result sizes (#217) Setup support duplicate values sparse arrays corrected (#223) Error messages concerning array types selection mismatch now clearer (#224) Writes data.frame objects dense array revert back column-major order (#226) Tests sparse writes dense matrices now use UNORDERED layout (#228) Data.frame returns selected columns now coversion dimensions well (#231) Schema creation generalized made robust (#232) Selection dimension ranges now maps date datetime values correctly (#233, #241) Selection setting dimension ranges generalized made robust (#235, #236)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-090","dir":"Changelog","previous_headings":"","what":"tiledb 0.9.0","title":"tiledb 0.9.0","text":"release R package builds TileDB 2.2.4, also tested two previous release series well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-9-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.9.0","text":"older implementations tiledb_dense tiledb_sparse now marked deprecated favor tiledb_array. removal date set planned yet, recommended migrate new code. (#180) Updated underlying TileDB library use TileDB 2.1.2 macOS Linux (system library found) (#181) extended support array creation directly DataFrame objects. (#182) Internal TileDB performance statistics can now exported ‘raw’ JSON format (TileDB versions greater 2.0.3). (#183, #186) vignette updated respect preferred used tiledb_array. (#184) Hilbert cell layout added recently TileDB Embbeded supported. (#185) Virtual File System functions now use default VFS object allows simpler interface (#187) TileDB Array Dimension support extended data types (#188) Datetime support Dimensions Attributes extended (#189) API coverage increased alongside update documentation (#190) Array schema can now accessed printed directly URI (#191) accessor estimated array result size updated updaded API (#192) Initial Arrow support importing exporting vector added (#193, #199) Support default TileDB Embedded library set 2.1.3 2.1.4 (#194, #195) package documentation updated extended (#196) Support ‘time-traveling’ access arrays extended (#197) Support default TileDB Embedded library set 2.1.5 2.1.6 (#198, #200) Support default TileDB Embedded library set 2.2.0 2.2.1 (#201, #202) vignettes updated extended (#203) fromDataFrame() function extended (#204) unit tests conditioned TileDB Embedded 2.1.0 later (#205) Support default TileDB Embedded library set 2.2.2 2.2.3 (#206, #208) default TileDB Embedded library version now set centrally (#207) Support added write read sparse matrices directly via higher-level functions (#209) Arrow array schema allocation deallocation helper functions added (#210) Support Nullable vectors added (#211) Support default TileDB Embedded library set 2.2.4 (#212) Small tweaks timezone factor settings unit tests, vignette (#213, #214, #215)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-082","dir":"Changelog","previous_headings":"","what":"tiledb 0.8.2","title":"tiledb 0.8.2","text":"release R package builds TileDB 2.1.1, also tested previous releases well development version.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-8-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.8.2","text":"tiledb_stats_reset() function now exported, tiledb_stats_print() re-added wrapper tiledb_stats_dump() (#174) Configuration options compute input/output concurrency set new TileDB 2.1 configuration options; documentation checking values expanded. (#175) download.file() use now (re-)sets timeout standard value accomodate uses lower value may set CRAN builders (#176) Build scripts updated use TileDB 2.1.1 Windows, macOS Linux (system library found) (#178)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-081","dir":"Changelog","previous_headings":"","what":"tiledb 0.8.1","title":"tiledb 0.8.1","text":"release R package supports TileDB 2.1.0, also tested previous release TileDB 2.0.8.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-8-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.8.1","text":"R-based metadata accessors extended also support tiledb_array arrays (#169) configure now also checks hardware platform attempting download prebuilt library (#170) SystemRequirements: DESCRIPTION file expanded (#170)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-8-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.8.1","text":"typo manual page source, copied three times, corrected (#167)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-080","dir":"Changelog","previous_headings":"","what":"tiledb 0.8.0","title":"tiledb 0.8.0","text":"release R package supports TileDB 2.0.8, also tested previous release TileDB 1.7.7.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-8-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.8.0","text":"new function limitTileDBCores() controls resource use, used tests (#139) function tiledb_get_context() now exported (#140) new S4 class tiledb_vfs provides access virtual file system functionality (#140) Functionality selected_ranges() extended (#142) (signed unsigned) integer types supported dimension types sparse arrays (#143), well dense arrays (#144) attributes (#144) new S4 class tiledb_query offers access query object functionality underlying library (#145, #161) Examples running lowered thread count setting per CRAN Policies (#152) External pointer objects now use explicitly set finalizers (#149) Users can explicitly select TileDB Embedded shared library built used (#151) Compile-time configuration refactored changes (#158) Windows builds now possible also using TileDB Embedded build 2.0.8 (#159, #164) Continuous integration now uses Azure macOS Linux (#160) GitHub Actions Windows (#162,#165)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.8.0","text":"Conda builds longer call install_name_tool (#133, #146) Downloading prebuild library accomodates multitple targets per architecture (#150) number TBB threads set (#158)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-071","dir":"Changelog","previous_headings":"","what":"tiledb 0.7.1","title":"tiledb 0.7.1","text":"release R package supports TileDB 1.7.7 TileDB 2.0.5","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-7-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.7.1","text":"Range selection tiledb_array objects can get/set matrices defining range (#132) show methods now consistently exported documented (#134) TileDB listed copyright owner DESCRIPTION well (#134) selected_ranges method tiledb_array types improved, tests added (#135) C++ source code rearranged slightly respect possible API deprecations libary (#136) simple example using TileDB Cloud R added (#136) helper scripts package build now tools/ directory (#137) (optional) library download now relied suggested R packages ‘jsonlite’ ‘curl’ (#137)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"bug-fixes-0-7-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"tiledb 0.7.1","text":"character conversion retrieving array metadata resulting --bounds reads corrected (#137)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-070","dir":"Changelog","previous_headings":"","what":"tiledb 0.7.0","title":"tiledb 0.7.0","text":"release R package supports TileDB 1.7.7 TileDB 2.0.5","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-7-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.7.0","text":"S4 classes now consistently documented aliased (#117) needed, build system now builds TileDB required component (#118) Data.frame support extended made robust (#119, #123, #128) Description: DESCRIPTION refreshed (#120) Builds Linux macOS can use pre-built TileDB library (#121, #122, #124, #127) Copyright headers added source files (#125) pkg-config helper can used building source (#126) introductory vignette added (#129, #131)","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-060","dir":"Changelog","previous_headings":"","what":"tiledb 0.6.0","title":"tiledb 0.6.0","text":"release R package supports TileDB 1.7.7 TileDB 2.0.0","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-6-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.6.0","text":"Added support heterogenous domains Added support string dimensions Added support duplicate dimension values sparse arrays Added support data.frame object import conversion dense sparse arrays Added enhanced support data.frame returns dense array Added support data.frame column selection (.e. attributes) dense array Added support new filter types md5 sha256 checksums Added support Date, Datetime (.e. POSIXct) nanosecond dense sparse array attributes domains Documentation examples enhanced extended tiledb_stats_dump() now simpler (needs enabled first usual) Support nanosecond integer64 columns added, optional feature nanotime (bit64) packages need installed","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"changes-0-6-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"tiledb 0.6.0","text":"Dimension attributes must now named","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-050","dir":"Changelog","previous_headings":"","what":"tiledb 0.5.0","title":"tiledb 0.5.0","text":"release R package builds 1.7.5 releases TileDB.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-5-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.5.0","text":"result size estimation ‘time travel’ time-points added #105 Added additional support metadata #106","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"tiledb-040","dir":"Changelog","previous_headings":"","what":"tiledb 0.4.0","title":"tiledb 0.4.0","text":"release R package builds 1.7.* releases tiledb.","code":""},{"path":"https://tiledb-inc.github.io/TileDB-R/news/index.html","id":"improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"tiledb 0.4.0","text":"release contains increased coverage underlying API, additional documentation well unit tests.","code":""}]
